generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id       Int     @id @default(autoincrement())
  nombre   String
  email    String  @unique
  password String
  rol      String?
  permisos Json?
  citas    Cita[]  @relation("UsuarioCitas")

  resetToken    String? // campo opcional para token de reseteo
  resetTokenExp DateTime? // campo opcional para expiraciÃ³n del token
}

model Actividad {
  id             Int       @id @default(autoincrement())
  nombre         String
  descripcion    String?
  tipoId         Int
  periodicidadId Int
  fechaInicio    DateTime? // ðŸ‘ˆ Agrega esto
  fechaFin       DateTime? // ðŸ‘ˆ Y esto
  cupo           Int?
  lugarId        Int?
  socioId        Int?
  proyectoId     Int?
  creadoPor      Int?

  lugar         Lugar?              @relation(fields: [lugarId], references: [id])
  periodicidad  Periodicidad        @relation(fields: [periodicidadId], references: [id])
  proyecto      Proyecto?           @relation(fields: [proyectoId], references: [id])
  tipo          TipoActividad       @relation(fields: [tipoId], references: [id])
  archivos      Archivo[]
  beneficiarios Beneficiario[]
  citas         Cita[]
  oferentes     OferenteActividad[] @relation("ActividadOferente")
}

model Cita {
  id          Int       @id @default(autoincrement())
  actividadId Int
  lugarId     Int
  fecha       DateTime
  hora        DateTime
  usuarioId   Int?
  actividad   Actividad @relation(fields: [actividadId], references: [id])
  lugar       Lugar     @relation(fields: [lugarId], references: [id])
  usuario     Usuario?  @relation("UsuarioCitas", fields: [usuarioId], references: [id])

  @@index([actividadId], map: "Cita_actividadId_fkey")
  @@index([lugarId], map: "Cita_lugarId_fkey")
  @@index([usuarioId], map: "Cita_usuarioId_fkey")
}

model TipoActividad {
  id          Int         @id @default(autoincrement())
  nombre      String
  descripcion String
  actividades Actividad[]
}

model Periodicidad {
  id          Int         @id @default(autoincrement())
  nombre      String
  actividades Actividad[]
}

model Lugar {
  id          Int         @id @default(autoincrement())
  nombre      String
  cupo        Int?
  actividades Actividad[]
  citas       Cita[]
}

model OferenteActividad {
  id          Int       @id @default(autoincrement())
  nombre      String
  docente     String
  actividadId Int
  actividad   Actividad @relation("ActividadOferente", fields: [actividadId], references: [id])

  @@index([actividadId], map: "OferenteActividad_actividadId_fkey")
}

model SocioComunitario {
  id     Int     @id @default(autoincrement())
  nombre String  @unique
  activo Boolean @default(true)
}

model Proyecto {
  id          Int         @id @default(autoincrement())
  nombre      String
  actividades Actividad[]
}

model Archivo {
  id          Int       @id @default(autoincrement())
  url         String
  descripcion String?
  actividadId Int
  actividad   Actividad @relation(fields: [actividadId], references: [id])

  @@index([actividadId], map: "Archivo_actividadId_fkey")
}

model Beneficiario {
  id              Int       @id @default(autoincrement())
  caracterizacion String
  actividadId     Int
  actividad       Actividad @relation(fields: [actividadId], references: [id])

  @@index([actividadId], map: "Beneficiario_actividadId_fkey")
}
