
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Actividad
 * 
 */
export type Actividad = $Result.DefaultSelection<Prisma.$ActividadPayload>
/**
 * Model Cita
 * 
 */
export type Cita = $Result.DefaultSelection<Prisma.$CitaPayload>
/**
 * Model TipoActividad
 * 
 */
export type TipoActividad = $Result.DefaultSelection<Prisma.$TipoActividadPayload>
/**
 * Model Periodicidad
 * 
 */
export type Periodicidad = $Result.DefaultSelection<Prisma.$PeriodicidadPayload>
/**
 * Model Lugar
 * 
 */
export type Lugar = $Result.DefaultSelection<Prisma.$LugarPayload>
/**
 * Model OferenteActividad
 * 
 */
export type OferenteActividad = $Result.DefaultSelection<Prisma.$OferenteActividadPayload>
/**
 * Model SocioComunitario
 * 
 */
export type SocioComunitario = $Result.DefaultSelection<Prisma.$SocioComunitarioPayload>
/**
 * Model Proyecto
 * 
 */
export type Proyecto = $Result.DefaultSelection<Prisma.$ProyectoPayload>
/**
 * Model Archivo
 * 
 */
export type Archivo = $Result.DefaultSelection<Prisma.$ArchivoPayload>
/**
 * Model Beneficiario
 * 
 */
export type Beneficiario = $Result.DefaultSelection<Prisma.$BeneficiarioPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuario.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuario.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.actividad`: Exposes CRUD operations for the **Actividad** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Actividads
    * const actividads = await prisma.actividad.findMany()
    * ```
    */
  get actividad(): Prisma.ActividadDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cita`: Exposes CRUD operations for the **Cita** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Citas
    * const citas = await prisma.cita.findMany()
    * ```
    */
  get cita(): Prisma.CitaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tipoActividad`: Exposes CRUD operations for the **TipoActividad** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TipoActividads
    * const tipoActividads = await prisma.tipoActividad.findMany()
    * ```
    */
  get tipoActividad(): Prisma.TipoActividadDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.periodicidad`: Exposes CRUD operations for the **Periodicidad** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Periodicidads
    * const periodicidads = await prisma.periodicidad.findMany()
    * ```
    */
  get periodicidad(): Prisma.PeriodicidadDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.lugar`: Exposes CRUD operations for the **Lugar** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Lugars
    * const lugars = await prisma.lugar.findMany()
    * ```
    */
  get lugar(): Prisma.LugarDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.oferenteActividad`: Exposes CRUD operations for the **OferenteActividad** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OferenteActividads
    * const oferenteActividads = await prisma.oferenteActividad.findMany()
    * ```
    */
  get oferenteActividad(): Prisma.OferenteActividadDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.socioComunitario`: Exposes CRUD operations for the **SocioComunitario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SocioComunitarios
    * const socioComunitarios = await prisma.socioComunitario.findMany()
    * ```
    */
  get socioComunitario(): Prisma.SocioComunitarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.proyecto`: Exposes CRUD operations for the **Proyecto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Proyectos
    * const proyectos = await prisma.proyecto.findMany()
    * ```
    */
  get proyecto(): Prisma.ProyectoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.archivo`: Exposes CRUD operations for the **Archivo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Archivos
    * const archivos = await prisma.archivo.findMany()
    * ```
    */
  get archivo(): Prisma.ArchivoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.beneficiario`: Exposes CRUD operations for the **Beneficiario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Beneficiarios
    * const beneficiarios = await prisma.beneficiario.findMany()
    * ```
    */
  get beneficiario(): Prisma.BeneficiarioDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.10.1
   * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Usuario: 'Usuario',
    Actividad: 'Actividad',
    Cita: 'Cita',
    TipoActividad: 'TipoActividad',
    Periodicidad: 'Periodicidad',
    Lugar: 'Lugar',
    OferenteActividad: 'OferenteActividad',
    SocioComunitario: 'SocioComunitario',
    Proyecto: 'Proyecto',
    Archivo: 'Archivo',
    Beneficiario: 'Beneficiario'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "usuario" | "actividad" | "cita" | "tipoActividad" | "periodicidad" | "lugar" | "oferenteActividad" | "socioComunitario" | "proyecto" | "archivo" | "beneficiario"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Actividad: {
        payload: Prisma.$ActividadPayload<ExtArgs>
        fields: Prisma.ActividadFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ActividadFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActividadPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ActividadFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActividadPayload>
          }
          findFirst: {
            args: Prisma.ActividadFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActividadPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ActividadFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActividadPayload>
          }
          findMany: {
            args: Prisma.ActividadFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActividadPayload>[]
          }
          create: {
            args: Prisma.ActividadCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActividadPayload>
          }
          createMany: {
            args: Prisma.ActividadCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ActividadDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActividadPayload>
          }
          update: {
            args: Prisma.ActividadUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActividadPayload>
          }
          deleteMany: {
            args: Prisma.ActividadDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ActividadUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ActividadUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActividadPayload>
          }
          aggregate: {
            args: Prisma.ActividadAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateActividad>
          }
          groupBy: {
            args: Prisma.ActividadGroupByArgs<ExtArgs>
            result: $Utils.Optional<ActividadGroupByOutputType>[]
          }
          count: {
            args: Prisma.ActividadCountArgs<ExtArgs>
            result: $Utils.Optional<ActividadCountAggregateOutputType> | number
          }
        }
      }
      Cita: {
        payload: Prisma.$CitaPayload<ExtArgs>
        fields: Prisma.CitaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CitaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CitaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CitaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CitaPayload>
          }
          findFirst: {
            args: Prisma.CitaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CitaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CitaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CitaPayload>
          }
          findMany: {
            args: Prisma.CitaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CitaPayload>[]
          }
          create: {
            args: Prisma.CitaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CitaPayload>
          }
          createMany: {
            args: Prisma.CitaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CitaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CitaPayload>
          }
          update: {
            args: Prisma.CitaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CitaPayload>
          }
          deleteMany: {
            args: Prisma.CitaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CitaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CitaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CitaPayload>
          }
          aggregate: {
            args: Prisma.CitaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCita>
          }
          groupBy: {
            args: Prisma.CitaGroupByArgs<ExtArgs>
            result: $Utils.Optional<CitaGroupByOutputType>[]
          }
          count: {
            args: Prisma.CitaCountArgs<ExtArgs>
            result: $Utils.Optional<CitaCountAggregateOutputType> | number
          }
        }
      }
      TipoActividad: {
        payload: Prisma.$TipoActividadPayload<ExtArgs>
        fields: Prisma.TipoActividadFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TipoActividadFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoActividadPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TipoActividadFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoActividadPayload>
          }
          findFirst: {
            args: Prisma.TipoActividadFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoActividadPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TipoActividadFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoActividadPayload>
          }
          findMany: {
            args: Prisma.TipoActividadFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoActividadPayload>[]
          }
          create: {
            args: Prisma.TipoActividadCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoActividadPayload>
          }
          createMany: {
            args: Prisma.TipoActividadCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TipoActividadDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoActividadPayload>
          }
          update: {
            args: Prisma.TipoActividadUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoActividadPayload>
          }
          deleteMany: {
            args: Prisma.TipoActividadDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TipoActividadUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TipoActividadUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoActividadPayload>
          }
          aggregate: {
            args: Prisma.TipoActividadAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipoActividad>
          }
          groupBy: {
            args: Prisma.TipoActividadGroupByArgs<ExtArgs>
            result: $Utils.Optional<TipoActividadGroupByOutputType>[]
          }
          count: {
            args: Prisma.TipoActividadCountArgs<ExtArgs>
            result: $Utils.Optional<TipoActividadCountAggregateOutputType> | number
          }
        }
      }
      Periodicidad: {
        payload: Prisma.$PeriodicidadPayload<ExtArgs>
        fields: Prisma.PeriodicidadFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PeriodicidadFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PeriodicidadPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PeriodicidadFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PeriodicidadPayload>
          }
          findFirst: {
            args: Prisma.PeriodicidadFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PeriodicidadPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PeriodicidadFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PeriodicidadPayload>
          }
          findMany: {
            args: Prisma.PeriodicidadFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PeriodicidadPayload>[]
          }
          create: {
            args: Prisma.PeriodicidadCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PeriodicidadPayload>
          }
          createMany: {
            args: Prisma.PeriodicidadCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PeriodicidadDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PeriodicidadPayload>
          }
          update: {
            args: Prisma.PeriodicidadUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PeriodicidadPayload>
          }
          deleteMany: {
            args: Prisma.PeriodicidadDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PeriodicidadUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PeriodicidadUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PeriodicidadPayload>
          }
          aggregate: {
            args: Prisma.PeriodicidadAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePeriodicidad>
          }
          groupBy: {
            args: Prisma.PeriodicidadGroupByArgs<ExtArgs>
            result: $Utils.Optional<PeriodicidadGroupByOutputType>[]
          }
          count: {
            args: Prisma.PeriodicidadCountArgs<ExtArgs>
            result: $Utils.Optional<PeriodicidadCountAggregateOutputType> | number
          }
        }
      }
      Lugar: {
        payload: Prisma.$LugarPayload<ExtArgs>
        fields: Prisma.LugarFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LugarFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LugarPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LugarFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LugarPayload>
          }
          findFirst: {
            args: Prisma.LugarFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LugarPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LugarFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LugarPayload>
          }
          findMany: {
            args: Prisma.LugarFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LugarPayload>[]
          }
          create: {
            args: Prisma.LugarCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LugarPayload>
          }
          createMany: {
            args: Prisma.LugarCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.LugarDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LugarPayload>
          }
          update: {
            args: Prisma.LugarUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LugarPayload>
          }
          deleteMany: {
            args: Prisma.LugarDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LugarUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.LugarUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LugarPayload>
          }
          aggregate: {
            args: Prisma.LugarAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLugar>
          }
          groupBy: {
            args: Prisma.LugarGroupByArgs<ExtArgs>
            result: $Utils.Optional<LugarGroupByOutputType>[]
          }
          count: {
            args: Prisma.LugarCountArgs<ExtArgs>
            result: $Utils.Optional<LugarCountAggregateOutputType> | number
          }
        }
      }
      OferenteActividad: {
        payload: Prisma.$OferenteActividadPayload<ExtArgs>
        fields: Prisma.OferenteActividadFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OferenteActividadFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OferenteActividadPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OferenteActividadFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OferenteActividadPayload>
          }
          findFirst: {
            args: Prisma.OferenteActividadFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OferenteActividadPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OferenteActividadFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OferenteActividadPayload>
          }
          findMany: {
            args: Prisma.OferenteActividadFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OferenteActividadPayload>[]
          }
          create: {
            args: Prisma.OferenteActividadCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OferenteActividadPayload>
          }
          createMany: {
            args: Prisma.OferenteActividadCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.OferenteActividadDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OferenteActividadPayload>
          }
          update: {
            args: Prisma.OferenteActividadUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OferenteActividadPayload>
          }
          deleteMany: {
            args: Prisma.OferenteActividadDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OferenteActividadUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OferenteActividadUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OferenteActividadPayload>
          }
          aggregate: {
            args: Prisma.OferenteActividadAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOferenteActividad>
          }
          groupBy: {
            args: Prisma.OferenteActividadGroupByArgs<ExtArgs>
            result: $Utils.Optional<OferenteActividadGroupByOutputType>[]
          }
          count: {
            args: Prisma.OferenteActividadCountArgs<ExtArgs>
            result: $Utils.Optional<OferenteActividadCountAggregateOutputType> | number
          }
        }
      }
      SocioComunitario: {
        payload: Prisma.$SocioComunitarioPayload<ExtArgs>
        fields: Prisma.SocioComunitarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SocioComunitarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocioComunitarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SocioComunitarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocioComunitarioPayload>
          }
          findFirst: {
            args: Prisma.SocioComunitarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocioComunitarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SocioComunitarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocioComunitarioPayload>
          }
          findMany: {
            args: Prisma.SocioComunitarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocioComunitarioPayload>[]
          }
          create: {
            args: Prisma.SocioComunitarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocioComunitarioPayload>
          }
          createMany: {
            args: Prisma.SocioComunitarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SocioComunitarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocioComunitarioPayload>
          }
          update: {
            args: Prisma.SocioComunitarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocioComunitarioPayload>
          }
          deleteMany: {
            args: Prisma.SocioComunitarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SocioComunitarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SocioComunitarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocioComunitarioPayload>
          }
          aggregate: {
            args: Prisma.SocioComunitarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSocioComunitario>
          }
          groupBy: {
            args: Prisma.SocioComunitarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<SocioComunitarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.SocioComunitarioCountArgs<ExtArgs>
            result: $Utils.Optional<SocioComunitarioCountAggregateOutputType> | number
          }
        }
      }
      Proyecto: {
        payload: Prisma.$ProyectoPayload<ExtArgs>
        fields: Prisma.ProyectoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProyectoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProyectoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProyectoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProyectoPayload>
          }
          findFirst: {
            args: Prisma.ProyectoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProyectoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProyectoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProyectoPayload>
          }
          findMany: {
            args: Prisma.ProyectoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProyectoPayload>[]
          }
          create: {
            args: Prisma.ProyectoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProyectoPayload>
          }
          createMany: {
            args: Prisma.ProyectoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ProyectoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProyectoPayload>
          }
          update: {
            args: Prisma.ProyectoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProyectoPayload>
          }
          deleteMany: {
            args: Prisma.ProyectoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProyectoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProyectoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProyectoPayload>
          }
          aggregate: {
            args: Prisma.ProyectoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProyecto>
          }
          groupBy: {
            args: Prisma.ProyectoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProyectoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProyectoCountArgs<ExtArgs>
            result: $Utils.Optional<ProyectoCountAggregateOutputType> | number
          }
        }
      }
      Archivo: {
        payload: Prisma.$ArchivoPayload<ExtArgs>
        fields: Prisma.ArchivoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ArchivoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ArchivoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivoPayload>
          }
          findFirst: {
            args: Prisma.ArchivoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ArchivoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivoPayload>
          }
          findMany: {
            args: Prisma.ArchivoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivoPayload>[]
          }
          create: {
            args: Prisma.ArchivoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivoPayload>
          }
          createMany: {
            args: Prisma.ArchivoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ArchivoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivoPayload>
          }
          update: {
            args: Prisma.ArchivoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivoPayload>
          }
          deleteMany: {
            args: Prisma.ArchivoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ArchivoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ArchivoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivoPayload>
          }
          aggregate: {
            args: Prisma.ArchivoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateArchivo>
          }
          groupBy: {
            args: Prisma.ArchivoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ArchivoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ArchivoCountArgs<ExtArgs>
            result: $Utils.Optional<ArchivoCountAggregateOutputType> | number
          }
        }
      }
      Beneficiario: {
        payload: Prisma.$BeneficiarioPayload<ExtArgs>
        fields: Prisma.BeneficiarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BeneficiarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficiarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BeneficiarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficiarioPayload>
          }
          findFirst: {
            args: Prisma.BeneficiarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficiarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BeneficiarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficiarioPayload>
          }
          findMany: {
            args: Prisma.BeneficiarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficiarioPayload>[]
          }
          create: {
            args: Prisma.BeneficiarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficiarioPayload>
          }
          createMany: {
            args: Prisma.BeneficiarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.BeneficiarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficiarioPayload>
          }
          update: {
            args: Prisma.BeneficiarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficiarioPayload>
          }
          deleteMany: {
            args: Prisma.BeneficiarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BeneficiarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BeneficiarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficiarioPayload>
          }
          aggregate: {
            args: Prisma.BeneficiarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBeneficiario>
          }
          groupBy: {
            args: Prisma.BeneficiarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<BeneficiarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.BeneficiarioCountArgs<ExtArgs>
            result: $Utils.Optional<BeneficiarioCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    usuario?: UsuarioOmit
    actividad?: ActividadOmit
    cita?: CitaOmit
    tipoActividad?: TipoActividadOmit
    periodicidad?: PeriodicidadOmit
    lugar?: LugarOmit
    oferenteActividad?: OferenteActividadOmit
    socioComunitario?: SocioComunitarioOmit
    proyecto?: ProyectoOmit
    archivo?: ArchivoOmit
    beneficiario?: BeneficiarioOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    citas: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | UsuarioCountOutputTypeCountCitasArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CitaWhereInput
  }


  /**
   * Count Type ActividadCountOutputType
   */

  export type ActividadCountOutputType = {
    archivos: number
    beneficiarios: number
    citas: number
    oferentes: number
  }

  export type ActividadCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    archivos?: boolean | ActividadCountOutputTypeCountArchivosArgs
    beneficiarios?: boolean | ActividadCountOutputTypeCountBeneficiariosArgs
    citas?: boolean | ActividadCountOutputTypeCountCitasArgs
    oferentes?: boolean | ActividadCountOutputTypeCountOferentesArgs
  }

  // Custom InputTypes
  /**
   * ActividadCountOutputType without action
   */
  export type ActividadCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActividadCountOutputType
     */
    select?: ActividadCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ActividadCountOutputType without action
   */
  export type ActividadCountOutputTypeCountArchivosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArchivoWhereInput
  }

  /**
   * ActividadCountOutputType without action
   */
  export type ActividadCountOutputTypeCountBeneficiariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BeneficiarioWhereInput
  }

  /**
   * ActividadCountOutputType without action
   */
  export type ActividadCountOutputTypeCountCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CitaWhereInput
  }

  /**
   * ActividadCountOutputType without action
   */
  export type ActividadCountOutputTypeCountOferentesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OferenteActividadWhereInput
  }


  /**
   * Count Type TipoActividadCountOutputType
   */

  export type TipoActividadCountOutputType = {
    actividades: number
  }

  export type TipoActividadCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    actividades?: boolean | TipoActividadCountOutputTypeCountActividadesArgs
  }

  // Custom InputTypes
  /**
   * TipoActividadCountOutputType without action
   */
  export type TipoActividadCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoActividadCountOutputType
     */
    select?: TipoActividadCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TipoActividadCountOutputType without action
   */
  export type TipoActividadCountOutputTypeCountActividadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActividadWhereInput
  }


  /**
   * Count Type PeriodicidadCountOutputType
   */

  export type PeriodicidadCountOutputType = {
    actividades: number
  }

  export type PeriodicidadCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    actividades?: boolean | PeriodicidadCountOutputTypeCountActividadesArgs
  }

  // Custom InputTypes
  /**
   * PeriodicidadCountOutputType without action
   */
  export type PeriodicidadCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PeriodicidadCountOutputType
     */
    select?: PeriodicidadCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PeriodicidadCountOutputType without action
   */
  export type PeriodicidadCountOutputTypeCountActividadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActividadWhereInput
  }


  /**
   * Count Type LugarCountOutputType
   */

  export type LugarCountOutputType = {
    actividades: number
    citas: number
  }

  export type LugarCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    actividades?: boolean | LugarCountOutputTypeCountActividadesArgs
    citas?: boolean | LugarCountOutputTypeCountCitasArgs
  }

  // Custom InputTypes
  /**
   * LugarCountOutputType without action
   */
  export type LugarCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LugarCountOutputType
     */
    select?: LugarCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LugarCountOutputType without action
   */
  export type LugarCountOutputTypeCountActividadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActividadWhereInput
  }

  /**
   * LugarCountOutputType without action
   */
  export type LugarCountOutputTypeCountCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CitaWhereInput
  }


  /**
   * Count Type ProyectoCountOutputType
   */

  export type ProyectoCountOutputType = {
    actividades: number
  }

  export type ProyectoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    actividades?: boolean | ProyectoCountOutputTypeCountActividadesArgs
  }

  // Custom InputTypes
  /**
   * ProyectoCountOutputType without action
   */
  export type ProyectoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProyectoCountOutputType
     */
    select?: ProyectoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProyectoCountOutputType without action
   */
  export type ProyectoCountOutputTypeCountActividadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActividadWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    email: string | null
    password: string | null
    rol: string | null
    resetToken: string | null
    resetTokenExp: Date | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    email: string | null
    password: string | null
    rol: string | null
    resetToken: string | null
    resetTokenExp: Date | null
  }

  export type UsuarioCountAggregateOutputType = {
    id: number
    nombre: number
    email: number
    password: number
    rol: number
    permisos: number
    resetToken: number
    resetTokenExp: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id?: true
  }

  export type UsuarioSumAggregateInputType = {
    id?: true
  }

  export type UsuarioMinAggregateInputType = {
    id?: true
    nombre?: true
    email?: true
    password?: true
    rol?: true
    resetToken?: true
    resetTokenExp?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id?: true
    nombre?: true
    email?: true
    password?: true
    rol?: true
    resetToken?: true
    resetTokenExp?: true
  }

  export type UsuarioCountAggregateInputType = {
    id?: true
    nombre?: true
    email?: true
    password?: true
    rol?: true
    permisos?: true
    resetToken?: true
    resetTokenExp?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id: number
    nombre: string
    email: string
    password: string
    rol: string | null
    permisos: JsonValue | null
    resetToken: string | null
    resetTokenExp: Date | null
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    rol?: boolean
    permisos?: boolean
    resetToken?: boolean
    resetTokenExp?: boolean
    citas?: boolean | Usuario$citasArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>



  export type UsuarioSelectScalar = {
    id?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    rol?: boolean
    permisos?: boolean
    resetToken?: boolean
    resetTokenExp?: boolean
  }

  export type UsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "email" | "password" | "rol" | "permisos" | "resetToken" | "resetTokenExp", ExtArgs["result"]["usuario"]>
  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | Usuario$citasArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      citas: Prisma.$CitaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      email: string
      password: string
      rol: string | null
      permisos: Prisma.JsonValue | null
      resetToken: string | null
      resetTokenExp: Date | null
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuarioWithIdOnly = await prisma.usuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    citas<T extends Usuario$citasArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$citasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CitaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */
  interface UsuarioFieldRefs {
    readonly id: FieldRef<"Usuario", 'Int'>
    readonly nombre: FieldRef<"Usuario", 'String'>
    readonly email: FieldRef<"Usuario", 'String'>
    readonly password: FieldRef<"Usuario", 'String'>
    readonly rol: FieldRef<"Usuario", 'String'>
    readonly permisos: FieldRef<"Usuario", 'Json'>
    readonly resetToken: FieldRef<"Usuario", 'String'>
    readonly resetTokenExp: FieldRef<"Usuario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to delete.
     */
    limit?: number
  }

  /**
   * Usuario.citas
   */
  export type Usuario$citasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cita
     */
    select?: CitaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cita
     */
    omit?: CitaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CitaInclude<ExtArgs> | null
    where?: CitaWhereInput
    orderBy?: CitaOrderByWithRelationInput | CitaOrderByWithRelationInput[]
    cursor?: CitaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CitaScalarFieldEnum | CitaScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Actividad
   */

  export type AggregateActividad = {
    _count: ActividadCountAggregateOutputType | null
    _avg: ActividadAvgAggregateOutputType | null
    _sum: ActividadSumAggregateOutputType | null
    _min: ActividadMinAggregateOutputType | null
    _max: ActividadMaxAggregateOutputType | null
  }

  export type ActividadAvgAggregateOutputType = {
    id: number | null
    tipoId: number | null
    periodicidadId: number | null
    cupo: number | null
    lugarId: number | null
    socioId: number | null
    proyectoId: number | null
    creadoPor: number | null
  }

  export type ActividadSumAggregateOutputType = {
    id: number | null
    tipoId: number | null
    periodicidadId: number | null
    cupo: number | null
    lugarId: number | null
    socioId: number | null
    proyectoId: number | null
    creadoPor: number | null
  }

  export type ActividadMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    tipoId: number | null
    periodicidadId: number | null
    fechaInicio: Date | null
    fechaFin: Date | null
    cupo: number | null
    lugarId: number | null
    socioId: number | null
    proyectoId: number | null
    creadoPor: number | null
  }

  export type ActividadMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    tipoId: number | null
    periodicidadId: number | null
    fechaInicio: Date | null
    fechaFin: Date | null
    cupo: number | null
    lugarId: number | null
    socioId: number | null
    proyectoId: number | null
    creadoPor: number | null
  }

  export type ActividadCountAggregateOutputType = {
    id: number
    nombre: number
    descripcion: number
    tipoId: number
    periodicidadId: number
    fechaInicio: number
    fechaFin: number
    cupo: number
    lugarId: number
    socioId: number
    proyectoId: number
    creadoPor: number
    _all: number
  }


  export type ActividadAvgAggregateInputType = {
    id?: true
    tipoId?: true
    periodicidadId?: true
    cupo?: true
    lugarId?: true
    socioId?: true
    proyectoId?: true
    creadoPor?: true
  }

  export type ActividadSumAggregateInputType = {
    id?: true
    tipoId?: true
    periodicidadId?: true
    cupo?: true
    lugarId?: true
    socioId?: true
    proyectoId?: true
    creadoPor?: true
  }

  export type ActividadMinAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    tipoId?: true
    periodicidadId?: true
    fechaInicio?: true
    fechaFin?: true
    cupo?: true
    lugarId?: true
    socioId?: true
    proyectoId?: true
    creadoPor?: true
  }

  export type ActividadMaxAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    tipoId?: true
    periodicidadId?: true
    fechaInicio?: true
    fechaFin?: true
    cupo?: true
    lugarId?: true
    socioId?: true
    proyectoId?: true
    creadoPor?: true
  }

  export type ActividadCountAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    tipoId?: true
    periodicidadId?: true
    fechaInicio?: true
    fechaFin?: true
    cupo?: true
    lugarId?: true
    socioId?: true
    proyectoId?: true
    creadoPor?: true
    _all?: true
  }

  export type ActividadAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Actividad to aggregate.
     */
    where?: ActividadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Actividads to fetch.
     */
    orderBy?: ActividadOrderByWithRelationInput | ActividadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ActividadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Actividads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Actividads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Actividads
    **/
    _count?: true | ActividadCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ActividadAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ActividadSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ActividadMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ActividadMaxAggregateInputType
  }

  export type GetActividadAggregateType<T extends ActividadAggregateArgs> = {
        [P in keyof T & keyof AggregateActividad]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateActividad[P]>
      : GetScalarType<T[P], AggregateActividad[P]>
  }




  export type ActividadGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActividadWhereInput
    orderBy?: ActividadOrderByWithAggregationInput | ActividadOrderByWithAggregationInput[]
    by: ActividadScalarFieldEnum[] | ActividadScalarFieldEnum
    having?: ActividadScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ActividadCountAggregateInputType | true
    _avg?: ActividadAvgAggregateInputType
    _sum?: ActividadSumAggregateInputType
    _min?: ActividadMinAggregateInputType
    _max?: ActividadMaxAggregateInputType
  }

  export type ActividadGroupByOutputType = {
    id: number
    nombre: string
    descripcion: string | null
    tipoId: number
    periodicidadId: number
    fechaInicio: Date | null
    fechaFin: Date | null
    cupo: number | null
    lugarId: number | null
    socioId: number | null
    proyectoId: number | null
    creadoPor: number | null
    _count: ActividadCountAggregateOutputType | null
    _avg: ActividadAvgAggregateOutputType | null
    _sum: ActividadSumAggregateOutputType | null
    _min: ActividadMinAggregateOutputType | null
    _max: ActividadMaxAggregateOutputType | null
  }

  type GetActividadGroupByPayload<T extends ActividadGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ActividadGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ActividadGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ActividadGroupByOutputType[P]>
            : GetScalarType<T[P], ActividadGroupByOutputType[P]>
        }
      >
    >


  export type ActividadSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    tipoId?: boolean
    periodicidadId?: boolean
    fechaInicio?: boolean
    fechaFin?: boolean
    cupo?: boolean
    lugarId?: boolean
    socioId?: boolean
    proyectoId?: boolean
    creadoPor?: boolean
    lugar?: boolean | Actividad$lugarArgs<ExtArgs>
    periodicidad?: boolean | PeriodicidadDefaultArgs<ExtArgs>
    proyecto?: boolean | Actividad$proyectoArgs<ExtArgs>
    tipo?: boolean | TipoActividadDefaultArgs<ExtArgs>
    archivos?: boolean | Actividad$archivosArgs<ExtArgs>
    beneficiarios?: boolean | Actividad$beneficiariosArgs<ExtArgs>
    citas?: boolean | Actividad$citasArgs<ExtArgs>
    oferentes?: boolean | Actividad$oferentesArgs<ExtArgs>
    _count?: boolean | ActividadCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["actividad"]>



  export type ActividadSelectScalar = {
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    tipoId?: boolean
    periodicidadId?: boolean
    fechaInicio?: boolean
    fechaFin?: boolean
    cupo?: boolean
    lugarId?: boolean
    socioId?: boolean
    proyectoId?: boolean
    creadoPor?: boolean
  }

  export type ActividadOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "descripcion" | "tipoId" | "periodicidadId" | "fechaInicio" | "fechaFin" | "cupo" | "lugarId" | "socioId" | "proyectoId" | "creadoPor", ExtArgs["result"]["actividad"]>
  export type ActividadInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lugar?: boolean | Actividad$lugarArgs<ExtArgs>
    periodicidad?: boolean | PeriodicidadDefaultArgs<ExtArgs>
    proyecto?: boolean | Actividad$proyectoArgs<ExtArgs>
    tipo?: boolean | TipoActividadDefaultArgs<ExtArgs>
    archivos?: boolean | Actividad$archivosArgs<ExtArgs>
    beneficiarios?: boolean | Actividad$beneficiariosArgs<ExtArgs>
    citas?: boolean | Actividad$citasArgs<ExtArgs>
    oferentes?: boolean | Actividad$oferentesArgs<ExtArgs>
    _count?: boolean | ActividadCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ActividadPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Actividad"
    objects: {
      lugar: Prisma.$LugarPayload<ExtArgs> | null
      periodicidad: Prisma.$PeriodicidadPayload<ExtArgs>
      proyecto: Prisma.$ProyectoPayload<ExtArgs> | null
      tipo: Prisma.$TipoActividadPayload<ExtArgs>
      archivos: Prisma.$ArchivoPayload<ExtArgs>[]
      beneficiarios: Prisma.$BeneficiarioPayload<ExtArgs>[]
      citas: Prisma.$CitaPayload<ExtArgs>[]
      oferentes: Prisma.$OferenteActividadPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      descripcion: string | null
      tipoId: number
      periodicidadId: number
      fechaInicio: Date | null
      fechaFin: Date | null
      cupo: number | null
      lugarId: number | null
      socioId: number | null
      proyectoId: number | null
      creadoPor: number | null
    }, ExtArgs["result"]["actividad"]>
    composites: {}
  }

  type ActividadGetPayload<S extends boolean | null | undefined | ActividadDefaultArgs> = $Result.GetResult<Prisma.$ActividadPayload, S>

  type ActividadCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ActividadFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ActividadCountAggregateInputType | true
    }

  export interface ActividadDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Actividad'], meta: { name: 'Actividad' } }
    /**
     * Find zero or one Actividad that matches the filter.
     * @param {ActividadFindUniqueArgs} args - Arguments to find a Actividad
     * @example
     * // Get one Actividad
     * const actividad = await prisma.actividad.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ActividadFindUniqueArgs>(args: SelectSubset<T, ActividadFindUniqueArgs<ExtArgs>>): Prisma__ActividadClient<$Result.GetResult<Prisma.$ActividadPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Actividad that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ActividadFindUniqueOrThrowArgs} args - Arguments to find a Actividad
     * @example
     * // Get one Actividad
     * const actividad = await prisma.actividad.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ActividadFindUniqueOrThrowArgs>(args: SelectSubset<T, ActividadFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ActividadClient<$Result.GetResult<Prisma.$ActividadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Actividad that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActividadFindFirstArgs} args - Arguments to find a Actividad
     * @example
     * // Get one Actividad
     * const actividad = await prisma.actividad.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ActividadFindFirstArgs>(args?: SelectSubset<T, ActividadFindFirstArgs<ExtArgs>>): Prisma__ActividadClient<$Result.GetResult<Prisma.$ActividadPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Actividad that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActividadFindFirstOrThrowArgs} args - Arguments to find a Actividad
     * @example
     * // Get one Actividad
     * const actividad = await prisma.actividad.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ActividadFindFirstOrThrowArgs>(args?: SelectSubset<T, ActividadFindFirstOrThrowArgs<ExtArgs>>): Prisma__ActividadClient<$Result.GetResult<Prisma.$ActividadPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Actividads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActividadFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Actividads
     * const actividads = await prisma.actividad.findMany()
     * 
     * // Get first 10 Actividads
     * const actividads = await prisma.actividad.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const actividadWithIdOnly = await prisma.actividad.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ActividadFindManyArgs>(args?: SelectSubset<T, ActividadFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActividadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Actividad.
     * @param {ActividadCreateArgs} args - Arguments to create a Actividad.
     * @example
     * // Create one Actividad
     * const Actividad = await prisma.actividad.create({
     *   data: {
     *     // ... data to create a Actividad
     *   }
     * })
     * 
     */
    create<T extends ActividadCreateArgs>(args: SelectSubset<T, ActividadCreateArgs<ExtArgs>>): Prisma__ActividadClient<$Result.GetResult<Prisma.$ActividadPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Actividads.
     * @param {ActividadCreateManyArgs} args - Arguments to create many Actividads.
     * @example
     * // Create many Actividads
     * const actividad = await prisma.actividad.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ActividadCreateManyArgs>(args?: SelectSubset<T, ActividadCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Actividad.
     * @param {ActividadDeleteArgs} args - Arguments to delete one Actividad.
     * @example
     * // Delete one Actividad
     * const Actividad = await prisma.actividad.delete({
     *   where: {
     *     // ... filter to delete one Actividad
     *   }
     * })
     * 
     */
    delete<T extends ActividadDeleteArgs>(args: SelectSubset<T, ActividadDeleteArgs<ExtArgs>>): Prisma__ActividadClient<$Result.GetResult<Prisma.$ActividadPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Actividad.
     * @param {ActividadUpdateArgs} args - Arguments to update one Actividad.
     * @example
     * // Update one Actividad
     * const actividad = await prisma.actividad.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ActividadUpdateArgs>(args: SelectSubset<T, ActividadUpdateArgs<ExtArgs>>): Prisma__ActividadClient<$Result.GetResult<Prisma.$ActividadPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Actividads.
     * @param {ActividadDeleteManyArgs} args - Arguments to filter Actividads to delete.
     * @example
     * // Delete a few Actividads
     * const { count } = await prisma.actividad.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ActividadDeleteManyArgs>(args?: SelectSubset<T, ActividadDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Actividads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActividadUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Actividads
     * const actividad = await prisma.actividad.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ActividadUpdateManyArgs>(args: SelectSubset<T, ActividadUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Actividad.
     * @param {ActividadUpsertArgs} args - Arguments to update or create a Actividad.
     * @example
     * // Update or create a Actividad
     * const actividad = await prisma.actividad.upsert({
     *   create: {
     *     // ... data to create a Actividad
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Actividad we want to update
     *   }
     * })
     */
    upsert<T extends ActividadUpsertArgs>(args: SelectSubset<T, ActividadUpsertArgs<ExtArgs>>): Prisma__ActividadClient<$Result.GetResult<Prisma.$ActividadPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Actividads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActividadCountArgs} args - Arguments to filter Actividads to count.
     * @example
     * // Count the number of Actividads
     * const count = await prisma.actividad.count({
     *   where: {
     *     // ... the filter for the Actividads we want to count
     *   }
     * })
    **/
    count<T extends ActividadCountArgs>(
      args?: Subset<T, ActividadCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ActividadCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Actividad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActividadAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ActividadAggregateArgs>(args: Subset<T, ActividadAggregateArgs>): Prisma.PrismaPromise<GetActividadAggregateType<T>>

    /**
     * Group by Actividad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActividadGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ActividadGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ActividadGroupByArgs['orderBy'] }
        : { orderBy?: ActividadGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ActividadGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetActividadGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Actividad model
   */
  readonly fields: ActividadFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Actividad.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ActividadClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    lugar<T extends Actividad$lugarArgs<ExtArgs> = {}>(args?: Subset<T, Actividad$lugarArgs<ExtArgs>>): Prisma__LugarClient<$Result.GetResult<Prisma.$LugarPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    periodicidad<T extends PeriodicidadDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PeriodicidadDefaultArgs<ExtArgs>>): Prisma__PeriodicidadClient<$Result.GetResult<Prisma.$PeriodicidadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    proyecto<T extends Actividad$proyectoArgs<ExtArgs> = {}>(args?: Subset<T, Actividad$proyectoArgs<ExtArgs>>): Prisma__ProyectoClient<$Result.GetResult<Prisma.$ProyectoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tipo<T extends TipoActividadDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TipoActividadDefaultArgs<ExtArgs>>): Prisma__TipoActividadClient<$Result.GetResult<Prisma.$TipoActividadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    archivos<T extends Actividad$archivosArgs<ExtArgs> = {}>(args?: Subset<T, Actividad$archivosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArchivoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    beneficiarios<T extends Actividad$beneficiariosArgs<ExtArgs> = {}>(args?: Subset<T, Actividad$beneficiariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BeneficiarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    citas<T extends Actividad$citasArgs<ExtArgs> = {}>(args?: Subset<T, Actividad$citasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CitaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    oferentes<T extends Actividad$oferentesArgs<ExtArgs> = {}>(args?: Subset<T, Actividad$oferentesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OferenteActividadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Actividad model
   */
  interface ActividadFieldRefs {
    readonly id: FieldRef<"Actividad", 'Int'>
    readonly nombre: FieldRef<"Actividad", 'String'>
    readonly descripcion: FieldRef<"Actividad", 'String'>
    readonly tipoId: FieldRef<"Actividad", 'Int'>
    readonly periodicidadId: FieldRef<"Actividad", 'Int'>
    readonly fechaInicio: FieldRef<"Actividad", 'DateTime'>
    readonly fechaFin: FieldRef<"Actividad", 'DateTime'>
    readonly cupo: FieldRef<"Actividad", 'Int'>
    readonly lugarId: FieldRef<"Actividad", 'Int'>
    readonly socioId: FieldRef<"Actividad", 'Int'>
    readonly proyectoId: FieldRef<"Actividad", 'Int'>
    readonly creadoPor: FieldRef<"Actividad", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Actividad findUnique
   */
  export type ActividadFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Actividad
     */
    select?: ActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Actividad
     */
    omit?: ActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadInclude<ExtArgs> | null
    /**
     * Filter, which Actividad to fetch.
     */
    where: ActividadWhereUniqueInput
  }

  /**
   * Actividad findUniqueOrThrow
   */
  export type ActividadFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Actividad
     */
    select?: ActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Actividad
     */
    omit?: ActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadInclude<ExtArgs> | null
    /**
     * Filter, which Actividad to fetch.
     */
    where: ActividadWhereUniqueInput
  }

  /**
   * Actividad findFirst
   */
  export type ActividadFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Actividad
     */
    select?: ActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Actividad
     */
    omit?: ActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadInclude<ExtArgs> | null
    /**
     * Filter, which Actividad to fetch.
     */
    where?: ActividadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Actividads to fetch.
     */
    orderBy?: ActividadOrderByWithRelationInput | ActividadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Actividads.
     */
    cursor?: ActividadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Actividads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Actividads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Actividads.
     */
    distinct?: ActividadScalarFieldEnum | ActividadScalarFieldEnum[]
  }

  /**
   * Actividad findFirstOrThrow
   */
  export type ActividadFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Actividad
     */
    select?: ActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Actividad
     */
    omit?: ActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadInclude<ExtArgs> | null
    /**
     * Filter, which Actividad to fetch.
     */
    where?: ActividadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Actividads to fetch.
     */
    orderBy?: ActividadOrderByWithRelationInput | ActividadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Actividads.
     */
    cursor?: ActividadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Actividads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Actividads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Actividads.
     */
    distinct?: ActividadScalarFieldEnum | ActividadScalarFieldEnum[]
  }

  /**
   * Actividad findMany
   */
  export type ActividadFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Actividad
     */
    select?: ActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Actividad
     */
    omit?: ActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadInclude<ExtArgs> | null
    /**
     * Filter, which Actividads to fetch.
     */
    where?: ActividadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Actividads to fetch.
     */
    orderBy?: ActividadOrderByWithRelationInput | ActividadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Actividads.
     */
    cursor?: ActividadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Actividads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Actividads.
     */
    skip?: number
    distinct?: ActividadScalarFieldEnum | ActividadScalarFieldEnum[]
  }

  /**
   * Actividad create
   */
  export type ActividadCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Actividad
     */
    select?: ActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Actividad
     */
    omit?: ActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadInclude<ExtArgs> | null
    /**
     * The data needed to create a Actividad.
     */
    data: XOR<ActividadCreateInput, ActividadUncheckedCreateInput>
  }

  /**
   * Actividad createMany
   */
  export type ActividadCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Actividads.
     */
    data: ActividadCreateManyInput | ActividadCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Actividad update
   */
  export type ActividadUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Actividad
     */
    select?: ActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Actividad
     */
    omit?: ActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadInclude<ExtArgs> | null
    /**
     * The data needed to update a Actividad.
     */
    data: XOR<ActividadUpdateInput, ActividadUncheckedUpdateInput>
    /**
     * Choose, which Actividad to update.
     */
    where: ActividadWhereUniqueInput
  }

  /**
   * Actividad updateMany
   */
  export type ActividadUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Actividads.
     */
    data: XOR<ActividadUpdateManyMutationInput, ActividadUncheckedUpdateManyInput>
    /**
     * Filter which Actividads to update
     */
    where?: ActividadWhereInput
    /**
     * Limit how many Actividads to update.
     */
    limit?: number
  }

  /**
   * Actividad upsert
   */
  export type ActividadUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Actividad
     */
    select?: ActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Actividad
     */
    omit?: ActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadInclude<ExtArgs> | null
    /**
     * The filter to search for the Actividad to update in case it exists.
     */
    where: ActividadWhereUniqueInput
    /**
     * In case the Actividad found by the `where` argument doesn't exist, create a new Actividad with this data.
     */
    create: XOR<ActividadCreateInput, ActividadUncheckedCreateInput>
    /**
     * In case the Actividad was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ActividadUpdateInput, ActividadUncheckedUpdateInput>
  }

  /**
   * Actividad delete
   */
  export type ActividadDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Actividad
     */
    select?: ActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Actividad
     */
    omit?: ActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadInclude<ExtArgs> | null
    /**
     * Filter which Actividad to delete.
     */
    where: ActividadWhereUniqueInput
  }

  /**
   * Actividad deleteMany
   */
  export type ActividadDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Actividads to delete
     */
    where?: ActividadWhereInput
    /**
     * Limit how many Actividads to delete.
     */
    limit?: number
  }

  /**
   * Actividad.lugar
   */
  export type Actividad$lugarArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lugar
     */
    select?: LugarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lugar
     */
    omit?: LugarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LugarInclude<ExtArgs> | null
    where?: LugarWhereInput
  }

  /**
   * Actividad.proyecto
   */
  export type Actividad$proyectoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proyecto
     */
    select?: ProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proyecto
     */
    omit?: ProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProyectoInclude<ExtArgs> | null
    where?: ProyectoWhereInput
  }

  /**
   * Actividad.archivos
   */
  export type Actividad$archivosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Archivo
     */
    select?: ArchivoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Archivo
     */
    omit?: ArchivoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoInclude<ExtArgs> | null
    where?: ArchivoWhereInput
    orderBy?: ArchivoOrderByWithRelationInput | ArchivoOrderByWithRelationInput[]
    cursor?: ArchivoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ArchivoScalarFieldEnum | ArchivoScalarFieldEnum[]
  }

  /**
   * Actividad.beneficiarios
   */
  export type Actividad$beneficiariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiario
     */
    select?: BeneficiarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Beneficiario
     */
    omit?: BeneficiarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiarioInclude<ExtArgs> | null
    where?: BeneficiarioWhereInput
    orderBy?: BeneficiarioOrderByWithRelationInput | BeneficiarioOrderByWithRelationInput[]
    cursor?: BeneficiarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BeneficiarioScalarFieldEnum | BeneficiarioScalarFieldEnum[]
  }

  /**
   * Actividad.citas
   */
  export type Actividad$citasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cita
     */
    select?: CitaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cita
     */
    omit?: CitaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CitaInclude<ExtArgs> | null
    where?: CitaWhereInput
    orderBy?: CitaOrderByWithRelationInput | CitaOrderByWithRelationInput[]
    cursor?: CitaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CitaScalarFieldEnum | CitaScalarFieldEnum[]
  }

  /**
   * Actividad.oferentes
   */
  export type Actividad$oferentesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OferenteActividad
     */
    select?: OferenteActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OferenteActividad
     */
    omit?: OferenteActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OferenteActividadInclude<ExtArgs> | null
    where?: OferenteActividadWhereInput
    orderBy?: OferenteActividadOrderByWithRelationInput | OferenteActividadOrderByWithRelationInput[]
    cursor?: OferenteActividadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OferenteActividadScalarFieldEnum | OferenteActividadScalarFieldEnum[]
  }

  /**
   * Actividad without action
   */
  export type ActividadDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Actividad
     */
    select?: ActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Actividad
     */
    omit?: ActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadInclude<ExtArgs> | null
  }


  /**
   * Model Cita
   */

  export type AggregateCita = {
    _count: CitaCountAggregateOutputType | null
    _avg: CitaAvgAggregateOutputType | null
    _sum: CitaSumAggregateOutputType | null
    _min: CitaMinAggregateOutputType | null
    _max: CitaMaxAggregateOutputType | null
  }

  export type CitaAvgAggregateOutputType = {
    id: number | null
    actividadId: number | null
    lugarId: number | null
    usuarioId: number | null
  }

  export type CitaSumAggregateOutputType = {
    id: number | null
    actividadId: number | null
    lugarId: number | null
    usuarioId: number | null
  }

  export type CitaMinAggregateOutputType = {
    id: number | null
    actividadId: number | null
    lugarId: number | null
    fecha: Date | null
    hora: Date | null
    usuarioId: number | null
  }

  export type CitaMaxAggregateOutputType = {
    id: number | null
    actividadId: number | null
    lugarId: number | null
    fecha: Date | null
    hora: Date | null
    usuarioId: number | null
  }

  export type CitaCountAggregateOutputType = {
    id: number
    actividadId: number
    lugarId: number
    fecha: number
    hora: number
    usuarioId: number
    _all: number
  }


  export type CitaAvgAggregateInputType = {
    id?: true
    actividadId?: true
    lugarId?: true
    usuarioId?: true
  }

  export type CitaSumAggregateInputType = {
    id?: true
    actividadId?: true
    lugarId?: true
    usuarioId?: true
  }

  export type CitaMinAggregateInputType = {
    id?: true
    actividadId?: true
    lugarId?: true
    fecha?: true
    hora?: true
    usuarioId?: true
  }

  export type CitaMaxAggregateInputType = {
    id?: true
    actividadId?: true
    lugarId?: true
    fecha?: true
    hora?: true
    usuarioId?: true
  }

  export type CitaCountAggregateInputType = {
    id?: true
    actividadId?: true
    lugarId?: true
    fecha?: true
    hora?: true
    usuarioId?: true
    _all?: true
  }

  export type CitaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cita to aggregate.
     */
    where?: CitaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Citas to fetch.
     */
    orderBy?: CitaOrderByWithRelationInput | CitaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CitaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Citas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Citas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Citas
    **/
    _count?: true | CitaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CitaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CitaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CitaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CitaMaxAggregateInputType
  }

  export type GetCitaAggregateType<T extends CitaAggregateArgs> = {
        [P in keyof T & keyof AggregateCita]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCita[P]>
      : GetScalarType<T[P], AggregateCita[P]>
  }




  export type CitaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CitaWhereInput
    orderBy?: CitaOrderByWithAggregationInput | CitaOrderByWithAggregationInput[]
    by: CitaScalarFieldEnum[] | CitaScalarFieldEnum
    having?: CitaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CitaCountAggregateInputType | true
    _avg?: CitaAvgAggregateInputType
    _sum?: CitaSumAggregateInputType
    _min?: CitaMinAggregateInputType
    _max?: CitaMaxAggregateInputType
  }

  export type CitaGroupByOutputType = {
    id: number
    actividadId: number
    lugarId: number
    fecha: Date
    hora: Date
    usuarioId: number | null
    _count: CitaCountAggregateOutputType | null
    _avg: CitaAvgAggregateOutputType | null
    _sum: CitaSumAggregateOutputType | null
    _min: CitaMinAggregateOutputType | null
    _max: CitaMaxAggregateOutputType | null
  }

  type GetCitaGroupByPayload<T extends CitaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CitaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CitaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CitaGroupByOutputType[P]>
            : GetScalarType<T[P], CitaGroupByOutputType[P]>
        }
      >
    >


  export type CitaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    actividadId?: boolean
    lugarId?: boolean
    fecha?: boolean
    hora?: boolean
    usuarioId?: boolean
    actividad?: boolean | ActividadDefaultArgs<ExtArgs>
    lugar?: boolean | LugarDefaultArgs<ExtArgs>
    usuario?: boolean | Cita$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["cita"]>



  export type CitaSelectScalar = {
    id?: boolean
    actividadId?: boolean
    lugarId?: boolean
    fecha?: boolean
    hora?: boolean
    usuarioId?: boolean
  }

  export type CitaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "actividadId" | "lugarId" | "fecha" | "hora" | "usuarioId", ExtArgs["result"]["cita"]>
  export type CitaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    actividad?: boolean | ActividadDefaultArgs<ExtArgs>
    lugar?: boolean | LugarDefaultArgs<ExtArgs>
    usuario?: boolean | Cita$usuarioArgs<ExtArgs>
  }

  export type $CitaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Cita"
    objects: {
      actividad: Prisma.$ActividadPayload<ExtArgs>
      lugar: Prisma.$LugarPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      actividadId: number
      lugarId: number
      fecha: Date
      hora: Date
      usuarioId: number | null
    }, ExtArgs["result"]["cita"]>
    composites: {}
  }

  type CitaGetPayload<S extends boolean | null | undefined | CitaDefaultArgs> = $Result.GetResult<Prisma.$CitaPayload, S>

  type CitaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CitaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CitaCountAggregateInputType | true
    }

  export interface CitaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Cita'], meta: { name: 'Cita' } }
    /**
     * Find zero or one Cita that matches the filter.
     * @param {CitaFindUniqueArgs} args - Arguments to find a Cita
     * @example
     * // Get one Cita
     * const cita = await prisma.cita.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CitaFindUniqueArgs>(args: SelectSubset<T, CitaFindUniqueArgs<ExtArgs>>): Prisma__CitaClient<$Result.GetResult<Prisma.$CitaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cita that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CitaFindUniqueOrThrowArgs} args - Arguments to find a Cita
     * @example
     * // Get one Cita
     * const cita = await prisma.cita.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CitaFindUniqueOrThrowArgs>(args: SelectSubset<T, CitaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CitaClient<$Result.GetResult<Prisma.$CitaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cita that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CitaFindFirstArgs} args - Arguments to find a Cita
     * @example
     * // Get one Cita
     * const cita = await prisma.cita.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CitaFindFirstArgs>(args?: SelectSubset<T, CitaFindFirstArgs<ExtArgs>>): Prisma__CitaClient<$Result.GetResult<Prisma.$CitaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cita that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CitaFindFirstOrThrowArgs} args - Arguments to find a Cita
     * @example
     * // Get one Cita
     * const cita = await prisma.cita.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CitaFindFirstOrThrowArgs>(args?: SelectSubset<T, CitaFindFirstOrThrowArgs<ExtArgs>>): Prisma__CitaClient<$Result.GetResult<Prisma.$CitaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Citas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CitaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Citas
     * const citas = await prisma.cita.findMany()
     * 
     * // Get first 10 Citas
     * const citas = await prisma.cita.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const citaWithIdOnly = await prisma.cita.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CitaFindManyArgs>(args?: SelectSubset<T, CitaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CitaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cita.
     * @param {CitaCreateArgs} args - Arguments to create a Cita.
     * @example
     * // Create one Cita
     * const Cita = await prisma.cita.create({
     *   data: {
     *     // ... data to create a Cita
     *   }
     * })
     * 
     */
    create<T extends CitaCreateArgs>(args: SelectSubset<T, CitaCreateArgs<ExtArgs>>): Prisma__CitaClient<$Result.GetResult<Prisma.$CitaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Citas.
     * @param {CitaCreateManyArgs} args - Arguments to create many Citas.
     * @example
     * // Create many Citas
     * const cita = await prisma.cita.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CitaCreateManyArgs>(args?: SelectSubset<T, CitaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Cita.
     * @param {CitaDeleteArgs} args - Arguments to delete one Cita.
     * @example
     * // Delete one Cita
     * const Cita = await prisma.cita.delete({
     *   where: {
     *     // ... filter to delete one Cita
     *   }
     * })
     * 
     */
    delete<T extends CitaDeleteArgs>(args: SelectSubset<T, CitaDeleteArgs<ExtArgs>>): Prisma__CitaClient<$Result.GetResult<Prisma.$CitaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cita.
     * @param {CitaUpdateArgs} args - Arguments to update one Cita.
     * @example
     * // Update one Cita
     * const cita = await prisma.cita.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CitaUpdateArgs>(args: SelectSubset<T, CitaUpdateArgs<ExtArgs>>): Prisma__CitaClient<$Result.GetResult<Prisma.$CitaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Citas.
     * @param {CitaDeleteManyArgs} args - Arguments to filter Citas to delete.
     * @example
     * // Delete a few Citas
     * const { count } = await prisma.cita.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CitaDeleteManyArgs>(args?: SelectSubset<T, CitaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Citas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CitaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Citas
     * const cita = await prisma.cita.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CitaUpdateManyArgs>(args: SelectSubset<T, CitaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Cita.
     * @param {CitaUpsertArgs} args - Arguments to update or create a Cita.
     * @example
     * // Update or create a Cita
     * const cita = await prisma.cita.upsert({
     *   create: {
     *     // ... data to create a Cita
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cita we want to update
     *   }
     * })
     */
    upsert<T extends CitaUpsertArgs>(args: SelectSubset<T, CitaUpsertArgs<ExtArgs>>): Prisma__CitaClient<$Result.GetResult<Prisma.$CitaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Citas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CitaCountArgs} args - Arguments to filter Citas to count.
     * @example
     * // Count the number of Citas
     * const count = await prisma.cita.count({
     *   where: {
     *     // ... the filter for the Citas we want to count
     *   }
     * })
    **/
    count<T extends CitaCountArgs>(
      args?: Subset<T, CitaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CitaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cita.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CitaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CitaAggregateArgs>(args: Subset<T, CitaAggregateArgs>): Prisma.PrismaPromise<GetCitaAggregateType<T>>

    /**
     * Group by Cita.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CitaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CitaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CitaGroupByArgs['orderBy'] }
        : { orderBy?: CitaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CitaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCitaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Cita model
   */
  readonly fields: CitaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Cita.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CitaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    actividad<T extends ActividadDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ActividadDefaultArgs<ExtArgs>>): Prisma__ActividadClient<$Result.GetResult<Prisma.$ActividadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    lugar<T extends LugarDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LugarDefaultArgs<ExtArgs>>): Prisma__LugarClient<$Result.GetResult<Prisma.$LugarPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario<T extends Cita$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, Cita$usuarioArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Cita model
   */
  interface CitaFieldRefs {
    readonly id: FieldRef<"Cita", 'Int'>
    readonly actividadId: FieldRef<"Cita", 'Int'>
    readonly lugarId: FieldRef<"Cita", 'Int'>
    readonly fecha: FieldRef<"Cita", 'DateTime'>
    readonly hora: FieldRef<"Cita", 'DateTime'>
    readonly usuarioId: FieldRef<"Cita", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Cita findUnique
   */
  export type CitaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cita
     */
    select?: CitaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cita
     */
    omit?: CitaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CitaInclude<ExtArgs> | null
    /**
     * Filter, which Cita to fetch.
     */
    where: CitaWhereUniqueInput
  }

  /**
   * Cita findUniqueOrThrow
   */
  export type CitaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cita
     */
    select?: CitaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cita
     */
    omit?: CitaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CitaInclude<ExtArgs> | null
    /**
     * Filter, which Cita to fetch.
     */
    where: CitaWhereUniqueInput
  }

  /**
   * Cita findFirst
   */
  export type CitaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cita
     */
    select?: CitaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cita
     */
    omit?: CitaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CitaInclude<ExtArgs> | null
    /**
     * Filter, which Cita to fetch.
     */
    where?: CitaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Citas to fetch.
     */
    orderBy?: CitaOrderByWithRelationInput | CitaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Citas.
     */
    cursor?: CitaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Citas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Citas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Citas.
     */
    distinct?: CitaScalarFieldEnum | CitaScalarFieldEnum[]
  }

  /**
   * Cita findFirstOrThrow
   */
  export type CitaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cita
     */
    select?: CitaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cita
     */
    omit?: CitaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CitaInclude<ExtArgs> | null
    /**
     * Filter, which Cita to fetch.
     */
    where?: CitaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Citas to fetch.
     */
    orderBy?: CitaOrderByWithRelationInput | CitaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Citas.
     */
    cursor?: CitaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Citas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Citas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Citas.
     */
    distinct?: CitaScalarFieldEnum | CitaScalarFieldEnum[]
  }

  /**
   * Cita findMany
   */
  export type CitaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cita
     */
    select?: CitaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cita
     */
    omit?: CitaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CitaInclude<ExtArgs> | null
    /**
     * Filter, which Citas to fetch.
     */
    where?: CitaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Citas to fetch.
     */
    orderBy?: CitaOrderByWithRelationInput | CitaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Citas.
     */
    cursor?: CitaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Citas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Citas.
     */
    skip?: number
    distinct?: CitaScalarFieldEnum | CitaScalarFieldEnum[]
  }

  /**
   * Cita create
   */
  export type CitaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cita
     */
    select?: CitaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cita
     */
    omit?: CitaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CitaInclude<ExtArgs> | null
    /**
     * The data needed to create a Cita.
     */
    data: XOR<CitaCreateInput, CitaUncheckedCreateInput>
  }

  /**
   * Cita createMany
   */
  export type CitaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Citas.
     */
    data: CitaCreateManyInput | CitaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Cita update
   */
  export type CitaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cita
     */
    select?: CitaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cita
     */
    omit?: CitaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CitaInclude<ExtArgs> | null
    /**
     * The data needed to update a Cita.
     */
    data: XOR<CitaUpdateInput, CitaUncheckedUpdateInput>
    /**
     * Choose, which Cita to update.
     */
    where: CitaWhereUniqueInput
  }

  /**
   * Cita updateMany
   */
  export type CitaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Citas.
     */
    data: XOR<CitaUpdateManyMutationInput, CitaUncheckedUpdateManyInput>
    /**
     * Filter which Citas to update
     */
    where?: CitaWhereInput
    /**
     * Limit how many Citas to update.
     */
    limit?: number
  }

  /**
   * Cita upsert
   */
  export type CitaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cita
     */
    select?: CitaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cita
     */
    omit?: CitaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CitaInclude<ExtArgs> | null
    /**
     * The filter to search for the Cita to update in case it exists.
     */
    where: CitaWhereUniqueInput
    /**
     * In case the Cita found by the `where` argument doesn't exist, create a new Cita with this data.
     */
    create: XOR<CitaCreateInput, CitaUncheckedCreateInput>
    /**
     * In case the Cita was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CitaUpdateInput, CitaUncheckedUpdateInput>
  }

  /**
   * Cita delete
   */
  export type CitaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cita
     */
    select?: CitaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cita
     */
    omit?: CitaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CitaInclude<ExtArgs> | null
    /**
     * Filter which Cita to delete.
     */
    where: CitaWhereUniqueInput
  }

  /**
   * Cita deleteMany
   */
  export type CitaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Citas to delete
     */
    where?: CitaWhereInput
    /**
     * Limit how many Citas to delete.
     */
    limit?: number
  }

  /**
   * Cita.usuario
   */
  export type Cita$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * Cita without action
   */
  export type CitaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cita
     */
    select?: CitaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cita
     */
    omit?: CitaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CitaInclude<ExtArgs> | null
  }


  /**
   * Model TipoActividad
   */

  export type AggregateTipoActividad = {
    _count: TipoActividadCountAggregateOutputType | null
    _avg: TipoActividadAvgAggregateOutputType | null
    _sum: TipoActividadSumAggregateOutputType | null
    _min: TipoActividadMinAggregateOutputType | null
    _max: TipoActividadMaxAggregateOutputType | null
  }

  export type TipoActividadAvgAggregateOutputType = {
    id: number | null
  }

  export type TipoActividadSumAggregateOutputType = {
    id: number | null
  }

  export type TipoActividadMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
  }

  export type TipoActividadMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
  }

  export type TipoActividadCountAggregateOutputType = {
    id: number
    nombre: number
    descripcion: number
    _all: number
  }


  export type TipoActividadAvgAggregateInputType = {
    id?: true
  }

  export type TipoActividadSumAggregateInputType = {
    id?: true
  }

  export type TipoActividadMinAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
  }

  export type TipoActividadMaxAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
  }

  export type TipoActividadCountAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    _all?: true
  }

  export type TipoActividadAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoActividad to aggregate.
     */
    where?: TipoActividadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoActividads to fetch.
     */
    orderBy?: TipoActividadOrderByWithRelationInput | TipoActividadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TipoActividadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoActividads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoActividads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TipoActividads
    **/
    _count?: true | TipoActividadCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipoActividadAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipoActividadSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipoActividadMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipoActividadMaxAggregateInputType
  }

  export type GetTipoActividadAggregateType<T extends TipoActividadAggregateArgs> = {
        [P in keyof T & keyof AggregateTipoActividad]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipoActividad[P]>
      : GetScalarType<T[P], AggregateTipoActividad[P]>
  }




  export type TipoActividadGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TipoActividadWhereInput
    orderBy?: TipoActividadOrderByWithAggregationInput | TipoActividadOrderByWithAggregationInput[]
    by: TipoActividadScalarFieldEnum[] | TipoActividadScalarFieldEnum
    having?: TipoActividadScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipoActividadCountAggregateInputType | true
    _avg?: TipoActividadAvgAggregateInputType
    _sum?: TipoActividadSumAggregateInputType
    _min?: TipoActividadMinAggregateInputType
    _max?: TipoActividadMaxAggregateInputType
  }

  export type TipoActividadGroupByOutputType = {
    id: number
    nombre: string
    descripcion: string
    _count: TipoActividadCountAggregateOutputType | null
    _avg: TipoActividadAvgAggregateOutputType | null
    _sum: TipoActividadSumAggregateOutputType | null
    _min: TipoActividadMinAggregateOutputType | null
    _max: TipoActividadMaxAggregateOutputType | null
  }

  type GetTipoActividadGroupByPayload<T extends TipoActividadGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TipoActividadGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipoActividadGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipoActividadGroupByOutputType[P]>
            : GetScalarType<T[P], TipoActividadGroupByOutputType[P]>
        }
      >
    >


  export type TipoActividadSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    actividades?: boolean | TipoActividad$actividadesArgs<ExtArgs>
    _count?: boolean | TipoActividadCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipoActividad"]>



  export type TipoActividadSelectScalar = {
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
  }

  export type TipoActividadOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "descripcion", ExtArgs["result"]["tipoActividad"]>
  export type TipoActividadInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    actividades?: boolean | TipoActividad$actividadesArgs<ExtArgs>
    _count?: boolean | TipoActividadCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $TipoActividadPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TipoActividad"
    objects: {
      actividades: Prisma.$ActividadPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      descripcion: string
    }, ExtArgs["result"]["tipoActividad"]>
    composites: {}
  }

  type TipoActividadGetPayload<S extends boolean | null | undefined | TipoActividadDefaultArgs> = $Result.GetResult<Prisma.$TipoActividadPayload, S>

  type TipoActividadCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TipoActividadFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TipoActividadCountAggregateInputType | true
    }

  export interface TipoActividadDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TipoActividad'], meta: { name: 'TipoActividad' } }
    /**
     * Find zero or one TipoActividad that matches the filter.
     * @param {TipoActividadFindUniqueArgs} args - Arguments to find a TipoActividad
     * @example
     * // Get one TipoActividad
     * const tipoActividad = await prisma.tipoActividad.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TipoActividadFindUniqueArgs>(args: SelectSubset<T, TipoActividadFindUniqueArgs<ExtArgs>>): Prisma__TipoActividadClient<$Result.GetResult<Prisma.$TipoActividadPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TipoActividad that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TipoActividadFindUniqueOrThrowArgs} args - Arguments to find a TipoActividad
     * @example
     * // Get one TipoActividad
     * const tipoActividad = await prisma.tipoActividad.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TipoActividadFindUniqueOrThrowArgs>(args: SelectSubset<T, TipoActividadFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TipoActividadClient<$Result.GetResult<Prisma.$TipoActividadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TipoActividad that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoActividadFindFirstArgs} args - Arguments to find a TipoActividad
     * @example
     * // Get one TipoActividad
     * const tipoActividad = await prisma.tipoActividad.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TipoActividadFindFirstArgs>(args?: SelectSubset<T, TipoActividadFindFirstArgs<ExtArgs>>): Prisma__TipoActividadClient<$Result.GetResult<Prisma.$TipoActividadPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TipoActividad that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoActividadFindFirstOrThrowArgs} args - Arguments to find a TipoActividad
     * @example
     * // Get one TipoActividad
     * const tipoActividad = await prisma.tipoActividad.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TipoActividadFindFirstOrThrowArgs>(args?: SelectSubset<T, TipoActividadFindFirstOrThrowArgs<ExtArgs>>): Prisma__TipoActividadClient<$Result.GetResult<Prisma.$TipoActividadPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TipoActividads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoActividadFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TipoActividads
     * const tipoActividads = await prisma.tipoActividad.findMany()
     * 
     * // Get first 10 TipoActividads
     * const tipoActividads = await prisma.tipoActividad.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipoActividadWithIdOnly = await prisma.tipoActividad.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TipoActividadFindManyArgs>(args?: SelectSubset<T, TipoActividadFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoActividadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TipoActividad.
     * @param {TipoActividadCreateArgs} args - Arguments to create a TipoActividad.
     * @example
     * // Create one TipoActividad
     * const TipoActividad = await prisma.tipoActividad.create({
     *   data: {
     *     // ... data to create a TipoActividad
     *   }
     * })
     * 
     */
    create<T extends TipoActividadCreateArgs>(args: SelectSubset<T, TipoActividadCreateArgs<ExtArgs>>): Prisma__TipoActividadClient<$Result.GetResult<Prisma.$TipoActividadPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TipoActividads.
     * @param {TipoActividadCreateManyArgs} args - Arguments to create many TipoActividads.
     * @example
     * // Create many TipoActividads
     * const tipoActividad = await prisma.tipoActividad.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TipoActividadCreateManyArgs>(args?: SelectSubset<T, TipoActividadCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TipoActividad.
     * @param {TipoActividadDeleteArgs} args - Arguments to delete one TipoActividad.
     * @example
     * // Delete one TipoActividad
     * const TipoActividad = await prisma.tipoActividad.delete({
     *   where: {
     *     // ... filter to delete one TipoActividad
     *   }
     * })
     * 
     */
    delete<T extends TipoActividadDeleteArgs>(args: SelectSubset<T, TipoActividadDeleteArgs<ExtArgs>>): Prisma__TipoActividadClient<$Result.GetResult<Prisma.$TipoActividadPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TipoActividad.
     * @param {TipoActividadUpdateArgs} args - Arguments to update one TipoActividad.
     * @example
     * // Update one TipoActividad
     * const tipoActividad = await prisma.tipoActividad.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TipoActividadUpdateArgs>(args: SelectSubset<T, TipoActividadUpdateArgs<ExtArgs>>): Prisma__TipoActividadClient<$Result.GetResult<Prisma.$TipoActividadPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TipoActividads.
     * @param {TipoActividadDeleteManyArgs} args - Arguments to filter TipoActividads to delete.
     * @example
     * // Delete a few TipoActividads
     * const { count } = await prisma.tipoActividad.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TipoActividadDeleteManyArgs>(args?: SelectSubset<T, TipoActividadDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TipoActividads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoActividadUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TipoActividads
     * const tipoActividad = await prisma.tipoActividad.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TipoActividadUpdateManyArgs>(args: SelectSubset<T, TipoActividadUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TipoActividad.
     * @param {TipoActividadUpsertArgs} args - Arguments to update or create a TipoActividad.
     * @example
     * // Update or create a TipoActividad
     * const tipoActividad = await prisma.tipoActividad.upsert({
     *   create: {
     *     // ... data to create a TipoActividad
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TipoActividad we want to update
     *   }
     * })
     */
    upsert<T extends TipoActividadUpsertArgs>(args: SelectSubset<T, TipoActividadUpsertArgs<ExtArgs>>): Prisma__TipoActividadClient<$Result.GetResult<Prisma.$TipoActividadPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TipoActividads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoActividadCountArgs} args - Arguments to filter TipoActividads to count.
     * @example
     * // Count the number of TipoActividads
     * const count = await prisma.tipoActividad.count({
     *   where: {
     *     // ... the filter for the TipoActividads we want to count
     *   }
     * })
    **/
    count<T extends TipoActividadCountArgs>(
      args?: Subset<T, TipoActividadCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipoActividadCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TipoActividad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoActividadAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipoActividadAggregateArgs>(args: Subset<T, TipoActividadAggregateArgs>): Prisma.PrismaPromise<GetTipoActividadAggregateType<T>>

    /**
     * Group by TipoActividad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoActividadGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TipoActividadGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TipoActividadGroupByArgs['orderBy'] }
        : { orderBy?: TipoActividadGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TipoActividadGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipoActividadGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TipoActividad model
   */
  readonly fields: TipoActividadFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TipoActividad.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TipoActividadClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    actividades<T extends TipoActividad$actividadesArgs<ExtArgs> = {}>(args?: Subset<T, TipoActividad$actividadesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActividadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TipoActividad model
   */
  interface TipoActividadFieldRefs {
    readonly id: FieldRef<"TipoActividad", 'Int'>
    readonly nombre: FieldRef<"TipoActividad", 'String'>
    readonly descripcion: FieldRef<"TipoActividad", 'String'>
  }
    

  // Custom InputTypes
  /**
   * TipoActividad findUnique
   */
  export type TipoActividadFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoActividad
     */
    select?: TipoActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoActividad
     */
    omit?: TipoActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoActividadInclude<ExtArgs> | null
    /**
     * Filter, which TipoActividad to fetch.
     */
    where: TipoActividadWhereUniqueInput
  }

  /**
   * TipoActividad findUniqueOrThrow
   */
  export type TipoActividadFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoActividad
     */
    select?: TipoActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoActividad
     */
    omit?: TipoActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoActividadInclude<ExtArgs> | null
    /**
     * Filter, which TipoActividad to fetch.
     */
    where: TipoActividadWhereUniqueInput
  }

  /**
   * TipoActividad findFirst
   */
  export type TipoActividadFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoActividad
     */
    select?: TipoActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoActividad
     */
    omit?: TipoActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoActividadInclude<ExtArgs> | null
    /**
     * Filter, which TipoActividad to fetch.
     */
    where?: TipoActividadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoActividads to fetch.
     */
    orderBy?: TipoActividadOrderByWithRelationInput | TipoActividadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoActividads.
     */
    cursor?: TipoActividadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoActividads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoActividads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoActividads.
     */
    distinct?: TipoActividadScalarFieldEnum | TipoActividadScalarFieldEnum[]
  }

  /**
   * TipoActividad findFirstOrThrow
   */
  export type TipoActividadFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoActividad
     */
    select?: TipoActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoActividad
     */
    omit?: TipoActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoActividadInclude<ExtArgs> | null
    /**
     * Filter, which TipoActividad to fetch.
     */
    where?: TipoActividadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoActividads to fetch.
     */
    orderBy?: TipoActividadOrderByWithRelationInput | TipoActividadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoActividads.
     */
    cursor?: TipoActividadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoActividads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoActividads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoActividads.
     */
    distinct?: TipoActividadScalarFieldEnum | TipoActividadScalarFieldEnum[]
  }

  /**
   * TipoActividad findMany
   */
  export type TipoActividadFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoActividad
     */
    select?: TipoActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoActividad
     */
    omit?: TipoActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoActividadInclude<ExtArgs> | null
    /**
     * Filter, which TipoActividads to fetch.
     */
    where?: TipoActividadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoActividads to fetch.
     */
    orderBy?: TipoActividadOrderByWithRelationInput | TipoActividadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TipoActividads.
     */
    cursor?: TipoActividadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoActividads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoActividads.
     */
    skip?: number
    distinct?: TipoActividadScalarFieldEnum | TipoActividadScalarFieldEnum[]
  }

  /**
   * TipoActividad create
   */
  export type TipoActividadCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoActividad
     */
    select?: TipoActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoActividad
     */
    omit?: TipoActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoActividadInclude<ExtArgs> | null
    /**
     * The data needed to create a TipoActividad.
     */
    data: XOR<TipoActividadCreateInput, TipoActividadUncheckedCreateInput>
  }

  /**
   * TipoActividad createMany
   */
  export type TipoActividadCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TipoActividads.
     */
    data: TipoActividadCreateManyInput | TipoActividadCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TipoActividad update
   */
  export type TipoActividadUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoActividad
     */
    select?: TipoActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoActividad
     */
    omit?: TipoActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoActividadInclude<ExtArgs> | null
    /**
     * The data needed to update a TipoActividad.
     */
    data: XOR<TipoActividadUpdateInput, TipoActividadUncheckedUpdateInput>
    /**
     * Choose, which TipoActividad to update.
     */
    where: TipoActividadWhereUniqueInput
  }

  /**
   * TipoActividad updateMany
   */
  export type TipoActividadUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TipoActividads.
     */
    data: XOR<TipoActividadUpdateManyMutationInput, TipoActividadUncheckedUpdateManyInput>
    /**
     * Filter which TipoActividads to update
     */
    where?: TipoActividadWhereInput
    /**
     * Limit how many TipoActividads to update.
     */
    limit?: number
  }

  /**
   * TipoActividad upsert
   */
  export type TipoActividadUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoActividad
     */
    select?: TipoActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoActividad
     */
    omit?: TipoActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoActividadInclude<ExtArgs> | null
    /**
     * The filter to search for the TipoActividad to update in case it exists.
     */
    where: TipoActividadWhereUniqueInput
    /**
     * In case the TipoActividad found by the `where` argument doesn't exist, create a new TipoActividad with this data.
     */
    create: XOR<TipoActividadCreateInput, TipoActividadUncheckedCreateInput>
    /**
     * In case the TipoActividad was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TipoActividadUpdateInput, TipoActividadUncheckedUpdateInput>
  }

  /**
   * TipoActividad delete
   */
  export type TipoActividadDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoActividad
     */
    select?: TipoActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoActividad
     */
    omit?: TipoActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoActividadInclude<ExtArgs> | null
    /**
     * Filter which TipoActividad to delete.
     */
    where: TipoActividadWhereUniqueInput
  }

  /**
   * TipoActividad deleteMany
   */
  export type TipoActividadDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoActividads to delete
     */
    where?: TipoActividadWhereInput
    /**
     * Limit how many TipoActividads to delete.
     */
    limit?: number
  }

  /**
   * TipoActividad.actividades
   */
  export type TipoActividad$actividadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Actividad
     */
    select?: ActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Actividad
     */
    omit?: ActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadInclude<ExtArgs> | null
    where?: ActividadWhereInput
    orderBy?: ActividadOrderByWithRelationInput | ActividadOrderByWithRelationInput[]
    cursor?: ActividadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActividadScalarFieldEnum | ActividadScalarFieldEnum[]
  }

  /**
   * TipoActividad without action
   */
  export type TipoActividadDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoActividad
     */
    select?: TipoActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoActividad
     */
    omit?: TipoActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoActividadInclude<ExtArgs> | null
  }


  /**
   * Model Periodicidad
   */

  export type AggregatePeriodicidad = {
    _count: PeriodicidadCountAggregateOutputType | null
    _avg: PeriodicidadAvgAggregateOutputType | null
    _sum: PeriodicidadSumAggregateOutputType | null
    _min: PeriodicidadMinAggregateOutputType | null
    _max: PeriodicidadMaxAggregateOutputType | null
  }

  export type PeriodicidadAvgAggregateOutputType = {
    id: number | null
  }

  export type PeriodicidadSumAggregateOutputType = {
    id: number | null
  }

  export type PeriodicidadMinAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type PeriodicidadMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type PeriodicidadCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type PeriodicidadAvgAggregateInputType = {
    id?: true
  }

  export type PeriodicidadSumAggregateInputType = {
    id?: true
  }

  export type PeriodicidadMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type PeriodicidadMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type PeriodicidadCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type PeriodicidadAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Periodicidad to aggregate.
     */
    where?: PeriodicidadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Periodicidads to fetch.
     */
    orderBy?: PeriodicidadOrderByWithRelationInput | PeriodicidadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PeriodicidadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Periodicidads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Periodicidads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Periodicidads
    **/
    _count?: true | PeriodicidadCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PeriodicidadAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PeriodicidadSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PeriodicidadMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PeriodicidadMaxAggregateInputType
  }

  export type GetPeriodicidadAggregateType<T extends PeriodicidadAggregateArgs> = {
        [P in keyof T & keyof AggregatePeriodicidad]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePeriodicidad[P]>
      : GetScalarType<T[P], AggregatePeriodicidad[P]>
  }




  export type PeriodicidadGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PeriodicidadWhereInput
    orderBy?: PeriodicidadOrderByWithAggregationInput | PeriodicidadOrderByWithAggregationInput[]
    by: PeriodicidadScalarFieldEnum[] | PeriodicidadScalarFieldEnum
    having?: PeriodicidadScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PeriodicidadCountAggregateInputType | true
    _avg?: PeriodicidadAvgAggregateInputType
    _sum?: PeriodicidadSumAggregateInputType
    _min?: PeriodicidadMinAggregateInputType
    _max?: PeriodicidadMaxAggregateInputType
  }

  export type PeriodicidadGroupByOutputType = {
    id: number
    nombre: string
    _count: PeriodicidadCountAggregateOutputType | null
    _avg: PeriodicidadAvgAggregateOutputType | null
    _sum: PeriodicidadSumAggregateOutputType | null
    _min: PeriodicidadMinAggregateOutputType | null
    _max: PeriodicidadMaxAggregateOutputType | null
  }

  type GetPeriodicidadGroupByPayload<T extends PeriodicidadGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PeriodicidadGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PeriodicidadGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PeriodicidadGroupByOutputType[P]>
            : GetScalarType<T[P], PeriodicidadGroupByOutputType[P]>
        }
      >
    >


  export type PeriodicidadSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    actividades?: boolean | Periodicidad$actividadesArgs<ExtArgs>
    _count?: boolean | PeriodicidadCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["periodicidad"]>



  export type PeriodicidadSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type PeriodicidadOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre", ExtArgs["result"]["periodicidad"]>
  export type PeriodicidadInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    actividades?: boolean | Periodicidad$actividadesArgs<ExtArgs>
    _count?: boolean | PeriodicidadCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $PeriodicidadPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Periodicidad"
    objects: {
      actividades: Prisma.$ActividadPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
    }, ExtArgs["result"]["periodicidad"]>
    composites: {}
  }

  type PeriodicidadGetPayload<S extends boolean | null | undefined | PeriodicidadDefaultArgs> = $Result.GetResult<Prisma.$PeriodicidadPayload, S>

  type PeriodicidadCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PeriodicidadFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PeriodicidadCountAggregateInputType | true
    }

  export interface PeriodicidadDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Periodicidad'], meta: { name: 'Periodicidad' } }
    /**
     * Find zero or one Periodicidad that matches the filter.
     * @param {PeriodicidadFindUniqueArgs} args - Arguments to find a Periodicidad
     * @example
     * // Get one Periodicidad
     * const periodicidad = await prisma.periodicidad.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PeriodicidadFindUniqueArgs>(args: SelectSubset<T, PeriodicidadFindUniqueArgs<ExtArgs>>): Prisma__PeriodicidadClient<$Result.GetResult<Prisma.$PeriodicidadPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Periodicidad that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PeriodicidadFindUniqueOrThrowArgs} args - Arguments to find a Periodicidad
     * @example
     * // Get one Periodicidad
     * const periodicidad = await prisma.periodicidad.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PeriodicidadFindUniqueOrThrowArgs>(args: SelectSubset<T, PeriodicidadFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PeriodicidadClient<$Result.GetResult<Prisma.$PeriodicidadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Periodicidad that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PeriodicidadFindFirstArgs} args - Arguments to find a Periodicidad
     * @example
     * // Get one Periodicidad
     * const periodicidad = await prisma.periodicidad.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PeriodicidadFindFirstArgs>(args?: SelectSubset<T, PeriodicidadFindFirstArgs<ExtArgs>>): Prisma__PeriodicidadClient<$Result.GetResult<Prisma.$PeriodicidadPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Periodicidad that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PeriodicidadFindFirstOrThrowArgs} args - Arguments to find a Periodicidad
     * @example
     * // Get one Periodicidad
     * const periodicidad = await prisma.periodicidad.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PeriodicidadFindFirstOrThrowArgs>(args?: SelectSubset<T, PeriodicidadFindFirstOrThrowArgs<ExtArgs>>): Prisma__PeriodicidadClient<$Result.GetResult<Prisma.$PeriodicidadPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Periodicidads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PeriodicidadFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Periodicidads
     * const periodicidads = await prisma.periodicidad.findMany()
     * 
     * // Get first 10 Periodicidads
     * const periodicidads = await prisma.periodicidad.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const periodicidadWithIdOnly = await prisma.periodicidad.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PeriodicidadFindManyArgs>(args?: SelectSubset<T, PeriodicidadFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PeriodicidadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Periodicidad.
     * @param {PeriodicidadCreateArgs} args - Arguments to create a Periodicidad.
     * @example
     * // Create one Periodicidad
     * const Periodicidad = await prisma.periodicidad.create({
     *   data: {
     *     // ... data to create a Periodicidad
     *   }
     * })
     * 
     */
    create<T extends PeriodicidadCreateArgs>(args: SelectSubset<T, PeriodicidadCreateArgs<ExtArgs>>): Prisma__PeriodicidadClient<$Result.GetResult<Prisma.$PeriodicidadPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Periodicidads.
     * @param {PeriodicidadCreateManyArgs} args - Arguments to create many Periodicidads.
     * @example
     * // Create many Periodicidads
     * const periodicidad = await prisma.periodicidad.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PeriodicidadCreateManyArgs>(args?: SelectSubset<T, PeriodicidadCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Periodicidad.
     * @param {PeriodicidadDeleteArgs} args - Arguments to delete one Periodicidad.
     * @example
     * // Delete one Periodicidad
     * const Periodicidad = await prisma.periodicidad.delete({
     *   where: {
     *     // ... filter to delete one Periodicidad
     *   }
     * })
     * 
     */
    delete<T extends PeriodicidadDeleteArgs>(args: SelectSubset<T, PeriodicidadDeleteArgs<ExtArgs>>): Prisma__PeriodicidadClient<$Result.GetResult<Prisma.$PeriodicidadPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Periodicidad.
     * @param {PeriodicidadUpdateArgs} args - Arguments to update one Periodicidad.
     * @example
     * // Update one Periodicidad
     * const periodicidad = await prisma.periodicidad.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PeriodicidadUpdateArgs>(args: SelectSubset<T, PeriodicidadUpdateArgs<ExtArgs>>): Prisma__PeriodicidadClient<$Result.GetResult<Prisma.$PeriodicidadPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Periodicidads.
     * @param {PeriodicidadDeleteManyArgs} args - Arguments to filter Periodicidads to delete.
     * @example
     * // Delete a few Periodicidads
     * const { count } = await prisma.periodicidad.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PeriodicidadDeleteManyArgs>(args?: SelectSubset<T, PeriodicidadDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Periodicidads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PeriodicidadUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Periodicidads
     * const periodicidad = await prisma.periodicidad.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PeriodicidadUpdateManyArgs>(args: SelectSubset<T, PeriodicidadUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Periodicidad.
     * @param {PeriodicidadUpsertArgs} args - Arguments to update or create a Periodicidad.
     * @example
     * // Update or create a Periodicidad
     * const periodicidad = await prisma.periodicidad.upsert({
     *   create: {
     *     // ... data to create a Periodicidad
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Periodicidad we want to update
     *   }
     * })
     */
    upsert<T extends PeriodicidadUpsertArgs>(args: SelectSubset<T, PeriodicidadUpsertArgs<ExtArgs>>): Prisma__PeriodicidadClient<$Result.GetResult<Prisma.$PeriodicidadPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Periodicidads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PeriodicidadCountArgs} args - Arguments to filter Periodicidads to count.
     * @example
     * // Count the number of Periodicidads
     * const count = await prisma.periodicidad.count({
     *   where: {
     *     // ... the filter for the Periodicidads we want to count
     *   }
     * })
    **/
    count<T extends PeriodicidadCountArgs>(
      args?: Subset<T, PeriodicidadCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PeriodicidadCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Periodicidad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PeriodicidadAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PeriodicidadAggregateArgs>(args: Subset<T, PeriodicidadAggregateArgs>): Prisma.PrismaPromise<GetPeriodicidadAggregateType<T>>

    /**
     * Group by Periodicidad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PeriodicidadGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PeriodicidadGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PeriodicidadGroupByArgs['orderBy'] }
        : { orderBy?: PeriodicidadGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PeriodicidadGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPeriodicidadGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Periodicidad model
   */
  readonly fields: PeriodicidadFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Periodicidad.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PeriodicidadClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    actividades<T extends Periodicidad$actividadesArgs<ExtArgs> = {}>(args?: Subset<T, Periodicidad$actividadesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActividadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Periodicidad model
   */
  interface PeriodicidadFieldRefs {
    readonly id: FieldRef<"Periodicidad", 'Int'>
    readonly nombre: FieldRef<"Periodicidad", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Periodicidad findUnique
   */
  export type PeriodicidadFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Periodicidad
     */
    select?: PeriodicidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Periodicidad
     */
    omit?: PeriodicidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeriodicidadInclude<ExtArgs> | null
    /**
     * Filter, which Periodicidad to fetch.
     */
    where: PeriodicidadWhereUniqueInput
  }

  /**
   * Periodicidad findUniqueOrThrow
   */
  export type PeriodicidadFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Periodicidad
     */
    select?: PeriodicidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Periodicidad
     */
    omit?: PeriodicidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeriodicidadInclude<ExtArgs> | null
    /**
     * Filter, which Periodicidad to fetch.
     */
    where: PeriodicidadWhereUniqueInput
  }

  /**
   * Periodicidad findFirst
   */
  export type PeriodicidadFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Periodicidad
     */
    select?: PeriodicidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Periodicidad
     */
    omit?: PeriodicidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeriodicidadInclude<ExtArgs> | null
    /**
     * Filter, which Periodicidad to fetch.
     */
    where?: PeriodicidadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Periodicidads to fetch.
     */
    orderBy?: PeriodicidadOrderByWithRelationInput | PeriodicidadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Periodicidads.
     */
    cursor?: PeriodicidadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Periodicidads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Periodicidads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Periodicidads.
     */
    distinct?: PeriodicidadScalarFieldEnum | PeriodicidadScalarFieldEnum[]
  }

  /**
   * Periodicidad findFirstOrThrow
   */
  export type PeriodicidadFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Periodicidad
     */
    select?: PeriodicidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Periodicidad
     */
    omit?: PeriodicidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeriodicidadInclude<ExtArgs> | null
    /**
     * Filter, which Periodicidad to fetch.
     */
    where?: PeriodicidadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Periodicidads to fetch.
     */
    orderBy?: PeriodicidadOrderByWithRelationInput | PeriodicidadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Periodicidads.
     */
    cursor?: PeriodicidadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Periodicidads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Periodicidads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Periodicidads.
     */
    distinct?: PeriodicidadScalarFieldEnum | PeriodicidadScalarFieldEnum[]
  }

  /**
   * Periodicidad findMany
   */
  export type PeriodicidadFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Periodicidad
     */
    select?: PeriodicidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Periodicidad
     */
    omit?: PeriodicidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeriodicidadInclude<ExtArgs> | null
    /**
     * Filter, which Periodicidads to fetch.
     */
    where?: PeriodicidadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Periodicidads to fetch.
     */
    orderBy?: PeriodicidadOrderByWithRelationInput | PeriodicidadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Periodicidads.
     */
    cursor?: PeriodicidadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Periodicidads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Periodicidads.
     */
    skip?: number
    distinct?: PeriodicidadScalarFieldEnum | PeriodicidadScalarFieldEnum[]
  }

  /**
   * Periodicidad create
   */
  export type PeriodicidadCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Periodicidad
     */
    select?: PeriodicidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Periodicidad
     */
    omit?: PeriodicidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeriodicidadInclude<ExtArgs> | null
    /**
     * The data needed to create a Periodicidad.
     */
    data: XOR<PeriodicidadCreateInput, PeriodicidadUncheckedCreateInput>
  }

  /**
   * Periodicidad createMany
   */
  export type PeriodicidadCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Periodicidads.
     */
    data: PeriodicidadCreateManyInput | PeriodicidadCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Periodicidad update
   */
  export type PeriodicidadUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Periodicidad
     */
    select?: PeriodicidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Periodicidad
     */
    omit?: PeriodicidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeriodicidadInclude<ExtArgs> | null
    /**
     * The data needed to update a Periodicidad.
     */
    data: XOR<PeriodicidadUpdateInput, PeriodicidadUncheckedUpdateInput>
    /**
     * Choose, which Periodicidad to update.
     */
    where: PeriodicidadWhereUniqueInput
  }

  /**
   * Periodicidad updateMany
   */
  export type PeriodicidadUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Periodicidads.
     */
    data: XOR<PeriodicidadUpdateManyMutationInput, PeriodicidadUncheckedUpdateManyInput>
    /**
     * Filter which Periodicidads to update
     */
    where?: PeriodicidadWhereInput
    /**
     * Limit how many Periodicidads to update.
     */
    limit?: number
  }

  /**
   * Periodicidad upsert
   */
  export type PeriodicidadUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Periodicidad
     */
    select?: PeriodicidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Periodicidad
     */
    omit?: PeriodicidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeriodicidadInclude<ExtArgs> | null
    /**
     * The filter to search for the Periodicidad to update in case it exists.
     */
    where: PeriodicidadWhereUniqueInput
    /**
     * In case the Periodicidad found by the `where` argument doesn't exist, create a new Periodicidad with this data.
     */
    create: XOR<PeriodicidadCreateInput, PeriodicidadUncheckedCreateInput>
    /**
     * In case the Periodicidad was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PeriodicidadUpdateInput, PeriodicidadUncheckedUpdateInput>
  }

  /**
   * Periodicidad delete
   */
  export type PeriodicidadDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Periodicidad
     */
    select?: PeriodicidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Periodicidad
     */
    omit?: PeriodicidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeriodicidadInclude<ExtArgs> | null
    /**
     * Filter which Periodicidad to delete.
     */
    where: PeriodicidadWhereUniqueInput
  }

  /**
   * Periodicidad deleteMany
   */
  export type PeriodicidadDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Periodicidads to delete
     */
    where?: PeriodicidadWhereInput
    /**
     * Limit how many Periodicidads to delete.
     */
    limit?: number
  }

  /**
   * Periodicidad.actividades
   */
  export type Periodicidad$actividadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Actividad
     */
    select?: ActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Actividad
     */
    omit?: ActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadInclude<ExtArgs> | null
    where?: ActividadWhereInput
    orderBy?: ActividadOrderByWithRelationInput | ActividadOrderByWithRelationInput[]
    cursor?: ActividadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActividadScalarFieldEnum | ActividadScalarFieldEnum[]
  }

  /**
   * Periodicidad without action
   */
  export type PeriodicidadDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Periodicidad
     */
    select?: PeriodicidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Periodicidad
     */
    omit?: PeriodicidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PeriodicidadInclude<ExtArgs> | null
  }


  /**
   * Model Lugar
   */

  export type AggregateLugar = {
    _count: LugarCountAggregateOutputType | null
    _avg: LugarAvgAggregateOutputType | null
    _sum: LugarSumAggregateOutputType | null
    _min: LugarMinAggregateOutputType | null
    _max: LugarMaxAggregateOutputType | null
  }

  export type LugarAvgAggregateOutputType = {
    id: number | null
    cupo: number | null
  }

  export type LugarSumAggregateOutputType = {
    id: number | null
    cupo: number | null
  }

  export type LugarMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    cupo: number | null
  }

  export type LugarMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    cupo: number | null
  }

  export type LugarCountAggregateOutputType = {
    id: number
    nombre: number
    cupo: number
    _all: number
  }


  export type LugarAvgAggregateInputType = {
    id?: true
    cupo?: true
  }

  export type LugarSumAggregateInputType = {
    id?: true
    cupo?: true
  }

  export type LugarMinAggregateInputType = {
    id?: true
    nombre?: true
    cupo?: true
  }

  export type LugarMaxAggregateInputType = {
    id?: true
    nombre?: true
    cupo?: true
  }

  export type LugarCountAggregateInputType = {
    id?: true
    nombre?: true
    cupo?: true
    _all?: true
  }

  export type LugarAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Lugar to aggregate.
     */
    where?: LugarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Lugars to fetch.
     */
    orderBy?: LugarOrderByWithRelationInput | LugarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LugarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Lugars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Lugars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Lugars
    **/
    _count?: true | LugarCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LugarAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LugarSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LugarMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LugarMaxAggregateInputType
  }

  export type GetLugarAggregateType<T extends LugarAggregateArgs> = {
        [P in keyof T & keyof AggregateLugar]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLugar[P]>
      : GetScalarType<T[P], AggregateLugar[P]>
  }




  export type LugarGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LugarWhereInput
    orderBy?: LugarOrderByWithAggregationInput | LugarOrderByWithAggregationInput[]
    by: LugarScalarFieldEnum[] | LugarScalarFieldEnum
    having?: LugarScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LugarCountAggregateInputType | true
    _avg?: LugarAvgAggregateInputType
    _sum?: LugarSumAggregateInputType
    _min?: LugarMinAggregateInputType
    _max?: LugarMaxAggregateInputType
  }

  export type LugarGroupByOutputType = {
    id: number
    nombre: string
    cupo: number | null
    _count: LugarCountAggregateOutputType | null
    _avg: LugarAvgAggregateOutputType | null
    _sum: LugarSumAggregateOutputType | null
    _min: LugarMinAggregateOutputType | null
    _max: LugarMaxAggregateOutputType | null
  }

  type GetLugarGroupByPayload<T extends LugarGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LugarGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LugarGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LugarGroupByOutputType[P]>
            : GetScalarType<T[P], LugarGroupByOutputType[P]>
        }
      >
    >


  export type LugarSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    cupo?: boolean
    actividades?: boolean | Lugar$actividadesArgs<ExtArgs>
    citas?: boolean | Lugar$citasArgs<ExtArgs>
    _count?: boolean | LugarCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["lugar"]>



  export type LugarSelectScalar = {
    id?: boolean
    nombre?: boolean
    cupo?: boolean
  }

  export type LugarOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "cupo", ExtArgs["result"]["lugar"]>
  export type LugarInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    actividades?: boolean | Lugar$actividadesArgs<ExtArgs>
    citas?: boolean | Lugar$citasArgs<ExtArgs>
    _count?: boolean | LugarCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $LugarPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Lugar"
    objects: {
      actividades: Prisma.$ActividadPayload<ExtArgs>[]
      citas: Prisma.$CitaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      cupo: number | null
    }, ExtArgs["result"]["lugar"]>
    composites: {}
  }

  type LugarGetPayload<S extends boolean | null | undefined | LugarDefaultArgs> = $Result.GetResult<Prisma.$LugarPayload, S>

  type LugarCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LugarFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LugarCountAggregateInputType | true
    }

  export interface LugarDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Lugar'], meta: { name: 'Lugar' } }
    /**
     * Find zero or one Lugar that matches the filter.
     * @param {LugarFindUniqueArgs} args - Arguments to find a Lugar
     * @example
     * // Get one Lugar
     * const lugar = await prisma.lugar.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LugarFindUniqueArgs>(args: SelectSubset<T, LugarFindUniqueArgs<ExtArgs>>): Prisma__LugarClient<$Result.GetResult<Prisma.$LugarPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Lugar that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LugarFindUniqueOrThrowArgs} args - Arguments to find a Lugar
     * @example
     * // Get one Lugar
     * const lugar = await prisma.lugar.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LugarFindUniqueOrThrowArgs>(args: SelectSubset<T, LugarFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LugarClient<$Result.GetResult<Prisma.$LugarPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Lugar that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LugarFindFirstArgs} args - Arguments to find a Lugar
     * @example
     * // Get one Lugar
     * const lugar = await prisma.lugar.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LugarFindFirstArgs>(args?: SelectSubset<T, LugarFindFirstArgs<ExtArgs>>): Prisma__LugarClient<$Result.GetResult<Prisma.$LugarPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Lugar that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LugarFindFirstOrThrowArgs} args - Arguments to find a Lugar
     * @example
     * // Get one Lugar
     * const lugar = await prisma.lugar.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LugarFindFirstOrThrowArgs>(args?: SelectSubset<T, LugarFindFirstOrThrowArgs<ExtArgs>>): Prisma__LugarClient<$Result.GetResult<Prisma.$LugarPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Lugars that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LugarFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Lugars
     * const lugars = await prisma.lugar.findMany()
     * 
     * // Get first 10 Lugars
     * const lugars = await prisma.lugar.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const lugarWithIdOnly = await prisma.lugar.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LugarFindManyArgs>(args?: SelectSubset<T, LugarFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LugarPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Lugar.
     * @param {LugarCreateArgs} args - Arguments to create a Lugar.
     * @example
     * // Create one Lugar
     * const Lugar = await prisma.lugar.create({
     *   data: {
     *     // ... data to create a Lugar
     *   }
     * })
     * 
     */
    create<T extends LugarCreateArgs>(args: SelectSubset<T, LugarCreateArgs<ExtArgs>>): Prisma__LugarClient<$Result.GetResult<Prisma.$LugarPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Lugars.
     * @param {LugarCreateManyArgs} args - Arguments to create many Lugars.
     * @example
     * // Create many Lugars
     * const lugar = await prisma.lugar.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LugarCreateManyArgs>(args?: SelectSubset<T, LugarCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Lugar.
     * @param {LugarDeleteArgs} args - Arguments to delete one Lugar.
     * @example
     * // Delete one Lugar
     * const Lugar = await prisma.lugar.delete({
     *   where: {
     *     // ... filter to delete one Lugar
     *   }
     * })
     * 
     */
    delete<T extends LugarDeleteArgs>(args: SelectSubset<T, LugarDeleteArgs<ExtArgs>>): Prisma__LugarClient<$Result.GetResult<Prisma.$LugarPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Lugar.
     * @param {LugarUpdateArgs} args - Arguments to update one Lugar.
     * @example
     * // Update one Lugar
     * const lugar = await prisma.lugar.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LugarUpdateArgs>(args: SelectSubset<T, LugarUpdateArgs<ExtArgs>>): Prisma__LugarClient<$Result.GetResult<Prisma.$LugarPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Lugars.
     * @param {LugarDeleteManyArgs} args - Arguments to filter Lugars to delete.
     * @example
     * // Delete a few Lugars
     * const { count } = await prisma.lugar.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LugarDeleteManyArgs>(args?: SelectSubset<T, LugarDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Lugars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LugarUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Lugars
     * const lugar = await prisma.lugar.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LugarUpdateManyArgs>(args: SelectSubset<T, LugarUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Lugar.
     * @param {LugarUpsertArgs} args - Arguments to update or create a Lugar.
     * @example
     * // Update or create a Lugar
     * const lugar = await prisma.lugar.upsert({
     *   create: {
     *     // ... data to create a Lugar
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Lugar we want to update
     *   }
     * })
     */
    upsert<T extends LugarUpsertArgs>(args: SelectSubset<T, LugarUpsertArgs<ExtArgs>>): Prisma__LugarClient<$Result.GetResult<Prisma.$LugarPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Lugars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LugarCountArgs} args - Arguments to filter Lugars to count.
     * @example
     * // Count the number of Lugars
     * const count = await prisma.lugar.count({
     *   where: {
     *     // ... the filter for the Lugars we want to count
     *   }
     * })
    **/
    count<T extends LugarCountArgs>(
      args?: Subset<T, LugarCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LugarCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Lugar.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LugarAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LugarAggregateArgs>(args: Subset<T, LugarAggregateArgs>): Prisma.PrismaPromise<GetLugarAggregateType<T>>

    /**
     * Group by Lugar.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LugarGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LugarGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LugarGroupByArgs['orderBy'] }
        : { orderBy?: LugarGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LugarGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLugarGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Lugar model
   */
  readonly fields: LugarFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Lugar.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LugarClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    actividades<T extends Lugar$actividadesArgs<ExtArgs> = {}>(args?: Subset<T, Lugar$actividadesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActividadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    citas<T extends Lugar$citasArgs<ExtArgs> = {}>(args?: Subset<T, Lugar$citasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CitaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Lugar model
   */
  interface LugarFieldRefs {
    readonly id: FieldRef<"Lugar", 'Int'>
    readonly nombre: FieldRef<"Lugar", 'String'>
    readonly cupo: FieldRef<"Lugar", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Lugar findUnique
   */
  export type LugarFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lugar
     */
    select?: LugarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lugar
     */
    omit?: LugarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LugarInclude<ExtArgs> | null
    /**
     * Filter, which Lugar to fetch.
     */
    where: LugarWhereUniqueInput
  }

  /**
   * Lugar findUniqueOrThrow
   */
  export type LugarFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lugar
     */
    select?: LugarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lugar
     */
    omit?: LugarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LugarInclude<ExtArgs> | null
    /**
     * Filter, which Lugar to fetch.
     */
    where: LugarWhereUniqueInput
  }

  /**
   * Lugar findFirst
   */
  export type LugarFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lugar
     */
    select?: LugarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lugar
     */
    omit?: LugarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LugarInclude<ExtArgs> | null
    /**
     * Filter, which Lugar to fetch.
     */
    where?: LugarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Lugars to fetch.
     */
    orderBy?: LugarOrderByWithRelationInput | LugarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Lugars.
     */
    cursor?: LugarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Lugars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Lugars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Lugars.
     */
    distinct?: LugarScalarFieldEnum | LugarScalarFieldEnum[]
  }

  /**
   * Lugar findFirstOrThrow
   */
  export type LugarFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lugar
     */
    select?: LugarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lugar
     */
    omit?: LugarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LugarInclude<ExtArgs> | null
    /**
     * Filter, which Lugar to fetch.
     */
    where?: LugarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Lugars to fetch.
     */
    orderBy?: LugarOrderByWithRelationInput | LugarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Lugars.
     */
    cursor?: LugarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Lugars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Lugars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Lugars.
     */
    distinct?: LugarScalarFieldEnum | LugarScalarFieldEnum[]
  }

  /**
   * Lugar findMany
   */
  export type LugarFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lugar
     */
    select?: LugarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lugar
     */
    omit?: LugarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LugarInclude<ExtArgs> | null
    /**
     * Filter, which Lugars to fetch.
     */
    where?: LugarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Lugars to fetch.
     */
    orderBy?: LugarOrderByWithRelationInput | LugarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Lugars.
     */
    cursor?: LugarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Lugars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Lugars.
     */
    skip?: number
    distinct?: LugarScalarFieldEnum | LugarScalarFieldEnum[]
  }

  /**
   * Lugar create
   */
  export type LugarCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lugar
     */
    select?: LugarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lugar
     */
    omit?: LugarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LugarInclude<ExtArgs> | null
    /**
     * The data needed to create a Lugar.
     */
    data: XOR<LugarCreateInput, LugarUncheckedCreateInput>
  }

  /**
   * Lugar createMany
   */
  export type LugarCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Lugars.
     */
    data: LugarCreateManyInput | LugarCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Lugar update
   */
  export type LugarUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lugar
     */
    select?: LugarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lugar
     */
    omit?: LugarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LugarInclude<ExtArgs> | null
    /**
     * The data needed to update a Lugar.
     */
    data: XOR<LugarUpdateInput, LugarUncheckedUpdateInput>
    /**
     * Choose, which Lugar to update.
     */
    where: LugarWhereUniqueInput
  }

  /**
   * Lugar updateMany
   */
  export type LugarUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Lugars.
     */
    data: XOR<LugarUpdateManyMutationInput, LugarUncheckedUpdateManyInput>
    /**
     * Filter which Lugars to update
     */
    where?: LugarWhereInput
    /**
     * Limit how many Lugars to update.
     */
    limit?: number
  }

  /**
   * Lugar upsert
   */
  export type LugarUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lugar
     */
    select?: LugarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lugar
     */
    omit?: LugarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LugarInclude<ExtArgs> | null
    /**
     * The filter to search for the Lugar to update in case it exists.
     */
    where: LugarWhereUniqueInput
    /**
     * In case the Lugar found by the `where` argument doesn't exist, create a new Lugar with this data.
     */
    create: XOR<LugarCreateInput, LugarUncheckedCreateInput>
    /**
     * In case the Lugar was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LugarUpdateInput, LugarUncheckedUpdateInput>
  }

  /**
   * Lugar delete
   */
  export type LugarDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lugar
     */
    select?: LugarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lugar
     */
    omit?: LugarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LugarInclude<ExtArgs> | null
    /**
     * Filter which Lugar to delete.
     */
    where: LugarWhereUniqueInput
  }

  /**
   * Lugar deleteMany
   */
  export type LugarDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Lugars to delete
     */
    where?: LugarWhereInput
    /**
     * Limit how many Lugars to delete.
     */
    limit?: number
  }

  /**
   * Lugar.actividades
   */
  export type Lugar$actividadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Actividad
     */
    select?: ActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Actividad
     */
    omit?: ActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadInclude<ExtArgs> | null
    where?: ActividadWhereInput
    orderBy?: ActividadOrderByWithRelationInput | ActividadOrderByWithRelationInput[]
    cursor?: ActividadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActividadScalarFieldEnum | ActividadScalarFieldEnum[]
  }

  /**
   * Lugar.citas
   */
  export type Lugar$citasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cita
     */
    select?: CitaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cita
     */
    omit?: CitaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CitaInclude<ExtArgs> | null
    where?: CitaWhereInput
    orderBy?: CitaOrderByWithRelationInput | CitaOrderByWithRelationInput[]
    cursor?: CitaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CitaScalarFieldEnum | CitaScalarFieldEnum[]
  }

  /**
   * Lugar without action
   */
  export type LugarDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lugar
     */
    select?: LugarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lugar
     */
    omit?: LugarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LugarInclude<ExtArgs> | null
  }


  /**
   * Model OferenteActividad
   */

  export type AggregateOferenteActividad = {
    _count: OferenteActividadCountAggregateOutputType | null
    _avg: OferenteActividadAvgAggregateOutputType | null
    _sum: OferenteActividadSumAggregateOutputType | null
    _min: OferenteActividadMinAggregateOutputType | null
    _max: OferenteActividadMaxAggregateOutputType | null
  }

  export type OferenteActividadAvgAggregateOutputType = {
    id: number | null
    actividadId: number | null
  }

  export type OferenteActividadSumAggregateOutputType = {
    id: number | null
    actividadId: number | null
  }

  export type OferenteActividadMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    docente: string | null
    actividadId: number | null
  }

  export type OferenteActividadMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    docente: string | null
    actividadId: number | null
  }

  export type OferenteActividadCountAggregateOutputType = {
    id: number
    nombre: number
    docente: number
    actividadId: number
    _all: number
  }


  export type OferenteActividadAvgAggregateInputType = {
    id?: true
    actividadId?: true
  }

  export type OferenteActividadSumAggregateInputType = {
    id?: true
    actividadId?: true
  }

  export type OferenteActividadMinAggregateInputType = {
    id?: true
    nombre?: true
    docente?: true
    actividadId?: true
  }

  export type OferenteActividadMaxAggregateInputType = {
    id?: true
    nombre?: true
    docente?: true
    actividadId?: true
  }

  export type OferenteActividadCountAggregateInputType = {
    id?: true
    nombre?: true
    docente?: true
    actividadId?: true
    _all?: true
  }

  export type OferenteActividadAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OferenteActividad to aggregate.
     */
    where?: OferenteActividadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OferenteActividads to fetch.
     */
    orderBy?: OferenteActividadOrderByWithRelationInput | OferenteActividadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OferenteActividadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OferenteActividads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OferenteActividads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OferenteActividads
    **/
    _count?: true | OferenteActividadCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OferenteActividadAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OferenteActividadSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OferenteActividadMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OferenteActividadMaxAggregateInputType
  }

  export type GetOferenteActividadAggregateType<T extends OferenteActividadAggregateArgs> = {
        [P in keyof T & keyof AggregateOferenteActividad]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOferenteActividad[P]>
      : GetScalarType<T[P], AggregateOferenteActividad[P]>
  }




  export type OferenteActividadGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OferenteActividadWhereInput
    orderBy?: OferenteActividadOrderByWithAggregationInput | OferenteActividadOrderByWithAggregationInput[]
    by: OferenteActividadScalarFieldEnum[] | OferenteActividadScalarFieldEnum
    having?: OferenteActividadScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OferenteActividadCountAggregateInputType | true
    _avg?: OferenteActividadAvgAggregateInputType
    _sum?: OferenteActividadSumAggregateInputType
    _min?: OferenteActividadMinAggregateInputType
    _max?: OferenteActividadMaxAggregateInputType
  }

  export type OferenteActividadGroupByOutputType = {
    id: number
    nombre: string
    docente: string
    actividadId: number
    _count: OferenteActividadCountAggregateOutputType | null
    _avg: OferenteActividadAvgAggregateOutputType | null
    _sum: OferenteActividadSumAggregateOutputType | null
    _min: OferenteActividadMinAggregateOutputType | null
    _max: OferenteActividadMaxAggregateOutputType | null
  }

  type GetOferenteActividadGroupByPayload<T extends OferenteActividadGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OferenteActividadGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OferenteActividadGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OferenteActividadGroupByOutputType[P]>
            : GetScalarType<T[P], OferenteActividadGroupByOutputType[P]>
        }
      >
    >


  export type OferenteActividadSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    docente?: boolean
    actividadId?: boolean
    actividad?: boolean | ActividadDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["oferenteActividad"]>



  export type OferenteActividadSelectScalar = {
    id?: boolean
    nombre?: boolean
    docente?: boolean
    actividadId?: boolean
  }

  export type OferenteActividadOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "docente" | "actividadId", ExtArgs["result"]["oferenteActividad"]>
  export type OferenteActividadInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    actividad?: boolean | ActividadDefaultArgs<ExtArgs>
  }

  export type $OferenteActividadPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OferenteActividad"
    objects: {
      actividad: Prisma.$ActividadPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      docente: string
      actividadId: number
    }, ExtArgs["result"]["oferenteActividad"]>
    composites: {}
  }

  type OferenteActividadGetPayload<S extends boolean | null | undefined | OferenteActividadDefaultArgs> = $Result.GetResult<Prisma.$OferenteActividadPayload, S>

  type OferenteActividadCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OferenteActividadFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OferenteActividadCountAggregateInputType | true
    }

  export interface OferenteActividadDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OferenteActividad'], meta: { name: 'OferenteActividad' } }
    /**
     * Find zero or one OferenteActividad that matches the filter.
     * @param {OferenteActividadFindUniqueArgs} args - Arguments to find a OferenteActividad
     * @example
     * // Get one OferenteActividad
     * const oferenteActividad = await prisma.oferenteActividad.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OferenteActividadFindUniqueArgs>(args: SelectSubset<T, OferenteActividadFindUniqueArgs<ExtArgs>>): Prisma__OferenteActividadClient<$Result.GetResult<Prisma.$OferenteActividadPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OferenteActividad that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OferenteActividadFindUniqueOrThrowArgs} args - Arguments to find a OferenteActividad
     * @example
     * // Get one OferenteActividad
     * const oferenteActividad = await prisma.oferenteActividad.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OferenteActividadFindUniqueOrThrowArgs>(args: SelectSubset<T, OferenteActividadFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OferenteActividadClient<$Result.GetResult<Prisma.$OferenteActividadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OferenteActividad that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OferenteActividadFindFirstArgs} args - Arguments to find a OferenteActividad
     * @example
     * // Get one OferenteActividad
     * const oferenteActividad = await prisma.oferenteActividad.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OferenteActividadFindFirstArgs>(args?: SelectSubset<T, OferenteActividadFindFirstArgs<ExtArgs>>): Prisma__OferenteActividadClient<$Result.GetResult<Prisma.$OferenteActividadPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OferenteActividad that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OferenteActividadFindFirstOrThrowArgs} args - Arguments to find a OferenteActividad
     * @example
     * // Get one OferenteActividad
     * const oferenteActividad = await prisma.oferenteActividad.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OferenteActividadFindFirstOrThrowArgs>(args?: SelectSubset<T, OferenteActividadFindFirstOrThrowArgs<ExtArgs>>): Prisma__OferenteActividadClient<$Result.GetResult<Prisma.$OferenteActividadPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OferenteActividads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OferenteActividadFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OferenteActividads
     * const oferenteActividads = await prisma.oferenteActividad.findMany()
     * 
     * // Get first 10 OferenteActividads
     * const oferenteActividads = await prisma.oferenteActividad.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const oferenteActividadWithIdOnly = await prisma.oferenteActividad.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OferenteActividadFindManyArgs>(args?: SelectSubset<T, OferenteActividadFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OferenteActividadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OferenteActividad.
     * @param {OferenteActividadCreateArgs} args - Arguments to create a OferenteActividad.
     * @example
     * // Create one OferenteActividad
     * const OferenteActividad = await prisma.oferenteActividad.create({
     *   data: {
     *     // ... data to create a OferenteActividad
     *   }
     * })
     * 
     */
    create<T extends OferenteActividadCreateArgs>(args: SelectSubset<T, OferenteActividadCreateArgs<ExtArgs>>): Prisma__OferenteActividadClient<$Result.GetResult<Prisma.$OferenteActividadPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OferenteActividads.
     * @param {OferenteActividadCreateManyArgs} args - Arguments to create many OferenteActividads.
     * @example
     * // Create many OferenteActividads
     * const oferenteActividad = await prisma.oferenteActividad.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OferenteActividadCreateManyArgs>(args?: SelectSubset<T, OferenteActividadCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a OferenteActividad.
     * @param {OferenteActividadDeleteArgs} args - Arguments to delete one OferenteActividad.
     * @example
     * // Delete one OferenteActividad
     * const OferenteActividad = await prisma.oferenteActividad.delete({
     *   where: {
     *     // ... filter to delete one OferenteActividad
     *   }
     * })
     * 
     */
    delete<T extends OferenteActividadDeleteArgs>(args: SelectSubset<T, OferenteActividadDeleteArgs<ExtArgs>>): Prisma__OferenteActividadClient<$Result.GetResult<Prisma.$OferenteActividadPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OferenteActividad.
     * @param {OferenteActividadUpdateArgs} args - Arguments to update one OferenteActividad.
     * @example
     * // Update one OferenteActividad
     * const oferenteActividad = await prisma.oferenteActividad.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OferenteActividadUpdateArgs>(args: SelectSubset<T, OferenteActividadUpdateArgs<ExtArgs>>): Prisma__OferenteActividadClient<$Result.GetResult<Prisma.$OferenteActividadPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OferenteActividads.
     * @param {OferenteActividadDeleteManyArgs} args - Arguments to filter OferenteActividads to delete.
     * @example
     * // Delete a few OferenteActividads
     * const { count } = await prisma.oferenteActividad.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OferenteActividadDeleteManyArgs>(args?: SelectSubset<T, OferenteActividadDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OferenteActividads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OferenteActividadUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OferenteActividads
     * const oferenteActividad = await prisma.oferenteActividad.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OferenteActividadUpdateManyArgs>(args: SelectSubset<T, OferenteActividadUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one OferenteActividad.
     * @param {OferenteActividadUpsertArgs} args - Arguments to update or create a OferenteActividad.
     * @example
     * // Update or create a OferenteActividad
     * const oferenteActividad = await prisma.oferenteActividad.upsert({
     *   create: {
     *     // ... data to create a OferenteActividad
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OferenteActividad we want to update
     *   }
     * })
     */
    upsert<T extends OferenteActividadUpsertArgs>(args: SelectSubset<T, OferenteActividadUpsertArgs<ExtArgs>>): Prisma__OferenteActividadClient<$Result.GetResult<Prisma.$OferenteActividadPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OferenteActividads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OferenteActividadCountArgs} args - Arguments to filter OferenteActividads to count.
     * @example
     * // Count the number of OferenteActividads
     * const count = await prisma.oferenteActividad.count({
     *   where: {
     *     // ... the filter for the OferenteActividads we want to count
     *   }
     * })
    **/
    count<T extends OferenteActividadCountArgs>(
      args?: Subset<T, OferenteActividadCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OferenteActividadCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OferenteActividad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OferenteActividadAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OferenteActividadAggregateArgs>(args: Subset<T, OferenteActividadAggregateArgs>): Prisma.PrismaPromise<GetOferenteActividadAggregateType<T>>

    /**
     * Group by OferenteActividad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OferenteActividadGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OferenteActividadGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OferenteActividadGroupByArgs['orderBy'] }
        : { orderBy?: OferenteActividadGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OferenteActividadGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOferenteActividadGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OferenteActividad model
   */
  readonly fields: OferenteActividadFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OferenteActividad.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OferenteActividadClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    actividad<T extends ActividadDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ActividadDefaultArgs<ExtArgs>>): Prisma__ActividadClient<$Result.GetResult<Prisma.$ActividadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OferenteActividad model
   */
  interface OferenteActividadFieldRefs {
    readonly id: FieldRef<"OferenteActividad", 'Int'>
    readonly nombre: FieldRef<"OferenteActividad", 'String'>
    readonly docente: FieldRef<"OferenteActividad", 'String'>
    readonly actividadId: FieldRef<"OferenteActividad", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * OferenteActividad findUnique
   */
  export type OferenteActividadFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OferenteActividad
     */
    select?: OferenteActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OferenteActividad
     */
    omit?: OferenteActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OferenteActividadInclude<ExtArgs> | null
    /**
     * Filter, which OferenteActividad to fetch.
     */
    where: OferenteActividadWhereUniqueInput
  }

  /**
   * OferenteActividad findUniqueOrThrow
   */
  export type OferenteActividadFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OferenteActividad
     */
    select?: OferenteActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OferenteActividad
     */
    omit?: OferenteActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OferenteActividadInclude<ExtArgs> | null
    /**
     * Filter, which OferenteActividad to fetch.
     */
    where: OferenteActividadWhereUniqueInput
  }

  /**
   * OferenteActividad findFirst
   */
  export type OferenteActividadFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OferenteActividad
     */
    select?: OferenteActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OferenteActividad
     */
    omit?: OferenteActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OferenteActividadInclude<ExtArgs> | null
    /**
     * Filter, which OferenteActividad to fetch.
     */
    where?: OferenteActividadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OferenteActividads to fetch.
     */
    orderBy?: OferenteActividadOrderByWithRelationInput | OferenteActividadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OferenteActividads.
     */
    cursor?: OferenteActividadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OferenteActividads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OferenteActividads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OferenteActividads.
     */
    distinct?: OferenteActividadScalarFieldEnum | OferenteActividadScalarFieldEnum[]
  }

  /**
   * OferenteActividad findFirstOrThrow
   */
  export type OferenteActividadFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OferenteActividad
     */
    select?: OferenteActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OferenteActividad
     */
    omit?: OferenteActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OferenteActividadInclude<ExtArgs> | null
    /**
     * Filter, which OferenteActividad to fetch.
     */
    where?: OferenteActividadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OferenteActividads to fetch.
     */
    orderBy?: OferenteActividadOrderByWithRelationInput | OferenteActividadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OferenteActividads.
     */
    cursor?: OferenteActividadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OferenteActividads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OferenteActividads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OferenteActividads.
     */
    distinct?: OferenteActividadScalarFieldEnum | OferenteActividadScalarFieldEnum[]
  }

  /**
   * OferenteActividad findMany
   */
  export type OferenteActividadFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OferenteActividad
     */
    select?: OferenteActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OferenteActividad
     */
    omit?: OferenteActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OferenteActividadInclude<ExtArgs> | null
    /**
     * Filter, which OferenteActividads to fetch.
     */
    where?: OferenteActividadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OferenteActividads to fetch.
     */
    orderBy?: OferenteActividadOrderByWithRelationInput | OferenteActividadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OferenteActividads.
     */
    cursor?: OferenteActividadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OferenteActividads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OferenteActividads.
     */
    skip?: number
    distinct?: OferenteActividadScalarFieldEnum | OferenteActividadScalarFieldEnum[]
  }

  /**
   * OferenteActividad create
   */
  export type OferenteActividadCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OferenteActividad
     */
    select?: OferenteActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OferenteActividad
     */
    omit?: OferenteActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OferenteActividadInclude<ExtArgs> | null
    /**
     * The data needed to create a OferenteActividad.
     */
    data: XOR<OferenteActividadCreateInput, OferenteActividadUncheckedCreateInput>
  }

  /**
   * OferenteActividad createMany
   */
  export type OferenteActividadCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OferenteActividads.
     */
    data: OferenteActividadCreateManyInput | OferenteActividadCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OferenteActividad update
   */
  export type OferenteActividadUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OferenteActividad
     */
    select?: OferenteActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OferenteActividad
     */
    omit?: OferenteActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OferenteActividadInclude<ExtArgs> | null
    /**
     * The data needed to update a OferenteActividad.
     */
    data: XOR<OferenteActividadUpdateInput, OferenteActividadUncheckedUpdateInput>
    /**
     * Choose, which OferenteActividad to update.
     */
    where: OferenteActividadWhereUniqueInput
  }

  /**
   * OferenteActividad updateMany
   */
  export type OferenteActividadUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OferenteActividads.
     */
    data: XOR<OferenteActividadUpdateManyMutationInput, OferenteActividadUncheckedUpdateManyInput>
    /**
     * Filter which OferenteActividads to update
     */
    where?: OferenteActividadWhereInput
    /**
     * Limit how many OferenteActividads to update.
     */
    limit?: number
  }

  /**
   * OferenteActividad upsert
   */
  export type OferenteActividadUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OferenteActividad
     */
    select?: OferenteActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OferenteActividad
     */
    omit?: OferenteActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OferenteActividadInclude<ExtArgs> | null
    /**
     * The filter to search for the OferenteActividad to update in case it exists.
     */
    where: OferenteActividadWhereUniqueInput
    /**
     * In case the OferenteActividad found by the `where` argument doesn't exist, create a new OferenteActividad with this data.
     */
    create: XOR<OferenteActividadCreateInput, OferenteActividadUncheckedCreateInput>
    /**
     * In case the OferenteActividad was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OferenteActividadUpdateInput, OferenteActividadUncheckedUpdateInput>
  }

  /**
   * OferenteActividad delete
   */
  export type OferenteActividadDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OferenteActividad
     */
    select?: OferenteActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OferenteActividad
     */
    omit?: OferenteActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OferenteActividadInclude<ExtArgs> | null
    /**
     * Filter which OferenteActividad to delete.
     */
    where: OferenteActividadWhereUniqueInput
  }

  /**
   * OferenteActividad deleteMany
   */
  export type OferenteActividadDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OferenteActividads to delete
     */
    where?: OferenteActividadWhereInput
    /**
     * Limit how many OferenteActividads to delete.
     */
    limit?: number
  }

  /**
   * OferenteActividad without action
   */
  export type OferenteActividadDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OferenteActividad
     */
    select?: OferenteActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OferenteActividad
     */
    omit?: OferenteActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OferenteActividadInclude<ExtArgs> | null
  }


  /**
   * Model SocioComunitario
   */

  export type AggregateSocioComunitario = {
    _count: SocioComunitarioCountAggregateOutputType | null
    _avg: SocioComunitarioAvgAggregateOutputType | null
    _sum: SocioComunitarioSumAggregateOutputType | null
    _min: SocioComunitarioMinAggregateOutputType | null
    _max: SocioComunitarioMaxAggregateOutputType | null
  }

  export type SocioComunitarioAvgAggregateOutputType = {
    id: number | null
  }

  export type SocioComunitarioSumAggregateOutputType = {
    id: number | null
  }

  export type SocioComunitarioMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    activo: boolean | null
  }

  export type SocioComunitarioMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    activo: boolean | null
  }

  export type SocioComunitarioCountAggregateOutputType = {
    id: number
    nombre: number
    activo: number
    _all: number
  }


  export type SocioComunitarioAvgAggregateInputType = {
    id?: true
  }

  export type SocioComunitarioSumAggregateInputType = {
    id?: true
  }

  export type SocioComunitarioMinAggregateInputType = {
    id?: true
    nombre?: true
    activo?: true
  }

  export type SocioComunitarioMaxAggregateInputType = {
    id?: true
    nombre?: true
    activo?: true
  }

  export type SocioComunitarioCountAggregateInputType = {
    id?: true
    nombre?: true
    activo?: true
    _all?: true
  }

  export type SocioComunitarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SocioComunitario to aggregate.
     */
    where?: SocioComunitarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SocioComunitarios to fetch.
     */
    orderBy?: SocioComunitarioOrderByWithRelationInput | SocioComunitarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SocioComunitarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SocioComunitarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SocioComunitarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SocioComunitarios
    **/
    _count?: true | SocioComunitarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SocioComunitarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SocioComunitarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SocioComunitarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SocioComunitarioMaxAggregateInputType
  }

  export type GetSocioComunitarioAggregateType<T extends SocioComunitarioAggregateArgs> = {
        [P in keyof T & keyof AggregateSocioComunitario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSocioComunitario[P]>
      : GetScalarType<T[P], AggregateSocioComunitario[P]>
  }




  export type SocioComunitarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SocioComunitarioWhereInput
    orderBy?: SocioComunitarioOrderByWithAggregationInput | SocioComunitarioOrderByWithAggregationInput[]
    by: SocioComunitarioScalarFieldEnum[] | SocioComunitarioScalarFieldEnum
    having?: SocioComunitarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SocioComunitarioCountAggregateInputType | true
    _avg?: SocioComunitarioAvgAggregateInputType
    _sum?: SocioComunitarioSumAggregateInputType
    _min?: SocioComunitarioMinAggregateInputType
    _max?: SocioComunitarioMaxAggregateInputType
  }

  export type SocioComunitarioGroupByOutputType = {
    id: number
    nombre: string
    activo: boolean
    _count: SocioComunitarioCountAggregateOutputType | null
    _avg: SocioComunitarioAvgAggregateOutputType | null
    _sum: SocioComunitarioSumAggregateOutputType | null
    _min: SocioComunitarioMinAggregateOutputType | null
    _max: SocioComunitarioMaxAggregateOutputType | null
  }

  type GetSocioComunitarioGroupByPayload<T extends SocioComunitarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SocioComunitarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SocioComunitarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SocioComunitarioGroupByOutputType[P]>
            : GetScalarType<T[P], SocioComunitarioGroupByOutputType[P]>
        }
      >
    >


  export type SocioComunitarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    activo?: boolean
  }, ExtArgs["result"]["socioComunitario"]>



  export type SocioComunitarioSelectScalar = {
    id?: boolean
    nombre?: boolean
    activo?: boolean
  }

  export type SocioComunitarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "activo", ExtArgs["result"]["socioComunitario"]>

  export type $SocioComunitarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SocioComunitario"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      activo: boolean
    }, ExtArgs["result"]["socioComunitario"]>
    composites: {}
  }

  type SocioComunitarioGetPayload<S extends boolean | null | undefined | SocioComunitarioDefaultArgs> = $Result.GetResult<Prisma.$SocioComunitarioPayload, S>

  type SocioComunitarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SocioComunitarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SocioComunitarioCountAggregateInputType | true
    }

  export interface SocioComunitarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SocioComunitario'], meta: { name: 'SocioComunitario' } }
    /**
     * Find zero or one SocioComunitario that matches the filter.
     * @param {SocioComunitarioFindUniqueArgs} args - Arguments to find a SocioComunitario
     * @example
     * // Get one SocioComunitario
     * const socioComunitario = await prisma.socioComunitario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SocioComunitarioFindUniqueArgs>(args: SelectSubset<T, SocioComunitarioFindUniqueArgs<ExtArgs>>): Prisma__SocioComunitarioClient<$Result.GetResult<Prisma.$SocioComunitarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SocioComunitario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SocioComunitarioFindUniqueOrThrowArgs} args - Arguments to find a SocioComunitario
     * @example
     * // Get one SocioComunitario
     * const socioComunitario = await prisma.socioComunitario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SocioComunitarioFindUniqueOrThrowArgs>(args: SelectSubset<T, SocioComunitarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SocioComunitarioClient<$Result.GetResult<Prisma.$SocioComunitarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SocioComunitario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocioComunitarioFindFirstArgs} args - Arguments to find a SocioComunitario
     * @example
     * // Get one SocioComunitario
     * const socioComunitario = await prisma.socioComunitario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SocioComunitarioFindFirstArgs>(args?: SelectSubset<T, SocioComunitarioFindFirstArgs<ExtArgs>>): Prisma__SocioComunitarioClient<$Result.GetResult<Prisma.$SocioComunitarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SocioComunitario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocioComunitarioFindFirstOrThrowArgs} args - Arguments to find a SocioComunitario
     * @example
     * // Get one SocioComunitario
     * const socioComunitario = await prisma.socioComunitario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SocioComunitarioFindFirstOrThrowArgs>(args?: SelectSubset<T, SocioComunitarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__SocioComunitarioClient<$Result.GetResult<Prisma.$SocioComunitarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SocioComunitarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocioComunitarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SocioComunitarios
     * const socioComunitarios = await prisma.socioComunitario.findMany()
     * 
     * // Get first 10 SocioComunitarios
     * const socioComunitarios = await prisma.socioComunitario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const socioComunitarioWithIdOnly = await prisma.socioComunitario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SocioComunitarioFindManyArgs>(args?: SelectSubset<T, SocioComunitarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SocioComunitarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SocioComunitario.
     * @param {SocioComunitarioCreateArgs} args - Arguments to create a SocioComunitario.
     * @example
     * // Create one SocioComunitario
     * const SocioComunitario = await prisma.socioComunitario.create({
     *   data: {
     *     // ... data to create a SocioComunitario
     *   }
     * })
     * 
     */
    create<T extends SocioComunitarioCreateArgs>(args: SelectSubset<T, SocioComunitarioCreateArgs<ExtArgs>>): Prisma__SocioComunitarioClient<$Result.GetResult<Prisma.$SocioComunitarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SocioComunitarios.
     * @param {SocioComunitarioCreateManyArgs} args - Arguments to create many SocioComunitarios.
     * @example
     * // Create many SocioComunitarios
     * const socioComunitario = await prisma.socioComunitario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SocioComunitarioCreateManyArgs>(args?: SelectSubset<T, SocioComunitarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SocioComunitario.
     * @param {SocioComunitarioDeleteArgs} args - Arguments to delete one SocioComunitario.
     * @example
     * // Delete one SocioComunitario
     * const SocioComunitario = await prisma.socioComunitario.delete({
     *   where: {
     *     // ... filter to delete one SocioComunitario
     *   }
     * })
     * 
     */
    delete<T extends SocioComunitarioDeleteArgs>(args: SelectSubset<T, SocioComunitarioDeleteArgs<ExtArgs>>): Prisma__SocioComunitarioClient<$Result.GetResult<Prisma.$SocioComunitarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SocioComunitario.
     * @param {SocioComunitarioUpdateArgs} args - Arguments to update one SocioComunitario.
     * @example
     * // Update one SocioComunitario
     * const socioComunitario = await prisma.socioComunitario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SocioComunitarioUpdateArgs>(args: SelectSubset<T, SocioComunitarioUpdateArgs<ExtArgs>>): Prisma__SocioComunitarioClient<$Result.GetResult<Prisma.$SocioComunitarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SocioComunitarios.
     * @param {SocioComunitarioDeleteManyArgs} args - Arguments to filter SocioComunitarios to delete.
     * @example
     * // Delete a few SocioComunitarios
     * const { count } = await prisma.socioComunitario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SocioComunitarioDeleteManyArgs>(args?: SelectSubset<T, SocioComunitarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SocioComunitarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocioComunitarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SocioComunitarios
     * const socioComunitario = await prisma.socioComunitario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SocioComunitarioUpdateManyArgs>(args: SelectSubset<T, SocioComunitarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SocioComunitario.
     * @param {SocioComunitarioUpsertArgs} args - Arguments to update or create a SocioComunitario.
     * @example
     * // Update or create a SocioComunitario
     * const socioComunitario = await prisma.socioComunitario.upsert({
     *   create: {
     *     // ... data to create a SocioComunitario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SocioComunitario we want to update
     *   }
     * })
     */
    upsert<T extends SocioComunitarioUpsertArgs>(args: SelectSubset<T, SocioComunitarioUpsertArgs<ExtArgs>>): Prisma__SocioComunitarioClient<$Result.GetResult<Prisma.$SocioComunitarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SocioComunitarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocioComunitarioCountArgs} args - Arguments to filter SocioComunitarios to count.
     * @example
     * // Count the number of SocioComunitarios
     * const count = await prisma.socioComunitario.count({
     *   where: {
     *     // ... the filter for the SocioComunitarios we want to count
     *   }
     * })
    **/
    count<T extends SocioComunitarioCountArgs>(
      args?: Subset<T, SocioComunitarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SocioComunitarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SocioComunitario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocioComunitarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SocioComunitarioAggregateArgs>(args: Subset<T, SocioComunitarioAggregateArgs>): Prisma.PrismaPromise<GetSocioComunitarioAggregateType<T>>

    /**
     * Group by SocioComunitario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocioComunitarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SocioComunitarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SocioComunitarioGroupByArgs['orderBy'] }
        : { orderBy?: SocioComunitarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SocioComunitarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSocioComunitarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SocioComunitario model
   */
  readonly fields: SocioComunitarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SocioComunitario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SocioComunitarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SocioComunitario model
   */
  interface SocioComunitarioFieldRefs {
    readonly id: FieldRef<"SocioComunitario", 'Int'>
    readonly nombre: FieldRef<"SocioComunitario", 'String'>
    readonly activo: FieldRef<"SocioComunitario", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * SocioComunitario findUnique
   */
  export type SocioComunitarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocioComunitario
     */
    select?: SocioComunitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocioComunitario
     */
    omit?: SocioComunitarioOmit<ExtArgs> | null
    /**
     * Filter, which SocioComunitario to fetch.
     */
    where: SocioComunitarioWhereUniqueInput
  }

  /**
   * SocioComunitario findUniqueOrThrow
   */
  export type SocioComunitarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocioComunitario
     */
    select?: SocioComunitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocioComunitario
     */
    omit?: SocioComunitarioOmit<ExtArgs> | null
    /**
     * Filter, which SocioComunitario to fetch.
     */
    where: SocioComunitarioWhereUniqueInput
  }

  /**
   * SocioComunitario findFirst
   */
  export type SocioComunitarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocioComunitario
     */
    select?: SocioComunitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocioComunitario
     */
    omit?: SocioComunitarioOmit<ExtArgs> | null
    /**
     * Filter, which SocioComunitario to fetch.
     */
    where?: SocioComunitarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SocioComunitarios to fetch.
     */
    orderBy?: SocioComunitarioOrderByWithRelationInput | SocioComunitarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SocioComunitarios.
     */
    cursor?: SocioComunitarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SocioComunitarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SocioComunitarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SocioComunitarios.
     */
    distinct?: SocioComunitarioScalarFieldEnum | SocioComunitarioScalarFieldEnum[]
  }

  /**
   * SocioComunitario findFirstOrThrow
   */
  export type SocioComunitarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocioComunitario
     */
    select?: SocioComunitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocioComunitario
     */
    omit?: SocioComunitarioOmit<ExtArgs> | null
    /**
     * Filter, which SocioComunitario to fetch.
     */
    where?: SocioComunitarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SocioComunitarios to fetch.
     */
    orderBy?: SocioComunitarioOrderByWithRelationInput | SocioComunitarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SocioComunitarios.
     */
    cursor?: SocioComunitarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SocioComunitarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SocioComunitarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SocioComunitarios.
     */
    distinct?: SocioComunitarioScalarFieldEnum | SocioComunitarioScalarFieldEnum[]
  }

  /**
   * SocioComunitario findMany
   */
  export type SocioComunitarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocioComunitario
     */
    select?: SocioComunitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocioComunitario
     */
    omit?: SocioComunitarioOmit<ExtArgs> | null
    /**
     * Filter, which SocioComunitarios to fetch.
     */
    where?: SocioComunitarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SocioComunitarios to fetch.
     */
    orderBy?: SocioComunitarioOrderByWithRelationInput | SocioComunitarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SocioComunitarios.
     */
    cursor?: SocioComunitarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SocioComunitarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SocioComunitarios.
     */
    skip?: number
    distinct?: SocioComunitarioScalarFieldEnum | SocioComunitarioScalarFieldEnum[]
  }

  /**
   * SocioComunitario create
   */
  export type SocioComunitarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocioComunitario
     */
    select?: SocioComunitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocioComunitario
     */
    omit?: SocioComunitarioOmit<ExtArgs> | null
    /**
     * The data needed to create a SocioComunitario.
     */
    data: XOR<SocioComunitarioCreateInput, SocioComunitarioUncheckedCreateInput>
  }

  /**
   * SocioComunitario createMany
   */
  export type SocioComunitarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SocioComunitarios.
     */
    data: SocioComunitarioCreateManyInput | SocioComunitarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SocioComunitario update
   */
  export type SocioComunitarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocioComunitario
     */
    select?: SocioComunitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocioComunitario
     */
    omit?: SocioComunitarioOmit<ExtArgs> | null
    /**
     * The data needed to update a SocioComunitario.
     */
    data: XOR<SocioComunitarioUpdateInput, SocioComunitarioUncheckedUpdateInput>
    /**
     * Choose, which SocioComunitario to update.
     */
    where: SocioComunitarioWhereUniqueInput
  }

  /**
   * SocioComunitario updateMany
   */
  export type SocioComunitarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SocioComunitarios.
     */
    data: XOR<SocioComunitarioUpdateManyMutationInput, SocioComunitarioUncheckedUpdateManyInput>
    /**
     * Filter which SocioComunitarios to update
     */
    where?: SocioComunitarioWhereInput
    /**
     * Limit how many SocioComunitarios to update.
     */
    limit?: number
  }

  /**
   * SocioComunitario upsert
   */
  export type SocioComunitarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocioComunitario
     */
    select?: SocioComunitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocioComunitario
     */
    omit?: SocioComunitarioOmit<ExtArgs> | null
    /**
     * The filter to search for the SocioComunitario to update in case it exists.
     */
    where: SocioComunitarioWhereUniqueInput
    /**
     * In case the SocioComunitario found by the `where` argument doesn't exist, create a new SocioComunitario with this data.
     */
    create: XOR<SocioComunitarioCreateInput, SocioComunitarioUncheckedCreateInput>
    /**
     * In case the SocioComunitario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SocioComunitarioUpdateInput, SocioComunitarioUncheckedUpdateInput>
  }

  /**
   * SocioComunitario delete
   */
  export type SocioComunitarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocioComunitario
     */
    select?: SocioComunitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocioComunitario
     */
    omit?: SocioComunitarioOmit<ExtArgs> | null
    /**
     * Filter which SocioComunitario to delete.
     */
    where: SocioComunitarioWhereUniqueInput
  }

  /**
   * SocioComunitario deleteMany
   */
  export type SocioComunitarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SocioComunitarios to delete
     */
    where?: SocioComunitarioWhereInput
    /**
     * Limit how many SocioComunitarios to delete.
     */
    limit?: number
  }

  /**
   * SocioComunitario without action
   */
  export type SocioComunitarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocioComunitario
     */
    select?: SocioComunitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocioComunitario
     */
    omit?: SocioComunitarioOmit<ExtArgs> | null
  }


  /**
   * Model Proyecto
   */

  export type AggregateProyecto = {
    _count: ProyectoCountAggregateOutputType | null
    _avg: ProyectoAvgAggregateOutputType | null
    _sum: ProyectoSumAggregateOutputType | null
    _min: ProyectoMinAggregateOutputType | null
    _max: ProyectoMaxAggregateOutputType | null
  }

  export type ProyectoAvgAggregateOutputType = {
    id: number | null
  }

  export type ProyectoSumAggregateOutputType = {
    id: number | null
  }

  export type ProyectoMinAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type ProyectoMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type ProyectoCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type ProyectoAvgAggregateInputType = {
    id?: true
  }

  export type ProyectoSumAggregateInputType = {
    id?: true
  }

  export type ProyectoMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type ProyectoMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type ProyectoCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type ProyectoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Proyecto to aggregate.
     */
    where?: ProyectoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Proyectos to fetch.
     */
    orderBy?: ProyectoOrderByWithRelationInput | ProyectoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProyectoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Proyectos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Proyectos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Proyectos
    **/
    _count?: true | ProyectoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProyectoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProyectoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProyectoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProyectoMaxAggregateInputType
  }

  export type GetProyectoAggregateType<T extends ProyectoAggregateArgs> = {
        [P in keyof T & keyof AggregateProyecto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProyecto[P]>
      : GetScalarType<T[P], AggregateProyecto[P]>
  }




  export type ProyectoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProyectoWhereInput
    orderBy?: ProyectoOrderByWithAggregationInput | ProyectoOrderByWithAggregationInput[]
    by: ProyectoScalarFieldEnum[] | ProyectoScalarFieldEnum
    having?: ProyectoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProyectoCountAggregateInputType | true
    _avg?: ProyectoAvgAggregateInputType
    _sum?: ProyectoSumAggregateInputType
    _min?: ProyectoMinAggregateInputType
    _max?: ProyectoMaxAggregateInputType
  }

  export type ProyectoGroupByOutputType = {
    id: number
    nombre: string
    _count: ProyectoCountAggregateOutputType | null
    _avg: ProyectoAvgAggregateOutputType | null
    _sum: ProyectoSumAggregateOutputType | null
    _min: ProyectoMinAggregateOutputType | null
    _max: ProyectoMaxAggregateOutputType | null
  }

  type GetProyectoGroupByPayload<T extends ProyectoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProyectoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProyectoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProyectoGroupByOutputType[P]>
            : GetScalarType<T[P], ProyectoGroupByOutputType[P]>
        }
      >
    >


  export type ProyectoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    actividades?: boolean | Proyecto$actividadesArgs<ExtArgs>
    _count?: boolean | ProyectoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proyecto"]>



  export type ProyectoSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type ProyectoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre", ExtArgs["result"]["proyecto"]>
  export type ProyectoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    actividades?: boolean | Proyecto$actividadesArgs<ExtArgs>
    _count?: boolean | ProyectoCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ProyectoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Proyecto"
    objects: {
      actividades: Prisma.$ActividadPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
    }, ExtArgs["result"]["proyecto"]>
    composites: {}
  }

  type ProyectoGetPayload<S extends boolean | null | undefined | ProyectoDefaultArgs> = $Result.GetResult<Prisma.$ProyectoPayload, S>

  type ProyectoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProyectoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProyectoCountAggregateInputType | true
    }

  export interface ProyectoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Proyecto'], meta: { name: 'Proyecto' } }
    /**
     * Find zero or one Proyecto that matches the filter.
     * @param {ProyectoFindUniqueArgs} args - Arguments to find a Proyecto
     * @example
     * // Get one Proyecto
     * const proyecto = await prisma.proyecto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProyectoFindUniqueArgs>(args: SelectSubset<T, ProyectoFindUniqueArgs<ExtArgs>>): Prisma__ProyectoClient<$Result.GetResult<Prisma.$ProyectoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Proyecto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProyectoFindUniqueOrThrowArgs} args - Arguments to find a Proyecto
     * @example
     * // Get one Proyecto
     * const proyecto = await prisma.proyecto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProyectoFindUniqueOrThrowArgs>(args: SelectSubset<T, ProyectoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProyectoClient<$Result.GetResult<Prisma.$ProyectoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proyecto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProyectoFindFirstArgs} args - Arguments to find a Proyecto
     * @example
     * // Get one Proyecto
     * const proyecto = await prisma.proyecto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProyectoFindFirstArgs>(args?: SelectSubset<T, ProyectoFindFirstArgs<ExtArgs>>): Prisma__ProyectoClient<$Result.GetResult<Prisma.$ProyectoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proyecto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProyectoFindFirstOrThrowArgs} args - Arguments to find a Proyecto
     * @example
     * // Get one Proyecto
     * const proyecto = await prisma.proyecto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProyectoFindFirstOrThrowArgs>(args?: SelectSubset<T, ProyectoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProyectoClient<$Result.GetResult<Prisma.$ProyectoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Proyectos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProyectoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Proyectos
     * const proyectos = await prisma.proyecto.findMany()
     * 
     * // Get first 10 Proyectos
     * const proyectos = await prisma.proyecto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const proyectoWithIdOnly = await prisma.proyecto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProyectoFindManyArgs>(args?: SelectSubset<T, ProyectoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProyectoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Proyecto.
     * @param {ProyectoCreateArgs} args - Arguments to create a Proyecto.
     * @example
     * // Create one Proyecto
     * const Proyecto = await prisma.proyecto.create({
     *   data: {
     *     // ... data to create a Proyecto
     *   }
     * })
     * 
     */
    create<T extends ProyectoCreateArgs>(args: SelectSubset<T, ProyectoCreateArgs<ExtArgs>>): Prisma__ProyectoClient<$Result.GetResult<Prisma.$ProyectoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Proyectos.
     * @param {ProyectoCreateManyArgs} args - Arguments to create many Proyectos.
     * @example
     * // Create many Proyectos
     * const proyecto = await prisma.proyecto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProyectoCreateManyArgs>(args?: SelectSubset<T, ProyectoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Proyecto.
     * @param {ProyectoDeleteArgs} args - Arguments to delete one Proyecto.
     * @example
     * // Delete one Proyecto
     * const Proyecto = await prisma.proyecto.delete({
     *   where: {
     *     // ... filter to delete one Proyecto
     *   }
     * })
     * 
     */
    delete<T extends ProyectoDeleteArgs>(args: SelectSubset<T, ProyectoDeleteArgs<ExtArgs>>): Prisma__ProyectoClient<$Result.GetResult<Prisma.$ProyectoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Proyecto.
     * @param {ProyectoUpdateArgs} args - Arguments to update one Proyecto.
     * @example
     * // Update one Proyecto
     * const proyecto = await prisma.proyecto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProyectoUpdateArgs>(args: SelectSubset<T, ProyectoUpdateArgs<ExtArgs>>): Prisma__ProyectoClient<$Result.GetResult<Prisma.$ProyectoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Proyectos.
     * @param {ProyectoDeleteManyArgs} args - Arguments to filter Proyectos to delete.
     * @example
     * // Delete a few Proyectos
     * const { count } = await prisma.proyecto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProyectoDeleteManyArgs>(args?: SelectSubset<T, ProyectoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proyectos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProyectoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Proyectos
     * const proyecto = await prisma.proyecto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProyectoUpdateManyArgs>(args: SelectSubset<T, ProyectoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Proyecto.
     * @param {ProyectoUpsertArgs} args - Arguments to update or create a Proyecto.
     * @example
     * // Update or create a Proyecto
     * const proyecto = await prisma.proyecto.upsert({
     *   create: {
     *     // ... data to create a Proyecto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Proyecto we want to update
     *   }
     * })
     */
    upsert<T extends ProyectoUpsertArgs>(args: SelectSubset<T, ProyectoUpsertArgs<ExtArgs>>): Prisma__ProyectoClient<$Result.GetResult<Prisma.$ProyectoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Proyectos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProyectoCountArgs} args - Arguments to filter Proyectos to count.
     * @example
     * // Count the number of Proyectos
     * const count = await prisma.proyecto.count({
     *   where: {
     *     // ... the filter for the Proyectos we want to count
     *   }
     * })
    **/
    count<T extends ProyectoCountArgs>(
      args?: Subset<T, ProyectoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProyectoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Proyecto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProyectoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProyectoAggregateArgs>(args: Subset<T, ProyectoAggregateArgs>): Prisma.PrismaPromise<GetProyectoAggregateType<T>>

    /**
     * Group by Proyecto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProyectoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProyectoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProyectoGroupByArgs['orderBy'] }
        : { orderBy?: ProyectoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProyectoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProyectoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Proyecto model
   */
  readonly fields: ProyectoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Proyecto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProyectoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    actividades<T extends Proyecto$actividadesArgs<ExtArgs> = {}>(args?: Subset<T, Proyecto$actividadesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActividadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Proyecto model
   */
  interface ProyectoFieldRefs {
    readonly id: FieldRef<"Proyecto", 'Int'>
    readonly nombre: FieldRef<"Proyecto", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Proyecto findUnique
   */
  export type ProyectoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proyecto
     */
    select?: ProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proyecto
     */
    omit?: ProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProyectoInclude<ExtArgs> | null
    /**
     * Filter, which Proyecto to fetch.
     */
    where: ProyectoWhereUniqueInput
  }

  /**
   * Proyecto findUniqueOrThrow
   */
  export type ProyectoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proyecto
     */
    select?: ProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proyecto
     */
    omit?: ProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProyectoInclude<ExtArgs> | null
    /**
     * Filter, which Proyecto to fetch.
     */
    where: ProyectoWhereUniqueInput
  }

  /**
   * Proyecto findFirst
   */
  export type ProyectoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proyecto
     */
    select?: ProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proyecto
     */
    omit?: ProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProyectoInclude<ExtArgs> | null
    /**
     * Filter, which Proyecto to fetch.
     */
    where?: ProyectoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Proyectos to fetch.
     */
    orderBy?: ProyectoOrderByWithRelationInput | ProyectoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Proyectos.
     */
    cursor?: ProyectoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Proyectos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Proyectos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Proyectos.
     */
    distinct?: ProyectoScalarFieldEnum | ProyectoScalarFieldEnum[]
  }

  /**
   * Proyecto findFirstOrThrow
   */
  export type ProyectoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proyecto
     */
    select?: ProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proyecto
     */
    omit?: ProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProyectoInclude<ExtArgs> | null
    /**
     * Filter, which Proyecto to fetch.
     */
    where?: ProyectoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Proyectos to fetch.
     */
    orderBy?: ProyectoOrderByWithRelationInput | ProyectoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Proyectos.
     */
    cursor?: ProyectoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Proyectos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Proyectos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Proyectos.
     */
    distinct?: ProyectoScalarFieldEnum | ProyectoScalarFieldEnum[]
  }

  /**
   * Proyecto findMany
   */
  export type ProyectoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proyecto
     */
    select?: ProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proyecto
     */
    omit?: ProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProyectoInclude<ExtArgs> | null
    /**
     * Filter, which Proyectos to fetch.
     */
    where?: ProyectoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Proyectos to fetch.
     */
    orderBy?: ProyectoOrderByWithRelationInput | ProyectoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Proyectos.
     */
    cursor?: ProyectoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Proyectos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Proyectos.
     */
    skip?: number
    distinct?: ProyectoScalarFieldEnum | ProyectoScalarFieldEnum[]
  }

  /**
   * Proyecto create
   */
  export type ProyectoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proyecto
     */
    select?: ProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proyecto
     */
    omit?: ProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProyectoInclude<ExtArgs> | null
    /**
     * The data needed to create a Proyecto.
     */
    data: XOR<ProyectoCreateInput, ProyectoUncheckedCreateInput>
  }

  /**
   * Proyecto createMany
   */
  export type ProyectoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Proyectos.
     */
    data: ProyectoCreateManyInput | ProyectoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Proyecto update
   */
  export type ProyectoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proyecto
     */
    select?: ProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proyecto
     */
    omit?: ProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProyectoInclude<ExtArgs> | null
    /**
     * The data needed to update a Proyecto.
     */
    data: XOR<ProyectoUpdateInput, ProyectoUncheckedUpdateInput>
    /**
     * Choose, which Proyecto to update.
     */
    where: ProyectoWhereUniqueInput
  }

  /**
   * Proyecto updateMany
   */
  export type ProyectoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Proyectos.
     */
    data: XOR<ProyectoUpdateManyMutationInput, ProyectoUncheckedUpdateManyInput>
    /**
     * Filter which Proyectos to update
     */
    where?: ProyectoWhereInput
    /**
     * Limit how many Proyectos to update.
     */
    limit?: number
  }

  /**
   * Proyecto upsert
   */
  export type ProyectoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proyecto
     */
    select?: ProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proyecto
     */
    omit?: ProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProyectoInclude<ExtArgs> | null
    /**
     * The filter to search for the Proyecto to update in case it exists.
     */
    where: ProyectoWhereUniqueInput
    /**
     * In case the Proyecto found by the `where` argument doesn't exist, create a new Proyecto with this data.
     */
    create: XOR<ProyectoCreateInput, ProyectoUncheckedCreateInput>
    /**
     * In case the Proyecto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProyectoUpdateInput, ProyectoUncheckedUpdateInput>
  }

  /**
   * Proyecto delete
   */
  export type ProyectoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proyecto
     */
    select?: ProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proyecto
     */
    omit?: ProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProyectoInclude<ExtArgs> | null
    /**
     * Filter which Proyecto to delete.
     */
    where: ProyectoWhereUniqueInput
  }

  /**
   * Proyecto deleteMany
   */
  export type ProyectoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Proyectos to delete
     */
    where?: ProyectoWhereInput
    /**
     * Limit how many Proyectos to delete.
     */
    limit?: number
  }

  /**
   * Proyecto.actividades
   */
  export type Proyecto$actividadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Actividad
     */
    select?: ActividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Actividad
     */
    omit?: ActividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadInclude<ExtArgs> | null
    where?: ActividadWhereInput
    orderBy?: ActividadOrderByWithRelationInput | ActividadOrderByWithRelationInput[]
    cursor?: ActividadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActividadScalarFieldEnum | ActividadScalarFieldEnum[]
  }

  /**
   * Proyecto without action
   */
  export type ProyectoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proyecto
     */
    select?: ProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proyecto
     */
    omit?: ProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProyectoInclude<ExtArgs> | null
  }


  /**
   * Model Archivo
   */

  export type AggregateArchivo = {
    _count: ArchivoCountAggregateOutputType | null
    _avg: ArchivoAvgAggregateOutputType | null
    _sum: ArchivoSumAggregateOutputType | null
    _min: ArchivoMinAggregateOutputType | null
    _max: ArchivoMaxAggregateOutputType | null
  }

  export type ArchivoAvgAggregateOutputType = {
    id: number | null
    actividadId: number | null
  }

  export type ArchivoSumAggregateOutputType = {
    id: number | null
    actividadId: number | null
  }

  export type ArchivoMinAggregateOutputType = {
    id: number | null
    url: string | null
    descripcion: string | null
    actividadId: number | null
  }

  export type ArchivoMaxAggregateOutputType = {
    id: number | null
    url: string | null
    descripcion: string | null
    actividadId: number | null
  }

  export type ArchivoCountAggregateOutputType = {
    id: number
    url: number
    descripcion: number
    actividadId: number
    _all: number
  }


  export type ArchivoAvgAggregateInputType = {
    id?: true
    actividadId?: true
  }

  export type ArchivoSumAggregateInputType = {
    id?: true
    actividadId?: true
  }

  export type ArchivoMinAggregateInputType = {
    id?: true
    url?: true
    descripcion?: true
    actividadId?: true
  }

  export type ArchivoMaxAggregateInputType = {
    id?: true
    url?: true
    descripcion?: true
    actividadId?: true
  }

  export type ArchivoCountAggregateInputType = {
    id?: true
    url?: true
    descripcion?: true
    actividadId?: true
    _all?: true
  }

  export type ArchivoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Archivo to aggregate.
     */
    where?: ArchivoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Archivos to fetch.
     */
    orderBy?: ArchivoOrderByWithRelationInput | ArchivoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ArchivoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Archivos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Archivos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Archivos
    **/
    _count?: true | ArchivoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ArchivoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ArchivoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ArchivoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ArchivoMaxAggregateInputType
  }

  export type GetArchivoAggregateType<T extends ArchivoAggregateArgs> = {
        [P in keyof T & keyof AggregateArchivo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateArchivo[P]>
      : GetScalarType<T[P], AggregateArchivo[P]>
  }




  export type ArchivoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArchivoWhereInput
    orderBy?: ArchivoOrderByWithAggregationInput | ArchivoOrderByWithAggregationInput[]
    by: ArchivoScalarFieldEnum[] | ArchivoScalarFieldEnum
    having?: ArchivoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ArchivoCountAggregateInputType | true
    _avg?: ArchivoAvgAggregateInputType
    _sum?: ArchivoSumAggregateInputType
    _min?: ArchivoMinAggregateInputType
    _max?: ArchivoMaxAggregateInputType
  }

  export type ArchivoGroupByOutputType = {
    id: number
    url: string
    descripcion: string | null
    actividadId: number
    _count: ArchivoCountAggregateOutputType | null
    _avg: ArchivoAvgAggregateOutputType | null
    _sum: ArchivoSumAggregateOutputType | null
    _min: ArchivoMinAggregateOutputType | null
    _max: ArchivoMaxAggregateOutputType | null
  }

  type GetArchivoGroupByPayload<T extends ArchivoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ArchivoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ArchivoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ArchivoGroupByOutputType[P]>
            : GetScalarType<T[P], ArchivoGroupByOutputType[P]>
        }
      >
    >


  export type ArchivoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    descripcion?: boolean
    actividadId?: boolean
    actividad?: boolean | ActividadDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["archivo"]>



  export type ArchivoSelectScalar = {
    id?: boolean
    url?: boolean
    descripcion?: boolean
    actividadId?: boolean
  }

  export type ArchivoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "url" | "descripcion" | "actividadId", ExtArgs["result"]["archivo"]>
  export type ArchivoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    actividad?: boolean | ActividadDefaultArgs<ExtArgs>
  }

  export type $ArchivoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Archivo"
    objects: {
      actividad: Prisma.$ActividadPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      url: string
      descripcion: string | null
      actividadId: number
    }, ExtArgs["result"]["archivo"]>
    composites: {}
  }

  type ArchivoGetPayload<S extends boolean | null | undefined | ArchivoDefaultArgs> = $Result.GetResult<Prisma.$ArchivoPayload, S>

  type ArchivoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ArchivoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ArchivoCountAggregateInputType | true
    }

  export interface ArchivoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Archivo'], meta: { name: 'Archivo' } }
    /**
     * Find zero or one Archivo that matches the filter.
     * @param {ArchivoFindUniqueArgs} args - Arguments to find a Archivo
     * @example
     * // Get one Archivo
     * const archivo = await prisma.archivo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ArchivoFindUniqueArgs>(args: SelectSubset<T, ArchivoFindUniqueArgs<ExtArgs>>): Prisma__ArchivoClient<$Result.GetResult<Prisma.$ArchivoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Archivo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ArchivoFindUniqueOrThrowArgs} args - Arguments to find a Archivo
     * @example
     * // Get one Archivo
     * const archivo = await prisma.archivo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ArchivoFindUniqueOrThrowArgs>(args: SelectSubset<T, ArchivoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ArchivoClient<$Result.GetResult<Prisma.$ArchivoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Archivo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivoFindFirstArgs} args - Arguments to find a Archivo
     * @example
     * // Get one Archivo
     * const archivo = await prisma.archivo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ArchivoFindFirstArgs>(args?: SelectSubset<T, ArchivoFindFirstArgs<ExtArgs>>): Prisma__ArchivoClient<$Result.GetResult<Prisma.$ArchivoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Archivo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivoFindFirstOrThrowArgs} args - Arguments to find a Archivo
     * @example
     * // Get one Archivo
     * const archivo = await prisma.archivo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ArchivoFindFirstOrThrowArgs>(args?: SelectSubset<T, ArchivoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ArchivoClient<$Result.GetResult<Prisma.$ArchivoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Archivos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Archivos
     * const archivos = await prisma.archivo.findMany()
     * 
     * // Get first 10 Archivos
     * const archivos = await prisma.archivo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const archivoWithIdOnly = await prisma.archivo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ArchivoFindManyArgs>(args?: SelectSubset<T, ArchivoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArchivoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Archivo.
     * @param {ArchivoCreateArgs} args - Arguments to create a Archivo.
     * @example
     * // Create one Archivo
     * const Archivo = await prisma.archivo.create({
     *   data: {
     *     // ... data to create a Archivo
     *   }
     * })
     * 
     */
    create<T extends ArchivoCreateArgs>(args: SelectSubset<T, ArchivoCreateArgs<ExtArgs>>): Prisma__ArchivoClient<$Result.GetResult<Prisma.$ArchivoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Archivos.
     * @param {ArchivoCreateManyArgs} args - Arguments to create many Archivos.
     * @example
     * // Create many Archivos
     * const archivo = await prisma.archivo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ArchivoCreateManyArgs>(args?: SelectSubset<T, ArchivoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Archivo.
     * @param {ArchivoDeleteArgs} args - Arguments to delete one Archivo.
     * @example
     * // Delete one Archivo
     * const Archivo = await prisma.archivo.delete({
     *   where: {
     *     // ... filter to delete one Archivo
     *   }
     * })
     * 
     */
    delete<T extends ArchivoDeleteArgs>(args: SelectSubset<T, ArchivoDeleteArgs<ExtArgs>>): Prisma__ArchivoClient<$Result.GetResult<Prisma.$ArchivoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Archivo.
     * @param {ArchivoUpdateArgs} args - Arguments to update one Archivo.
     * @example
     * // Update one Archivo
     * const archivo = await prisma.archivo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ArchivoUpdateArgs>(args: SelectSubset<T, ArchivoUpdateArgs<ExtArgs>>): Prisma__ArchivoClient<$Result.GetResult<Prisma.$ArchivoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Archivos.
     * @param {ArchivoDeleteManyArgs} args - Arguments to filter Archivos to delete.
     * @example
     * // Delete a few Archivos
     * const { count } = await prisma.archivo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ArchivoDeleteManyArgs>(args?: SelectSubset<T, ArchivoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Archivos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Archivos
     * const archivo = await prisma.archivo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ArchivoUpdateManyArgs>(args: SelectSubset<T, ArchivoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Archivo.
     * @param {ArchivoUpsertArgs} args - Arguments to update or create a Archivo.
     * @example
     * // Update or create a Archivo
     * const archivo = await prisma.archivo.upsert({
     *   create: {
     *     // ... data to create a Archivo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Archivo we want to update
     *   }
     * })
     */
    upsert<T extends ArchivoUpsertArgs>(args: SelectSubset<T, ArchivoUpsertArgs<ExtArgs>>): Prisma__ArchivoClient<$Result.GetResult<Prisma.$ArchivoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Archivos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivoCountArgs} args - Arguments to filter Archivos to count.
     * @example
     * // Count the number of Archivos
     * const count = await prisma.archivo.count({
     *   where: {
     *     // ... the filter for the Archivos we want to count
     *   }
     * })
    **/
    count<T extends ArchivoCountArgs>(
      args?: Subset<T, ArchivoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ArchivoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Archivo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ArchivoAggregateArgs>(args: Subset<T, ArchivoAggregateArgs>): Prisma.PrismaPromise<GetArchivoAggregateType<T>>

    /**
     * Group by Archivo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ArchivoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ArchivoGroupByArgs['orderBy'] }
        : { orderBy?: ArchivoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ArchivoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArchivoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Archivo model
   */
  readonly fields: ArchivoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Archivo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ArchivoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    actividad<T extends ActividadDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ActividadDefaultArgs<ExtArgs>>): Prisma__ActividadClient<$Result.GetResult<Prisma.$ActividadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Archivo model
   */
  interface ArchivoFieldRefs {
    readonly id: FieldRef<"Archivo", 'Int'>
    readonly url: FieldRef<"Archivo", 'String'>
    readonly descripcion: FieldRef<"Archivo", 'String'>
    readonly actividadId: FieldRef<"Archivo", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Archivo findUnique
   */
  export type ArchivoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Archivo
     */
    select?: ArchivoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Archivo
     */
    omit?: ArchivoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoInclude<ExtArgs> | null
    /**
     * Filter, which Archivo to fetch.
     */
    where: ArchivoWhereUniqueInput
  }

  /**
   * Archivo findUniqueOrThrow
   */
  export type ArchivoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Archivo
     */
    select?: ArchivoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Archivo
     */
    omit?: ArchivoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoInclude<ExtArgs> | null
    /**
     * Filter, which Archivo to fetch.
     */
    where: ArchivoWhereUniqueInput
  }

  /**
   * Archivo findFirst
   */
  export type ArchivoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Archivo
     */
    select?: ArchivoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Archivo
     */
    omit?: ArchivoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoInclude<ExtArgs> | null
    /**
     * Filter, which Archivo to fetch.
     */
    where?: ArchivoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Archivos to fetch.
     */
    orderBy?: ArchivoOrderByWithRelationInput | ArchivoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Archivos.
     */
    cursor?: ArchivoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Archivos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Archivos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Archivos.
     */
    distinct?: ArchivoScalarFieldEnum | ArchivoScalarFieldEnum[]
  }

  /**
   * Archivo findFirstOrThrow
   */
  export type ArchivoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Archivo
     */
    select?: ArchivoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Archivo
     */
    omit?: ArchivoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoInclude<ExtArgs> | null
    /**
     * Filter, which Archivo to fetch.
     */
    where?: ArchivoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Archivos to fetch.
     */
    orderBy?: ArchivoOrderByWithRelationInput | ArchivoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Archivos.
     */
    cursor?: ArchivoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Archivos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Archivos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Archivos.
     */
    distinct?: ArchivoScalarFieldEnum | ArchivoScalarFieldEnum[]
  }

  /**
   * Archivo findMany
   */
  export type ArchivoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Archivo
     */
    select?: ArchivoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Archivo
     */
    omit?: ArchivoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoInclude<ExtArgs> | null
    /**
     * Filter, which Archivos to fetch.
     */
    where?: ArchivoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Archivos to fetch.
     */
    orderBy?: ArchivoOrderByWithRelationInput | ArchivoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Archivos.
     */
    cursor?: ArchivoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Archivos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Archivos.
     */
    skip?: number
    distinct?: ArchivoScalarFieldEnum | ArchivoScalarFieldEnum[]
  }

  /**
   * Archivo create
   */
  export type ArchivoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Archivo
     */
    select?: ArchivoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Archivo
     */
    omit?: ArchivoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoInclude<ExtArgs> | null
    /**
     * The data needed to create a Archivo.
     */
    data: XOR<ArchivoCreateInput, ArchivoUncheckedCreateInput>
  }

  /**
   * Archivo createMany
   */
  export type ArchivoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Archivos.
     */
    data: ArchivoCreateManyInput | ArchivoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Archivo update
   */
  export type ArchivoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Archivo
     */
    select?: ArchivoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Archivo
     */
    omit?: ArchivoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoInclude<ExtArgs> | null
    /**
     * The data needed to update a Archivo.
     */
    data: XOR<ArchivoUpdateInput, ArchivoUncheckedUpdateInput>
    /**
     * Choose, which Archivo to update.
     */
    where: ArchivoWhereUniqueInput
  }

  /**
   * Archivo updateMany
   */
  export type ArchivoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Archivos.
     */
    data: XOR<ArchivoUpdateManyMutationInput, ArchivoUncheckedUpdateManyInput>
    /**
     * Filter which Archivos to update
     */
    where?: ArchivoWhereInput
    /**
     * Limit how many Archivos to update.
     */
    limit?: number
  }

  /**
   * Archivo upsert
   */
  export type ArchivoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Archivo
     */
    select?: ArchivoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Archivo
     */
    omit?: ArchivoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoInclude<ExtArgs> | null
    /**
     * The filter to search for the Archivo to update in case it exists.
     */
    where: ArchivoWhereUniqueInput
    /**
     * In case the Archivo found by the `where` argument doesn't exist, create a new Archivo with this data.
     */
    create: XOR<ArchivoCreateInput, ArchivoUncheckedCreateInput>
    /**
     * In case the Archivo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ArchivoUpdateInput, ArchivoUncheckedUpdateInput>
  }

  /**
   * Archivo delete
   */
  export type ArchivoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Archivo
     */
    select?: ArchivoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Archivo
     */
    omit?: ArchivoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoInclude<ExtArgs> | null
    /**
     * Filter which Archivo to delete.
     */
    where: ArchivoWhereUniqueInput
  }

  /**
   * Archivo deleteMany
   */
  export type ArchivoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Archivos to delete
     */
    where?: ArchivoWhereInput
    /**
     * Limit how many Archivos to delete.
     */
    limit?: number
  }

  /**
   * Archivo without action
   */
  export type ArchivoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Archivo
     */
    select?: ArchivoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Archivo
     */
    omit?: ArchivoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArchivoInclude<ExtArgs> | null
  }


  /**
   * Model Beneficiario
   */

  export type AggregateBeneficiario = {
    _count: BeneficiarioCountAggregateOutputType | null
    _avg: BeneficiarioAvgAggregateOutputType | null
    _sum: BeneficiarioSumAggregateOutputType | null
    _min: BeneficiarioMinAggregateOutputType | null
    _max: BeneficiarioMaxAggregateOutputType | null
  }

  export type BeneficiarioAvgAggregateOutputType = {
    id: number | null
    actividadId: number | null
  }

  export type BeneficiarioSumAggregateOutputType = {
    id: number | null
    actividadId: number | null
  }

  export type BeneficiarioMinAggregateOutputType = {
    id: number | null
    caracterizacion: string | null
    actividadId: number | null
  }

  export type BeneficiarioMaxAggregateOutputType = {
    id: number | null
    caracterizacion: string | null
    actividadId: number | null
  }

  export type BeneficiarioCountAggregateOutputType = {
    id: number
    caracterizacion: number
    actividadId: number
    _all: number
  }


  export type BeneficiarioAvgAggregateInputType = {
    id?: true
    actividadId?: true
  }

  export type BeneficiarioSumAggregateInputType = {
    id?: true
    actividadId?: true
  }

  export type BeneficiarioMinAggregateInputType = {
    id?: true
    caracterizacion?: true
    actividadId?: true
  }

  export type BeneficiarioMaxAggregateInputType = {
    id?: true
    caracterizacion?: true
    actividadId?: true
  }

  export type BeneficiarioCountAggregateInputType = {
    id?: true
    caracterizacion?: true
    actividadId?: true
    _all?: true
  }

  export type BeneficiarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Beneficiario to aggregate.
     */
    where?: BeneficiarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Beneficiarios to fetch.
     */
    orderBy?: BeneficiarioOrderByWithRelationInput | BeneficiarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BeneficiarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Beneficiarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Beneficiarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Beneficiarios
    **/
    _count?: true | BeneficiarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BeneficiarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BeneficiarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BeneficiarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BeneficiarioMaxAggregateInputType
  }

  export type GetBeneficiarioAggregateType<T extends BeneficiarioAggregateArgs> = {
        [P in keyof T & keyof AggregateBeneficiario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBeneficiario[P]>
      : GetScalarType<T[P], AggregateBeneficiario[P]>
  }




  export type BeneficiarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BeneficiarioWhereInput
    orderBy?: BeneficiarioOrderByWithAggregationInput | BeneficiarioOrderByWithAggregationInput[]
    by: BeneficiarioScalarFieldEnum[] | BeneficiarioScalarFieldEnum
    having?: BeneficiarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BeneficiarioCountAggregateInputType | true
    _avg?: BeneficiarioAvgAggregateInputType
    _sum?: BeneficiarioSumAggregateInputType
    _min?: BeneficiarioMinAggregateInputType
    _max?: BeneficiarioMaxAggregateInputType
  }

  export type BeneficiarioGroupByOutputType = {
    id: number
    caracterizacion: string
    actividadId: number
    _count: BeneficiarioCountAggregateOutputType | null
    _avg: BeneficiarioAvgAggregateOutputType | null
    _sum: BeneficiarioSumAggregateOutputType | null
    _min: BeneficiarioMinAggregateOutputType | null
    _max: BeneficiarioMaxAggregateOutputType | null
  }

  type GetBeneficiarioGroupByPayload<T extends BeneficiarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BeneficiarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BeneficiarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BeneficiarioGroupByOutputType[P]>
            : GetScalarType<T[P], BeneficiarioGroupByOutputType[P]>
        }
      >
    >


  export type BeneficiarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    caracterizacion?: boolean
    actividadId?: boolean
    actividad?: boolean | ActividadDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["beneficiario"]>



  export type BeneficiarioSelectScalar = {
    id?: boolean
    caracterizacion?: boolean
    actividadId?: boolean
  }

  export type BeneficiarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "caracterizacion" | "actividadId", ExtArgs["result"]["beneficiario"]>
  export type BeneficiarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    actividad?: boolean | ActividadDefaultArgs<ExtArgs>
  }

  export type $BeneficiarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Beneficiario"
    objects: {
      actividad: Prisma.$ActividadPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      caracterizacion: string
      actividadId: number
    }, ExtArgs["result"]["beneficiario"]>
    composites: {}
  }

  type BeneficiarioGetPayload<S extends boolean | null | undefined | BeneficiarioDefaultArgs> = $Result.GetResult<Prisma.$BeneficiarioPayload, S>

  type BeneficiarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BeneficiarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BeneficiarioCountAggregateInputType | true
    }

  export interface BeneficiarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Beneficiario'], meta: { name: 'Beneficiario' } }
    /**
     * Find zero or one Beneficiario that matches the filter.
     * @param {BeneficiarioFindUniqueArgs} args - Arguments to find a Beneficiario
     * @example
     * // Get one Beneficiario
     * const beneficiario = await prisma.beneficiario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BeneficiarioFindUniqueArgs>(args: SelectSubset<T, BeneficiarioFindUniqueArgs<ExtArgs>>): Prisma__BeneficiarioClient<$Result.GetResult<Prisma.$BeneficiarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Beneficiario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BeneficiarioFindUniqueOrThrowArgs} args - Arguments to find a Beneficiario
     * @example
     * // Get one Beneficiario
     * const beneficiario = await prisma.beneficiario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BeneficiarioFindUniqueOrThrowArgs>(args: SelectSubset<T, BeneficiarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BeneficiarioClient<$Result.GetResult<Prisma.$BeneficiarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Beneficiario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficiarioFindFirstArgs} args - Arguments to find a Beneficiario
     * @example
     * // Get one Beneficiario
     * const beneficiario = await prisma.beneficiario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BeneficiarioFindFirstArgs>(args?: SelectSubset<T, BeneficiarioFindFirstArgs<ExtArgs>>): Prisma__BeneficiarioClient<$Result.GetResult<Prisma.$BeneficiarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Beneficiario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficiarioFindFirstOrThrowArgs} args - Arguments to find a Beneficiario
     * @example
     * // Get one Beneficiario
     * const beneficiario = await prisma.beneficiario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BeneficiarioFindFirstOrThrowArgs>(args?: SelectSubset<T, BeneficiarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__BeneficiarioClient<$Result.GetResult<Prisma.$BeneficiarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Beneficiarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficiarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Beneficiarios
     * const beneficiarios = await prisma.beneficiario.findMany()
     * 
     * // Get first 10 Beneficiarios
     * const beneficiarios = await prisma.beneficiario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const beneficiarioWithIdOnly = await prisma.beneficiario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BeneficiarioFindManyArgs>(args?: SelectSubset<T, BeneficiarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BeneficiarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Beneficiario.
     * @param {BeneficiarioCreateArgs} args - Arguments to create a Beneficiario.
     * @example
     * // Create one Beneficiario
     * const Beneficiario = await prisma.beneficiario.create({
     *   data: {
     *     // ... data to create a Beneficiario
     *   }
     * })
     * 
     */
    create<T extends BeneficiarioCreateArgs>(args: SelectSubset<T, BeneficiarioCreateArgs<ExtArgs>>): Prisma__BeneficiarioClient<$Result.GetResult<Prisma.$BeneficiarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Beneficiarios.
     * @param {BeneficiarioCreateManyArgs} args - Arguments to create many Beneficiarios.
     * @example
     * // Create many Beneficiarios
     * const beneficiario = await prisma.beneficiario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BeneficiarioCreateManyArgs>(args?: SelectSubset<T, BeneficiarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Beneficiario.
     * @param {BeneficiarioDeleteArgs} args - Arguments to delete one Beneficiario.
     * @example
     * // Delete one Beneficiario
     * const Beneficiario = await prisma.beneficiario.delete({
     *   where: {
     *     // ... filter to delete one Beneficiario
     *   }
     * })
     * 
     */
    delete<T extends BeneficiarioDeleteArgs>(args: SelectSubset<T, BeneficiarioDeleteArgs<ExtArgs>>): Prisma__BeneficiarioClient<$Result.GetResult<Prisma.$BeneficiarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Beneficiario.
     * @param {BeneficiarioUpdateArgs} args - Arguments to update one Beneficiario.
     * @example
     * // Update one Beneficiario
     * const beneficiario = await prisma.beneficiario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BeneficiarioUpdateArgs>(args: SelectSubset<T, BeneficiarioUpdateArgs<ExtArgs>>): Prisma__BeneficiarioClient<$Result.GetResult<Prisma.$BeneficiarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Beneficiarios.
     * @param {BeneficiarioDeleteManyArgs} args - Arguments to filter Beneficiarios to delete.
     * @example
     * // Delete a few Beneficiarios
     * const { count } = await prisma.beneficiario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BeneficiarioDeleteManyArgs>(args?: SelectSubset<T, BeneficiarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Beneficiarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficiarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Beneficiarios
     * const beneficiario = await prisma.beneficiario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BeneficiarioUpdateManyArgs>(args: SelectSubset<T, BeneficiarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Beneficiario.
     * @param {BeneficiarioUpsertArgs} args - Arguments to update or create a Beneficiario.
     * @example
     * // Update or create a Beneficiario
     * const beneficiario = await prisma.beneficiario.upsert({
     *   create: {
     *     // ... data to create a Beneficiario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Beneficiario we want to update
     *   }
     * })
     */
    upsert<T extends BeneficiarioUpsertArgs>(args: SelectSubset<T, BeneficiarioUpsertArgs<ExtArgs>>): Prisma__BeneficiarioClient<$Result.GetResult<Prisma.$BeneficiarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Beneficiarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficiarioCountArgs} args - Arguments to filter Beneficiarios to count.
     * @example
     * // Count the number of Beneficiarios
     * const count = await prisma.beneficiario.count({
     *   where: {
     *     // ... the filter for the Beneficiarios we want to count
     *   }
     * })
    **/
    count<T extends BeneficiarioCountArgs>(
      args?: Subset<T, BeneficiarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BeneficiarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Beneficiario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficiarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BeneficiarioAggregateArgs>(args: Subset<T, BeneficiarioAggregateArgs>): Prisma.PrismaPromise<GetBeneficiarioAggregateType<T>>

    /**
     * Group by Beneficiario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficiarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BeneficiarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BeneficiarioGroupByArgs['orderBy'] }
        : { orderBy?: BeneficiarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BeneficiarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBeneficiarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Beneficiario model
   */
  readonly fields: BeneficiarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Beneficiario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BeneficiarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    actividad<T extends ActividadDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ActividadDefaultArgs<ExtArgs>>): Prisma__ActividadClient<$Result.GetResult<Prisma.$ActividadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Beneficiario model
   */
  interface BeneficiarioFieldRefs {
    readonly id: FieldRef<"Beneficiario", 'Int'>
    readonly caracterizacion: FieldRef<"Beneficiario", 'String'>
    readonly actividadId: FieldRef<"Beneficiario", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Beneficiario findUnique
   */
  export type BeneficiarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiario
     */
    select?: BeneficiarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Beneficiario
     */
    omit?: BeneficiarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiarioInclude<ExtArgs> | null
    /**
     * Filter, which Beneficiario to fetch.
     */
    where: BeneficiarioWhereUniqueInput
  }

  /**
   * Beneficiario findUniqueOrThrow
   */
  export type BeneficiarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiario
     */
    select?: BeneficiarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Beneficiario
     */
    omit?: BeneficiarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiarioInclude<ExtArgs> | null
    /**
     * Filter, which Beneficiario to fetch.
     */
    where: BeneficiarioWhereUniqueInput
  }

  /**
   * Beneficiario findFirst
   */
  export type BeneficiarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiario
     */
    select?: BeneficiarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Beneficiario
     */
    omit?: BeneficiarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiarioInclude<ExtArgs> | null
    /**
     * Filter, which Beneficiario to fetch.
     */
    where?: BeneficiarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Beneficiarios to fetch.
     */
    orderBy?: BeneficiarioOrderByWithRelationInput | BeneficiarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Beneficiarios.
     */
    cursor?: BeneficiarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Beneficiarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Beneficiarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Beneficiarios.
     */
    distinct?: BeneficiarioScalarFieldEnum | BeneficiarioScalarFieldEnum[]
  }

  /**
   * Beneficiario findFirstOrThrow
   */
  export type BeneficiarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiario
     */
    select?: BeneficiarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Beneficiario
     */
    omit?: BeneficiarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiarioInclude<ExtArgs> | null
    /**
     * Filter, which Beneficiario to fetch.
     */
    where?: BeneficiarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Beneficiarios to fetch.
     */
    orderBy?: BeneficiarioOrderByWithRelationInput | BeneficiarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Beneficiarios.
     */
    cursor?: BeneficiarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Beneficiarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Beneficiarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Beneficiarios.
     */
    distinct?: BeneficiarioScalarFieldEnum | BeneficiarioScalarFieldEnum[]
  }

  /**
   * Beneficiario findMany
   */
  export type BeneficiarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiario
     */
    select?: BeneficiarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Beneficiario
     */
    omit?: BeneficiarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiarioInclude<ExtArgs> | null
    /**
     * Filter, which Beneficiarios to fetch.
     */
    where?: BeneficiarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Beneficiarios to fetch.
     */
    orderBy?: BeneficiarioOrderByWithRelationInput | BeneficiarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Beneficiarios.
     */
    cursor?: BeneficiarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Beneficiarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Beneficiarios.
     */
    skip?: number
    distinct?: BeneficiarioScalarFieldEnum | BeneficiarioScalarFieldEnum[]
  }

  /**
   * Beneficiario create
   */
  export type BeneficiarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiario
     */
    select?: BeneficiarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Beneficiario
     */
    omit?: BeneficiarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Beneficiario.
     */
    data: XOR<BeneficiarioCreateInput, BeneficiarioUncheckedCreateInput>
  }

  /**
   * Beneficiario createMany
   */
  export type BeneficiarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Beneficiarios.
     */
    data: BeneficiarioCreateManyInput | BeneficiarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Beneficiario update
   */
  export type BeneficiarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiario
     */
    select?: BeneficiarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Beneficiario
     */
    omit?: BeneficiarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Beneficiario.
     */
    data: XOR<BeneficiarioUpdateInput, BeneficiarioUncheckedUpdateInput>
    /**
     * Choose, which Beneficiario to update.
     */
    where: BeneficiarioWhereUniqueInput
  }

  /**
   * Beneficiario updateMany
   */
  export type BeneficiarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Beneficiarios.
     */
    data: XOR<BeneficiarioUpdateManyMutationInput, BeneficiarioUncheckedUpdateManyInput>
    /**
     * Filter which Beneficiarios to update
     */
    where?: BeneficiarioWhereInput
    /**
     * Limit how many Beneficiarios to update.
     */
    limit?: number
  }

  /**
   * Beneficiario upsert
   */
  export type BeneficiarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiario
     */
    select?: BeneficiarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Beneficiario
     */
    omit?: BeneficiarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Beneficiario to update in case it exists.
     */
    where: BeneficiarioWhereUniqueInput
    /**
     * In case the Beneficiario found by the `where` argument doesn't exist, create a new Beneficiario with this data.
     */
    create: XOR<BeneficiarioCreateInput, BeneficiarioUncheckedCreateInput>
    /**
     * In case the Beneficiario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BeneficiarioUpdateInput, BeneficiarioUncheckedUpdateInput>
  }

  /**
   * Beneficiario delete
   */
  export type BeneficiarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiario
     */
    select?: BeneficiarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Beneficiario
     */
    omit?: BeneficiarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiarioInclude<ExtArgs> | null
    /**
     * Filter which Beneficiario to delete.
     */
    where: BeneficiarioWhereUniqueInput
  }

  /**
   * Beneficiario deleteMany
   */
  export type BeneficiarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Beneficiarios to delete
     */
    where?: BeneficiarioWhereInput
    /**
     * Limit how many Beneficiarios to delete.
     */
    limit?: number
  }

  /**
   * Beneficiario without action
   */
  export type BeneficiarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiario
     */
    select?: BeneficiarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Beneficiario
     */
    omit?: BeneficiarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiarioInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsuarioScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    email: 'email',
    password: 'password',
    rol: 'rol',
    permisos: 'permisos',
    resetToken: 'resetToken',
    resetTokenExp: 'resetTokenExp'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const ActividadScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    tipoId: 'tipoId',
    periodicidadId: 'periodicidadId',
    fechaInicio: 'fechaInicio',
    fechaFin: 'fechaFin',
    cupo: 'cupo',
    lugarId: 'lugarId',
    socioId: 'socioId',
    proyectoId: 'proyectoId',
    creadoPor: 'creadoPor'
  };

  export type ActividadScalarFieldEnum = (typeof ActividadScalarFieldEnum)[keyof typeof ActividadScalarFieldEnum]


  export const CitaScalarFieldEnum: {
    id: 'id',
    actividadId: 'actividadId',
    lugarId: 'lugarId',
    fecha: 'fecha',
    hora: 'hora',
    usuarioId: 'usuarioId'
  };

  export type CitaScalarFieldEnum = (typeof CitaScalarFieldEnum)[keyof typeof CitaScalarFieldEnum]


  export const TipoActividadScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    descripcion: 'descripcion'
  };

  export type TipoActividadScalarFieldEnum = (typeof TipoActividadScalarFieldEnum)[keyof typeof TipoActividadScalarFieldEnum]


  export const PeriodicidadScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type PeriodicidadScalarFieldEnum = (typeof PeriodicidadScalarFieldEnum)[keyof typeof PeriodicidadScalarFieldEnum]


  export const LugarScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    cupo: 'cupo'
  };

  export type LugarScalarFieldEnum = (typeof LugarScalarFieldEnum)[keyof typeof LugarScalarFieldEnum]


  export const OferenteActividadScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    docente: 'docente',
    actividadId: 'actividadId'
  };

  export type OferenteActividadScalarFieldEnum = (typeof OferenteActividadScalarFieldEnum)[keyof typeof OferenteActividadScalarFieldEnum]


  export const SocioComunitarioScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    activo: 'activo'
  };

  export type SocioComunitarioScalarFieldEnum = (typeof SocioComunitarioScalarFieldEnum)[keyof typeof SocioComunitarioScalarFieldEnum]


  export const ProyectoScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type ProyectoScalarFieldEnum = (typeof ProyectoScalarFieldEnum)[keyof typeof ProyectoScalarFieldEnum]


  export const ArchivoScalarFieldEnum: {
    id: 'id',
    url: 'url',
    descripcion: 'descripcion',
    actividadId: 'actividadId'
  };

  export type ArchivoScalarFieldEnum = (typeof ArchivoScalarFieldEnum)[keyof typeof ArchivoScalarFieldEnum]


  export const BeneficiarioScalarFieldEnum: {
    id: 'id',
    caracterizacion: 'caracterizacion',
    actividadId: 'actividadId'
  };

  export type BeneficiarioScalarFieldEnum = (typeof BeneficiarioScalarFieldEnum)[keyof typeof BeneficiarioScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const UsuarioOrderByRelevanceFieldEnum: {
    nombre: 'nombre',
    email: 'email',
    password: 'password',
    rol: 'rol',
    resetToken: 'resetToken'
  };

  export type UsuarioOrderByRelevanceFieldEnum = (typeof UsuarioOrderByRelevanceFieldEnum)[keyof typeof UsuarioOrderByRelevanceFieldEnum]


  export const ActividadOrderByRelevanceFieldEnum: {
    nombre: 'nombre',
    descripcion: 'descripcion'
  };

  export type ActividadOrderByRelevanceFieldEnum = (typeof ActividadOrderByRelevanceFieldEnum)[keyof typeof ActividadOrderByRelevanceFieldEnum]


  export const TipoActividadOrderByRelevanceFieldEnum: {
    nombre: 'nombre',
    descripcion: 'descripcion'
  };

  export type TipoActividadOrderByRelevanceFieldEnum = (typeof TipoActividadOrderByRelevanceFieldEnum)[keyof typeof TipoActividadOrderByRelevanceFieldEnum]


  export const PeriodicidadOrderByRelevanceFieldEnum: {
    nombre: 'nombre'
  };

  export type PeriodicidadOrderByRelevanceFieldEnum = (typeof PeriodicidadOrderByRelevanceFieldEnum)[keyof typeof PeriodicidadOrderByRelevanceFieldEnum]


  export const LugarOrderByRelevanceFieldEnum: {
    nombre: 'nombre'
  };

  export type LugarOrderByRelevanceFieldEnum = (typeof LugarOrderByRelevanceFieldEnum)[keyof typeof LugarOrderByRelevanceFieldEnum]


  export const OferenteActividadOrderByRelevanceFieldEnum: {
    nombre: 'nombre',
    docente: 'docente'
  };

  export type OferenteActividadOrderByRelevanceFieldEnum = (typeof OferenteActividadOrderByRelevanceFieldEnum)[keyof typeof OferenteActividadOrderByRelevanceFieldEnum]


  export const SocioComunitarioOrderByRelevanceFieldEnum: {
    nombre: 'nombre'
  };

  export type SocioComunitarioOrderByRelevanceFieldEnum = (typeof SocioComunitarioOrderByRelevanceFieldEnum)[keyof typeof SocioComunitarioOrderByRelevanceFieldEnum]


  export const ProyectoOrderByRelevanceFieldEnum: {
    nombre: 'nombre'
  };

  export type ProyectoOrderByRelevanceFieldEnum = (typeof ProyectoOrderByRelevanceFieldEnum)[keyof typeof ProyectoOrderByRelevanceFieldEnum]


  export const ArchivoOrderByRelevanceFieldEnum: {
    url: 'url',
    descripcion: 'descripcion'
  };

  export type ArchivoOrderByRelevanceFieldEnum = (typeof ArchivoOrderByRelevanceFieldEnum)[keyof typeof ArchivoOrderByRelevanceFieldEnum]


  export const BeneficiarioOrderByRelevanceFieldEnum: {
    caracterizacion: 'caracterizacion'
  };

  export type BeneficiarioOrderByRelevanceFieldEnum = (typeof BeneficiarioOrderByRelevanceFieldEnum)[keyof typeof BeneficiarioOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id?: IntFilter<"Usuario"> | number
    nombre?: StringFilter<"Usuario"> | string
    email?: StringFilter<"Usuario"> | string
    password?: StringFilter<"Usuario"> | string
    rol?: StringNullableFilter<"Usuario"> | string | null
    permisos?: JsonNullableFilter<"Usuario">
    resetToken?: StringNullableFilter<"Usuario"> | string | null
    resetTokenExp?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    citas?: CitaListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrderInput | SortOrder
    permisos?: SortOrderInput | SortOrder
    resetToken?: SortOrderInput | SortOrder
    resetTokenExp?: SortOrderInput | SortOrder
    citas?: CitaOrderByRelationAggregateInput
    _relevance?: UsuarioOrderByRelevanceInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nombre?: StringFilter<"Usuario"> | string
    password?: StringFilter<"Usuario"> | string
    rol?: StringNullableFilter<"Usuario"> | string | null
    permisos?: JsonNullableFilter<"Usuario">
    resetToken?: StringNullableFilter<"Usuario"> | string | null
    resetTokenExp?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    citas?: CitaListRelationFilter
  }, "id" | "email">

  export type UsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrderInput | SortOrder
    permisos?: SortOrderInput | SortOrder
    resetToken?: SortOrderInput | SortOrder
    resetTokenExp?: SortOrderInput | SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Usuario"> | number
    nombre?: StringWithAggregatesFilter<"Usuario"> | string
    email?: StringWithAggregatesFilter<"Usuario"> | string
    password?: StringWithAggregatesFilter<"Usuario"> | string
    rol?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    permisos?: JsonNullableWithAggregatesFilter<"Usuario">
    resetToken?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    resetTokenExp?: DateTimeNullableWithAggregatesFilter<"Usuario"> | Date | string | null
  }

  export type ActividadWhereInput = {
    AND?: ActividadWhereInput | ActividadWhereInput[]
    OR?: ActividadWhereInput[]
    NOT?: ActividadWhereInput | ActividadWhereInput[]
    id?: IntFilter<"Actividad"> | number
    nombre?: StringFilter<"Actividad"> | string
    descripcion?: StringNullableFilter<"Actividad"> | string | null
    tipoId?: IntFilter<"Actividad"> | number
    periodicidadId?: IntFilter<"Actividad"> | number
    fechaInicio?: DateTimeNullableFilter<"Actividad"> | Date | string | null
    fechaFin?: DateTimeNullableFilter<"Actividad"> | Date | string | null
    cupo?: IntNullableFilter<"Actividad"> | number | null
    lugarId?: IntNullableFilter<"Actividad"> | number | null
    socioId?: IntNullableFilter<"Actividad"> | number | null
    proyectoId?: IntNullableFilter<"Actividad"> | number | null
    creadoPor?: IntNullableFilter<"Actividad"> | number | null
    lugar?: XOR<LugarNullableScalarRelationFilter, LugarWhereInput> | null
    periodicidad?: XOR<PeriodicidadScalarRelationFilter, PeriodicidadWhereInput>
    proyecto?: XOR<ProyectoNullableScalarRelationFilter, ProyectoWhereInput> | null
    tipo?: XOR<TipoActividadScalarRelationFilter, TipoActividadWhereInput>
    archivos?: ArchivoListRelationFilter
    beneficiarios?: BeneficiarioListRelationFilter
    citas?: CitaListRelationFilter
    oferentes?: OferenteActividadListRelationFilter
  }

  export type ActividadOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    tipoId?: SortOrder
    periodicidadId?: SortOrder
    fechaInicio?: SortOrderInput | SortOrder
    fechaFin?: SortOrderInput | SortOrder
    cupo?: SortOrderInput | SortOrder
    lugarId?: SortOrderInput | SortOrder
    socioId?: SortOrderInput | SortOrder
    proyectoId?: SortOrderInput | SortOrder
    creadoPor?: SortOrderInput | SortOrder
    lugar?: LugarOrderByWithRelationInput
    periodicidad?: PeriodicidadOrderByWithRelationInput
    proyecto?: ProyectoOrderByWithRelationInput
    tipo?: TipoActividadOrderByWithRelationInput
    archivos?: ArchivoOrderByRelationAggregateInput
    beneficiarios?: BeneficiarioOrderByRelationAggregateInput
    citas?: CitaOrderByRelationAggregateInput
    oferentes?: OferenteActividadOrderByRelationAggregateInput
    _relevance?: ActividadOrderByRelevanceInput
  }

  export type ActividadWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ActividadWhereInput | ActividadWhereInput[]
    OR?: ActividadWhereInput[]
    NOT?: ActividadWhereInput | ActividadWhereInput[]
    nombre?: StringFilter<"Actividad"> | string
    descripcion?: StringNullableFilter<"Actividad"> | string | null
    tipoId?: IntFilter<"Actividad"> | number
    periodicidadId?: IntFilter<"Actividad"> | number
    fechaInicio?: DateTimeNullableFilter<"Actividad"> | Date | string | null
    fechaFin?: DateTimeNullableFilter<"Actividad"> | Date | string | null
    cupo?: IntNullableFilter<"Actividad"> | number | null
    lugarId?: IntNullableFilter<"Actividad"> | number | null
    socioId?: IntNullableFilter<"Actividad"> | number | null
    proyectoId?: IntNullableFilter<"Actividad"> | number | null
    creadoPor?: IntNullableFilter<"Actividad"> | number | null
    lugar?: XOR<LugarNullableScalarRelationFilter, LugarWhereInput> | null
    periodicidad?: XOR<PeriodicidadScalarRelationFilter, PeriodicidadWhereInput>
    proyecto?: XOR<ProyectoNullableScalarRelationFilter, ProyectoWhereInput> | null
    tipo?: XOR<TipoActividadScalarRelationFilter, TipoActividadWhereInput>
    archivos?: ArchivoListRelationFilter
    beneficiarios?: BeneficiarioListRelationFilter
    citas?: CitaListRelationFilter
    oferentes?: OferenteActividadListRelationFilter
  }, "id">

  export type ActividadOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    tipoId?: SortOrder
    periodicidadId?: SortOrder
    fechaInicio?: SortOrderInput | SortOrder
    fechaFin?: SortOrderInput | SortOrder
    cupo?: SortOrderInput | SortOrder
    lugarId?: SortOrderInput | SortOrder
    socioId?: SortOrderInput | SortOrder
    proyectoId?: SortOrderInput | SortOrder
    creadoPor?: SortOrderInput | SortOrder
    _count?: ActividadCountOrderByAggregateInput
    _avg?: ActividadAvgOrderByAggregateInput
    _max?: ActividadMaxOrderByAggregateInput
    _min?: ActividadMinOrderByAggregateInput
    _sum?: ActividadSumOrderByAggregateInput
  }

  export type ActividadScalarWhereWithAggregatesInput = {
    AND?: ActividadScalarWhereWithAggregatesInput | ActividadScalarWhereWithAggregatesInput[]
    OR?: ActividadScalarWhereWithAggregatesInput[]
    NOT?: ActividadScalarWhereWithAggregatesInput | ActividadScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Actividad"> | number
    nombre?: StringWithAggregatesFilter<"Actividad"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Actividad"> | string | null
    tipoId?: IntWithAggregatesFilter<"Actividad"> | number
    periodicidadId?: IntWithAggregatesFilter<"Actividad"> | number
    fechaInicio?: DateTimeNullableWithAggregatesFilter<"Actividad"> | Date | string | null
    fechaFin?: DateTimeNullableWithAggregatesFilter<"Actividad"> | Date | string | null
    cupo?: IntNullableWithAggregatesFilter<"Actividad"> | number | null
    lugarId?: IntNullableWithAggregatesFilter<"Actividad"> | number | null
    socioId?: IntNullableWithAggregatesFilter<"Actividad"> | number | null
    proyectoId?: IntNullableWithAggregatesFilter<"Actividad"> | number | null
    creadoPor?: IntNullableWithAggregatesFilter<"Actividad"> | number | null
  }

  export type CitaWhereInput = {
    AND?: CitaWhereInput | CitaWhereInput[]
    OR?: CitaWhereInput[]
    NOT?: CitaWhereInput | CitaWhereInput[]
    id?: IntFilter<"Cita"> | number
    actividadId?: IntFilter<"Cita"> | number
    lugarId?: IntFilter<"Cita"> | number
    fecha?: DateTimeFilter<"Cita"> | Date | string
    hora?: DateTimeFilter<"Cita"> | Date | string
    usuarioId?: IntNullableFilter<"Cita"> | number | null
    actividad?: XOR<ActividadScalarRelationFilter, ActividadWhereInput>
    lugar?: XOR<LugarScalarRelationFilter, LugarWhereInput>
    usuario?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
  }

  export type CitaOrderByWithRelationInput = {
    id?: SortOrder
    actividadId?: SortOrder
    lugarId?: SortOrder
    fecha?: SortOrder
    hora?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    actividad?: ActividadOrderByWithRelationInput
    lugar?: LugarOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type CitaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CitaWhereInput | CitaWhereInput[]
    OR?: CitaWhereInput[]
    NOT?: CitaWhereInput | CitaWhereInput[]
    actividadId?: IntFilter<"Cita"> | number
    lugarId?: IntFilter<"Cita"> | number
    fecha?: DateTimeFilter<"Cita"> | Date | string
    hora?: DateTimeFilter<"Cita"> | Date | string
    usuarioId?: IntNullableFilter<"Cita"> | number | null
    actividad?: XOR<ActividadScalarRelationFilter, ActividadWhereInput>
    lugar?: XOR<LugarScalarRelationFilter, LugarWhereInput>
    usuario?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
  }, "id">

  export type CitaOrderByWithAggregationInput = {
    id?: SortOrder
    actividadId?: SortOrder
    lugarId?: SortOrder
    fecha?: SortOrder
    hora?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    _count?: CitaCountOrderByAggregateInput
    _avg?: CitaAvgOrderByAggregateInput
    _max?: CitaMaxOrderByAggregateInput
    _min?: CitaMinOrderByAggregateInput
    _sum?: CitaSumOrderByAggregateInput
  }

  export type CitaScalarWhereWithAggregatesInput = {
    AND?: CitaScalarWhereWithAggregatesInput | CitaScalarWhereWithAggregatesInput[]
    OR?: CitaScalarWhereWithAggregatesInput[]
    NOT?: CitaScalarWhereWithAggregatesInput | CitaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Cita"> | number
    actividadId?: IntWithAggregatesFilter<"Cita"> | number
    lugarId?: IntWithAggregatesFilter<"Cita"> | number
    fecha?: DateTimeWithAggregatesFilter<"Cita"> | Date | string
    hora?: DateTimeWithAggregatesFilter<"Cita"> | Date | string
    usuarioId?: IntNullableWithAggregatesFilter<"Cita"> | number | null
  }

  export type TipoActividadWhereInput = {
    AND?: TipoActividadWhereInput | TipoActividadWhereInput[]
    OR?: TipoActividadWhereInput[]
    NOT?: TipoActividadWhereInput | TipoActividadWhereInput[]
    id?: IntFilter<"TipoActividad"> | number
    nombre?: StringFilter<"TipoActividad"> | string
    descripcion?: StringFilter<"TipoActividad"> | string
    actividades?: ActividadListRelationFilter
  }

  export type TipoActividadOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    actividades?: ActividadOrderByRelationAggregateInput
    _relevance?: TipoActividadOrderByRelevanceInput
  }

  export type TipoActividadWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TipoActividadWhereInput | TipoActividadWhereInput[]
    OR?: TipoActividadWhereInput[]
    NOT?: TipoActividadWhereInput | TipoActividadWhereInput[]
    nombre?: StringFilter<"TipoActividad"> | string
    descripcion?: StringFilter<"TipoActividad"> | string
    actividades?: ActividadListRelationFilter
  }, "id">

  export type TipoActividadOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    _count?: TipoActividadCountOrderByAggregateInput
    _avg?: TipoActividadAvgOrderByAggregateInput
    _max?: TipoActividadMaxOrderByAggregateInput
    _min?: TipoActividadMinOrderByAggregateInput
    _sum?: TipoActividadSumOrderByAggregateInput
  }

  export type TipoActividadScalarWhereWithAggregatesInput = {
    AND?: TipoActividadScalarWhereWithAggregatesInput | TipoActividadScalarWhereWithAggregatesInput[]
    OR?: TipoActividadScalarWhereWithAggregatesInput[]
    NOT?: TipoActividadScalarWhereWithAggregatesInput | TipoActividadScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TipoActividad"> | number
    nombre?: StringWithAggregatesFilter<"TipoActividad"> | string
    descripcion?: StringWithAggregatesFilter<"TipoActividad"> | string
  }

  export type PeriodicidadWhereInput = {
    AND?: PeriodicidadWhereInput | PeriodicidadWhereInput[]
    OR?: PeriodicidadWhereInput[]
    NOT?: PeriodicidadWhereInput | PeriodicidadWhereInput[]
    id?: IntFilter<"Periodicidad"> | number
    nombre?: StringFilter<"Periodicidad"> | string
    actividades?: ActividadListRelationFilter
  }

  export type PeriodicidadOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    actividades?: ActividadOrderByRelationAggregateInput
    _relevance?: PeriodicidadOrderByRelevanceInput
  }

  export type PeriodicidadWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PeriodicidadWhereInput | PeriodicidadWhereInput[]
    OR?: PeriodicidadWhereInput[]
    NOT?: PeriodicidadWhereInput | PeriodicidadWhereInput[]
    nombre?: StringFilter<"Periodicidad"> | string
    actividades?: ActividadListRelationFilter
  }, "id">

  export type PeriodicidadOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: PeriodicidadCountOrderByAggregateInput
    _avg?: PeriodicidadAvgOrderByAggregateInput
    _max?: PeriodicidadMaxOrderByAggregateInput
    _min?: PeriodicidadMinOrderByAggregateInput
    _sum?: PeriodicidadSumOrderByAggregateInput
  }

  export type PeriodicidadScalarWhereWithAggregatesInput = {
    AND?: PeriodicidadScalarWhereWithAggregatesInput | PeriodicidadScalarWhereWithAggregatesInput[]
    OR?: PeriodicidadScalarWhereWithAggregatesInput[]
    NOT?: PeriodicidadScalarWhereWithAggregatesInput | PeriodicidadScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Periodicidad"> | number
    nombre?: StringWithAggregatesFilter<"Periodicidad"> | string
  }

  export type LugarWhereInput = {
    AND?: LugarWhereInput | LugarWhereInput[]
    OR?: LugarWhereInput[]
    NOT?: LugarWhereInput | LugarWhereInput[]
    id?: IntFilter<"Lugar"> | number
    nombre?: StringFilter<"Lugar"> | string
    cupo?: IntNullableFilter<"Lugar"> | number | null
    actividades?: ActividadListRelationFilter
    citas?: CitaListRelationFilter
  }

  export type LugarOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    cupo?: SortOrderInput | SortOrder
    actividades?: ActividadOrderByRelationAggregateInput
    citas?: CitaOrderByRelationAggregateInput
    _relevance?: LugarOrderByRelevanceInput
  }

  export type LugarWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: LugarWhereInput | LugarWhereInput[]
    OR?: LugarWhereInput[]
    NOT?: LugarWhereInput | LugarWhereInput[]
    nombre?: StringFilter<"Lugar"> | string
    cupo?: IntNullableFilter<"Lugar"> | number | null
    actividades?: ActividadListRelationFilter
    citas?: CitaListRelationFilter
  }, "id">

  export type LugarOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    cupo?: SortOrderInput | SortOrder
    _count?: LugarCountOrderByAggregateInput
    _avg?: LugarAvgOrderByAggregateInput
    _max?: LugarMaxOrderByAggregateInput
    _min?: LugarMinOrderByAggregateInput
    _sum?: LugarSumOrderByAggregateInput
  }

  export type LugarScalarWhereWithAggregatesInput = {
    AND?: LugarScalarWhereWithAggregatesInput | LugarScalarWhereWithAggregatesInput[]
    OR?: LugarScalarWhereWithAggregatesInput[]
    NOT?: LugarScalarWhereWithAggregatesInput | LugarScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Lugar"> | number
    nombre?: StringWithAggregatesFilter<"Lugar"> | string
    cupo?: IntNullableWithAggregatesFilter<"Lugar"> | number | null
  }

  export type OferenteActividadWhereInput = {
    AND?: OferenteActividadWhereInput | OferenteActividadWhereInput[]
    OR?: OferenteActividadWhereInput[]
    NOT?: OferenteActividadWhereInput | OferenteActividadWhereInput[]
    id?: IntFilter<"OferenteActividad"> | number
    nombre?: StringFilter<"OferenteActividad"> | string
    docente?: StringFilter<"OferenteActividad"> | string
    actividadId?: IntFilter<"OferenteActividad"> | number
    actividad?: XOR<ActividadScalarRelationFilter, ActividadWhereInput>
  }

  export type OferenteActividadOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    docente?: SortOrder
    actividadId?: SortOrder
    actividad?: ActividadOrderByWithRelationInput
    _relevance?: OferenteActividadOrderByRelevanceInput
  }

  export type OferenteActividadWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: OferenteActividadWhereInput | OferenteActividadWhereInput[]
    OR?: OferenteActividadWhereInput[]
    NOT?: OferenteActividadWhereInput | OferenteActividadWhereInput[]
    nombre?: StringFilter<"OferenteActividad"> | string
    docente?: StringFilter<"OferenteActividad"> | string
    actividadId?: IntFilter<"OferenteActividad"> | number
    actividad?: XOR<ActividadScalarRelationFilter, ActividadWhereInput>
  }, "id">

  export type OferenteActividadOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    docente?: SortOrder
    actividadId?: SortOrder
    _count?: OferenteActividadCountOrderByAggregateInput
    _avg?: OferenteActividadAvgOrderByAggregateInput
    _max?: OferenteActividadMaxOrderByAggregateInput
    _min?: OferenteActividadMinOrderByAggregateInput
    _sum?: OferenteActividadSumOrderByAggregateInput
  }

  export type OferenteActividadScalarWhereWithAggregatesInput = {
    AND?: OferenteActividadScalarWhereWithAggregatesInput | OferenteActividadScalarWhereWithAggregatesInput[]
    OR?: OferenteActividadScalarWhereWithAggregatesInput[]
    NOT?: OferenteActividadScalarWhereWithAggregatesInput | OferenteActividadScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"OferenteActividad"> | number
    nombre?: StringWithAggregatesFilter<"OferenteActividad"> | string
    docente?: StringWithAggregatesFilter<"OferenteActividad"> | string
    actividadId?: IntWithAggregatesFilter<"OferenteActividad"> | number
  }

  export type SocioComunitarioWhereInput = {
    AND?: SocioComunitarioWhereInput | SocioComunitarioWhereInput[]
    OR?: SocioComunitarioWhereInput[]
    NOT?: SocioComunitarioWhereInput | SocioComunitarioWhereInput[]
    id?: IntFilter<"SocioComunitario"> | number
    nombre?: StringFilter<"SocioComunitario"> | string
    activo?: BoolFilter<"SocioComunitario"> | boolean
  }

  export type SocioComunitarioOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    activo?: SortOrder
    _relevance?: SocioComunitarioOrderByRelevanceInput
  }

  export type SocioComunitarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: SocioComunitarioWhereInput | SocioComunitarioWhereInput[]
    OR?: SocioComunitarioWhereInput[]
    NOT?: SocioComunitarioWhereInput | SocioComunitarioWhereInput[]
    activo?: BoolFilter<"SocioComunitario"> | boolean
  }, "id" | "nombre">

  export type SocioComunitarioOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    activo?: SortOrder
    _count?: SocioComunitarioCountOrderByAggregateInput
    _avg?: SocioComunitarioAvgOrderByAggregateInput
    _max?: SocioComunitarioMaxOrderByAggregateInput
    _min?: SocioComunitarioMinOrderByAggregateInput
    _sum?: SocioComunitarioSumOrderByAggregateInput
  }

  export type SocioComunitarioScalarWhereWithAggregatesInput = {
    AND?: SocioComunitarioScalarWhereWithAggregatesInput | SocioComunitarioScalarWhereWithAggregatesInput[]
    OR?: SocioComunitarioScalarWhereWithAggregatesInput[]
    NOT?: SocioComunitarioScalarWhereWithAggregatesInput | SocioComunitarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SocioComunitario"> | number
    nombre?: StringWithAggregatesFilter<"SocioComunitario"> | string
    activo?: BoolWithAggregatesFilter<"SocioComunitario"> | boolean
  }

  export type ProyectoWhereInput = {
    AND?: ProyectoWhereInput | ProyectoWhereInput[]
    OR?: ProyectoWhereInput[]
    NOT?: ProyectoWhereInput | ProyectoWhereInput[]
    id?: IntFilter<"Proyecto"> | number
    nombre?: StringFilter<"Proyecto"> | string
    actividades?: ActividadListRelationFilter
  }

  export type ProyectoOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    actividades?: ActividadOrderByRelationAggregateInput
    _relevance?: ProyectoOrderByRelevanceInput
  }

  export type ProyectoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ProyectoWhereInput | ProyectoWhereInput[]
    OR?: ProyectoWhereInput[]
    NOT?: ProyectoWhereInput | ProyectoWhereInput[]
    nombre?: StringFilter<"Proyecto"> | string
    actividades?: ActividadListRelationFilter
  }, "id">

  export type ProyectoOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: ProyectoCountOrderByAggregateInput
    _avg?: ProyectoAvgOrderByAggregateInput
    _max?: ProyectoMaxOrderByAggregateInput
    _min?: ProyectoMinOrderByAggregateInput
    _sum?: ProyectoSumOrderByAggregateInput
  }

  export type ProyectoScalarWhereWithAggregatesInput = {
    AND?: ProyectoScalarWhereWithAggregatesInput | ProyectoScalarWhereWithAggregatesInput[]
    OR?: ProyectoScalarWhereWithAggregatesInput[]
    NOT?: ProyectoScalarWhereWithAggregatesInput | ProyectoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Proyecto"> | number
    nombre?: StringWithAggregatesFilter<"Proyecto"> | string
  }

  export type ArchivoWhereInput = {
    AND?: ArchivoWhereInput | ArchivoWhereInput[]
    OR?: ArchivoWhereInput[]
    NOT?: ArchivoWhereInput | ArchivoWhereInput[]
    id?: IntFilter<"Archivo"> | number
    url?: StringFilter<"Archivo"> | string
    descripcion?: StringNullableFilter<"Archivo"> | string | null
    actividadId?: IntFilter<"Archivo"> | number
    actividad?: XOR<ActividadScalarRelationFilter, ActividadWhereInput>
  }

  export type ArchivoOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    actividadId?: SortOrder
    actividad?: ActividadOrderByWithRelationInput
    _relevance?: ArchivoOrderByRelevanceInput
  }

  export type ArchivoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ArchivoWhereInput | ArchivoWhereInput[]
    OR?: ArchivoWhereInput[]
    NOT?: ArchivoWhereInput | ArchivoWhereInput[]
    url?: StringFilter<"Archivo"> | string
    descripcion?: StringNullableFilter<"Archivo"> | string | null
    actividadId?: IntFilter<"Archivo"> | number
    actividad?: XOR<ActividadScalarRelationFilter, ActividadWhereInput>
  }, "id">

  export type ArchivoOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    actividadId?: SortOrder
    _count?: ArchivoCountOrderByAggregateInput
    _avg?: ArchivoAvgOrderByAggregateInput
    _max?: ArchivoMaxOrderByAggregateInput
    _min?: ArchivoMinOrderByAggregateInput
    _sum?: ArchivoSumOrderByAggregateInput
  }

  export type ArchivoScalarWhereWithAggregatesInput = {
    AND?: ArchivoScalarWhereWithAggregatesInput | ArchivoScalarWhereWithAggregatesInput[]
    OR?: ArchivoScalarWhereWithAggregatesInput[]
    NOT?: ArchivoScalarWhereWithAggregatesInput | ArchivoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Archivo"> | number
    url?: StringWithAggregatesFilter<"Archivo"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Archivo"> | string | null
    actividadId?: IntWithAggregatesFilter<"Archivo"> | number
  }

  export type BeneficiarioWhereInput = {
    AND?: BeneficiarioWhereInput | BeneficiarioWhereInput[]
    OR?: BeneficiarioWhereInput[]
    NOT?: BeneficiarioWhereInput | BeneficiarioWhereInput[]
    id?: IntFilter<"Beneficiario"> | number
    caracterizacion?: StringFilter<"Beneficiario"> | string
    actividadId?: IntFilter<"Beneficiario"> | number
    actividad?: XOR<ActividadScalarRelationFilter, ActividadWhereInput>
  }

  export type BeneficiarioOrderByWithRelationInput = {
    id?: SortOrder
    caracterizacion?: SortOrder
    actividadId?: SortOrder
    actividad?: ActividadOrderByWithRelationInput
    _relevance?: BeneficiarioOrderByRelevanceInput
  }

  export type BeneficiarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: BeneficiarioWhereInput | BeneficiarioWhereInput[]
    OR?: BeneficiarioWhereInput[]
    NOT?: BeneficiarioWhereInput | BeneficiarioWhereInput[]
    caracterizacion?: StringFilter<"Beneficiario"> | string
    actividadId?: IntFilter<"Beneficiario"> | number
    actividad?: XOR<ActividadScalarRelationFilter, ActividadWhereInput>
  }, "id">

  export type BeneficiarioOrderByWithAggregationInput = {
    id?: SortOrder
    caracterizacion?: SortOrder
    actividadId?: SortOrder
    _count?: BeneficiarioCountOrderByAggregateInput
    _avg?: BeneficiarioAvgOrderByAggregateInput
    _max?: BeneficiarioMaxOrderByAggregateInput
    _min?: BeneficiarioMinOrderByAggregateInput
    _sum?: BeneficiarioSumOrderByAggregateInput
  }

  export type BeneficiarioScalarWhereWithAggregatesInput = {
    AND?: BeneficiarioScalarWhereWithAggregatesInput | BeneficiarioScalarWhereWithAggregatesInput[]
    OR?: BeneficiarioScalarWhereWithAggregatesInput[]
    NOT?: BeneficiarioScalarWhereWithAggregatesInput | BeneficiarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Beneficiario"> | number
    caracterizacion?: StringWithAggregatesFilter<"Beneficiario"> | string
    actividadId?: IntWithAggregatesFilter<"Beneficiario"> | number
  }

  export type UsuarioCreateInput = {
    nombre: string
    email: string
    password: string
    rol?: string | null
    permisos?: NullableJsonNullValueInput | InputJsonValue
    resetToken?: string | null
    resetTokenExp?: Date | string | null
    citas?: CitaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateInput = {
    id?: number
    nombre: string
    email: string
    password: string
    rol?: string | null
    permisos?: NullableJsonNullValueInput | InputJsonValue
    resetToken?: string | null
    resetTokenExp?: Date | string | null
    citas?: CitaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    permisos?: NullableJsonNullValueInput | InputJsonValue
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    citas?: CitaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    permisos?: NullableJsonNullValueInput | InputJsonValue
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    citas?: CitaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateManyInput = {
    id?: number
    nombre: string
    email: string
    password: string
    rol?: string | null
    permisos?: NullableJsonNullValueInput | InputJsonValue
    resetToken?: string | null
    resetTokenExp?: Date | string | null
  }

  export type UsuarioUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    permisos?: NullableJsonNullValueInput | InputJsonValue
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    permisos?: NullableJsonNullValueInput | InputJsonValue
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ActividadCreateInput = {
    nombre: string
    descripcion?: string | null
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    socioId?: number | null
    creadoPor?: number | null
    lugar?: LugarCreateNestedOneWithoutActividadesInput
    periodicidad: PeriodicidadCreateNestedOneWithoutActividadesInput
    proyecto?: ProyectoCreateNestedOneWithoutActividadesInput
    tipo: TipoActividadCreateNestedOneWithoutActividadesInput
    archivos?: ArchivoCreateNestedManyWithoutActividadInput
    beneficiarios?: BeneficiarioCreateNestedManyWithoutActividadInput
    citas?: CitaCreateNestedManyWithoutActividadInput
    oferentes?: OferenteActividadCreateNestedManyWithoutActividadInput
  }

  export type ActividadUncheckedCreateInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    tipoId: number
    periodicidadId: number
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    lugarId?: number | null
    socioId?: number | null
    proyectoId?: number | null
    creadoPor?: number | null
    archivos?: ArchivoUncheckedCreateNestedManyWithoutActividadInput
    beneficiarios?: BeneficiarioUncheckedCreateNestedManyWithoutActividadInput
    citas?: CitaUncheckedCreateNestedManyWithoutActividadInput
    oferentes?: OferenteActividadUncheckedCreateNestedManyWithoutActividadInput
  }

  export type ActividadUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    lugar?: LugarUpdateOneWithoutActividadesNestedInput
    periodicidad?: PeriodicidadUpdateOneRequiredWithoutActividadesNestedInput
    proyecto?: ProyectoUpdateOneWithoutActividadesNestedInput
    tipo?: TipoActividadUpdateOneRequiredWithoutActividadesNestedInput
    archivos?: ArchivoUpdateManyWithoutActividadNestedInput
    beneficiarios?: BeneficiarioUpdateManyWithoutActividadNestedInput
    citas?: CitaUpdateManyWithoutActividadNestedInput
    oferentes?: OferenteActividadUpdateManyWithoutActividadNestedInput
  }

  export type ActividadUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    periodicidadId?: IntFieldUpdateOperationsInput | number
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    lugarId?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    proyectoId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    archivos?: ArchivoUncheckedUpdateManyWithoutActividadNestedInput
    beneficiarios?: BeneficiarioUncheckedUpdateManyWithoutActividadNestedInput
    citas?: CitaUncheckedUpdateManyWithoutActividadNestedInput
    oferentes?: OferenteActividadUncheckedUpdateManyWithoutActividadNestedInput
  }

  export type ActividadCreateManyInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    tipoId: number
    periodicidadId: number
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    lugarId?: number | null
    socioId?: number | null
    proyectoId?: number | null
    creadoPor?: number | null
  }

  export type ActividadUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ActividadUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    periodicidadId?: IntFieldUpdateOperationsInput | number
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    lugarId?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    proyectoId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CitaCreateInput = {
    fecha: Date | string
    hora: Date | string
    actividad: ActividadCreateNestedOneWithoutCitasInput
    lugar: LugarCreateNestedOneWithoutCitasInput
    usuario?: UsuarioCreateNestedOneWithoutCitasInput
  }

  export type CitaUncheckedCreateInput = {
    id?: number
    actividadId: number
    lugarId: number
    fecha: Date | string
    hora: Date | string
    usuarioId?: number | null
  }

  export type CitaUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    actividad?: ActividadUpdateOneRequiredWithoutCitasNestedInput
    lugar?: LugarUpdateOneRequiredWithoutCitasNestedInput
    usuario?: UsuarioUpdateOneWithoutCitasNestedInput
  }

  export type CitaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    actividadId?: IntFieldUpdateOperationsInput | number
    lugarId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CitaCreateManyInput = {
    id?: number
    actividadId: number
    lugarId: number
    fecha: Date | string
    hora: Date | string
    usuarioId?: number | null
  }

  export type CitaUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CitaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    actividadId?: IntFieldUpdateOperationsInput | number
    lugarId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TipoActividadCreateInput = {
    nombre: string
    descripcion: string
    actividades?: ActividadCreateNestedManyWithoutTipoInput
  }

  export type TipoActividadUncheckedCreateInput = {
    id?: number
    nombre: string
    descripcion: string
    actividades?: ActividadUncheckedCreateNestedManyWithoutTipoInput
  }

  export type TipoActividadUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    actividades?: ActividadUpdateManyWithoutTipoNestedInput
  }

  export type TipoActividadUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    actividades?: ActividadUncheckedUpdateManyWithoutTipoNestedInput
  }

  export type TipoActividadCreateManyInput = {
    id?: number
    nombre: string
    descripcion: string
  }

  export type TipoActividadUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type TipoActividadUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type PeriodicidadCreateInput = {
    nombre: string
    actividades?: ActividadCreateNestedManyWithoutPeriodicidadInput
  }

  export type PeriodicidadUncheckedCreateInput = {
    id?: number
    nombre: string
    actividades?: ActividadUncheckedCreateNestedManyWithoutPeriodicidadInput
  }

  export type PeriodicidadUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    actividades?: ActividadUpdateManyWithoutPeriodicidadNestedInput
  }

  export type PeriodicidadUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    actividades?: ActividadUncheckedUpdateManyWithoutPeriodicidadNestedInput
  }

  export type PeriodicidadCreateManyInput = {
    id?: number
    nombre: string
  }

  export type PeriodicidadUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type PeriodicidadUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type LugarCreateInput = {
    nombre: string
    cupo?: number | null
    actividades?: ActividadCreateNestedManyWithoutLugarInput
    citas?: CitaCreateNestedManyWithoutLugarInput
  }

  export type LugarUncheckedCreateInput = {
    id?: number
    nombre: string
    cupo?: number | null
    actividades?: ActividadUncheckedCreateNestedManyWithoutLugarInput
    citas?: CitaUncheckedCreateNestedManyWithoutLugarInput
  }

  export type LugarUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    actividades?: ActividadUpdateManyWithoutLugarNestedInput
    citas?: CitaUpdateManyWithoutLugarNestedInput
  }

  export type LugarUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    actividades?: ActividadUncheckedUpdateManyWithoutLugarNestedInput
    citas?: CitaUncheckedUpdateManyWithoutLugarNestedInput
  }

  export type LugarCreateManyInput = {
    id?: number
    nombre: string
    cupo?: number | null
  }

  export type LugarUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type LugarUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OferenteActividadCreateInput = {
    nombre: string
    docente: string
    actividad: ActividadCreateNestedOneWithoutOferentesInput
  }

  export type OferenteActividadUncheckedCreateInput = {
    id?: number
    nombre: string
    docente: string
    actividadId: number
  }

  export type OferenteActividadUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    docente?: StringFieldUpdateOperationsInput | string
    actividad?: ActividadUpdateOneRequiredWithoutOferentesNestedInput
  }

  export type OferenteActividadUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    docente?: StringFieldUpdateOperationsInput | string
    actividadId?: IntFieldUpdateOperationsInput | number
  }

  export type OferenteActividadCreateManyInput = {
    id?: number
    nombre: string
    docente: string
    actividadId: number
  }

  export type OferenteActividadUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    docente?: StringFieldUpdateOperationsInput | string
  }

  export type OferenteActividadUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    docente?: StringFieldUpdateOperationsInput | string
    actividadId?: IntFieldUpdateOperationsInput | number
  }

  export type SocioComunitarioCreateInput = {
    nombre: string
    activo?: boolean
  }

  export type SocioComunitarioUncheckedCreateInput = {
    id?: number
    nombre: string
    activo?: boolean
  }

  export type SocioComunitarioUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
  }

  export type SocioComunitarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
  }

  export type SocioComunitarioCreateManyInput = {
    id?: number
    nombre: string
    activo?: boolean
  }

  export type SocioComunitarioUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
  }

  export type SocioComunitarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProyectoCreateInput = {
    nombre: string
    actividades?: ActividadCreateNestedManyWithoutProyectoInput
  }

  export type ProyectoUncheckedCreateInput = {
    id?: number
    nombre: string
    actividades?: ActividadUncheckedCreateNestedManyWithoutProyectoInput
  }

  export type ProyectoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    actividades?: ActividadUpdateManyWithoutProyectoNestedInput
  }

  export type ProyectoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    actividades?: ActividadUncheckedUpdateManyWithoutProyectoNestedInput
  }

  export type ProyectoCreateManyInput = {
    id?: number
    nombre: string
  }

  export type ProyectoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ProyectoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ArchivoCreateInput = {
    url: string
    descripcion?: string | null
    actividad: ActividadCreateNestedOneWithoutArchivosInput
  }

  export type ArchivoUncheckedCreateInput = {
    id?: number
    url: string
    descripcion?: string | null
    actividadId: number
  }

  export type ArchivoUpdateInput = {
    url?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    actividad?: ActividadUpdateOneRequiredWithoutArchivosNestedInput
  }

  export type ArchivoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    actividadId?: IntFieldUpdateOperationsInput | number
  }

  export type ArchivoCreateManyInput = {
    id?: number
    url: string
    descripcion?: string | null
    actividadId: number
  }

  export type ArchivoUpdateManyMutationInput = {
    url?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArchivoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    actividadId?: IntFieldUpdateOperationsInput | number
  }

  export type BeneficiarioCreateInput = {
    caracterizacion: string
    actividad: ActividadCreateNestedOneWithoutBeneficiariosInput
  }

  export type BeneficiarioUncheckedCreateInput = {
    id?: number
    caracterizacion: string
    actividadId: number
  }

  export type BeneficiarioUpdateInput = {
    caracterizacion?: StringFieldUpdateOperationsInput | string
    actividad?: ActividadUpdateOneRequiredWithoutBeneficiariosNestedInput
  }

  export type BeneficiarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    caracterizacion?: StringFieldUpdateOperationsInput | string
    actividadId?: IntFieldUpdateOperationsInput | number
  }

  export type BeneficiarioCreateManyInput = {
    id?: number
    caracterizacion: string
    actividadId: number
  }

  export type BeneficiarioUpdateManyMutationInput = {
    caracterizacion?: StringFieldUpdateOperationsInput | string
  }

  export type BeneficiarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    caracterizacion?: StringFieldUpdateOperationsInput | string
    actividadId?: IntFieldUpdateOperationsInput | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type CitaListRelationFilter = {
    every?: CitaWhereInput
    some?: CitaWhereInput
    none?: CitaWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CitaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioOrderByRelevanceInput = {
    fields: UsuarioOrderByRelevanceFieldEnum | UsuarioOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrder
    permisos?: SortOrder
    resetToken?: SortOrder
    resetTokenExp?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrder
    resetToken?: SortOrder
    resetTokenExp?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrder
    resetToken?: SortOrder
    resetTokenExp?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type LugarNullableScalarRelationFilter = {
    is?: LugarWhereInput | null
    isNot?: LugarWhereInput | null
  }

  export type PeriodicidadScalarRelationFilter = {
    is?: PeriodicidadWhereInput
    isNot?: PeriodicidadWhereInput
  }

  export type ProyectoNullableScalarRelationFilter = {
    is?: ProyectoWhereInput | null
    isNot?: ProyectoWhereInput | null
  }

  export type TipoActividadScalarRelationFilter = {
    is?: TipoActividadWhereInput
    isNot?: TipoActividadWhereInput
  }

  export type ArchivoListRelationFilter = {
    every?: ArchivoWhereInput
    some?: ArchivoWhereInput
    none?: ArchivoWhereInput
  }

  export type BeneficiarioListRelationFilter = {
    every?: BeneficiarioWhereInput
    some?: BeneficiarioWhereInput
    none?: BeneficiarioWhereInput
  }

  export type OferenteActividadListRelationFilter = {
    every?: OferenteActividadWhereInput
    some?: OferenteActividadWhereInput
    none?: OferenteActividadWhereInput
  }

  export type ArchivoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BeneficiarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OferenteActividadOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ActividadOrderByRelevanceInput = {
    fields: ActividadOrderByRelevanceFieldEnum | ActividadOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ActividadCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    tipoId?: SortOrder
    periodicidadId?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    cupo?: SortOrder
    lugarId?: SortOrder
    socioId?: SortOrder
    proyectoId?: SortOrder
    creadoPor?: SortOrder
  }

  export type ActividadAvgOrderByAggregateInput = {
    id?: SortOrder
    tipoId?: SortOrder
    periodicidadId?: SortOrder
    cupo?: SortOrder
    lugarId?: SortOrder
    socioId?: SortOrder
    proyectoId?: SortOrder
    creadoPor?: SortOrder
  }

  export type ActividadMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    tipoId?: SortOrder
    periodicidadId?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    cupo?: SortOrder
    lugarId?: SortOrder
    socioId?: SortOrder
    proyectoId?: SortOrder
    creadoPor?: SortOrder
  }

  export type ActividadMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    tipoId?: SortOrder
    periodicidadId?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    cupo?: SortOrder
    lugarId?: SortOrder
    socioId?: SortOrder
    proyectoId?: SortOrder
    creadoPor?: SortOrder
  }

  export type ActividadSumOrderByAggregateInput = {
    id?: SortOrder
    tipoId?: SortOrder
    periodicidadId?: SortOrder
    cupo?: SortOrder
    lugarId?: SortOrder
    socioId?: SortOrder
    proyectoId?: SortOrder
    creadoPor?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type ActividadScalarRelationFilter = {
    is?: ActividadWhereInput
    isNot?: ActividadWhereInput
  }

  export type LugarScalarRelationFilter = {
    is?: LugarWhereInput
    isNot?: LugarWhereInput
  }

  export type UsuarioNullableScalarRelationFilter = {
    is?: UsuarioWhereInput | null
    isNot?: UsuarioWhereInput | null
  }

  export type CitaCountOrderByAggregateInput = {
    id?: SortOrder
    actividadId?: SortOrder
    lugarId?: SortOrder
    fecha?: SortOrder
    hora?: SortOrder
    usuarioId?: SortOrder
  }

  export type CitaAvgOrderByAggregateInput = {
    id?: SortOrder
    actividadId?: SortOrder
    lugarId?: SortOrder
    usuarioId?: SortOrder
  }

  export type CitaMaxOrderByAggregateInput = {
    id?: SortOrder
    actividadId?: SortOrder
    lugarId?: SortOrder
    fecha?: SortOrder
    hora?: SortOrder
    usuarioId?: SortOrder
  }

  export type CitaMinOrderByAggregateInput = {
    id?: SortOrder
    actividadId?: SortOrder
    lugarId?: SortOrder
    fecha?: SortOrder
    hora?: SortOrder
    usuarioId?: SortOrder
  }

  export type CitaSumOrderByAggregateInput = {
    id?: SortOrder
    actividadId?: SortOrder
    lugarId?: SortOrder
    usuarioId?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type ActividadListRelationFilter = {
    every?: ActividadWhereInput
    some?: ActividadWhereInput
    none?: ActividadWhereInput
  }

  export type ActividadOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TipoActividadOrderByRelevanceInput = {
    fields: TipoActividadOrderByRelevanceFieldEnum | TipoActividadOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TipoActividadCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type TipoActividadAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TipoActividadMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type TipoActividadMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type TipoActividadSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PeriodicidadOrderByRelevanceInput = {
    fields: PeriodicidadOrderByRelevanceFieldEnum | PeriodicidadOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type PeriodicidadCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type PeriodicidadAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PeriodicidadMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type PeriodicidadMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type PeriodicidadSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type LugarOrderByRelevanceInput = {
    fields: LugarOrderByRelevanceFieldEnum | LugarOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type LugarCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    cupo?: SortOrder
  }

  export type LugarAvgOrderByAggregateInput = {
    id?: SortOrder
    cupo?: SortOrder
  }

  export type LugarMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    cupo?: SortOrder
  }

  export type LugarMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    cupo?: SortOrder
  }

  export type LugarSumOrderByAggregateInput = {
    id?: SortOrder
    cupo?: SortOrder
  }

  export type OferenteActividadOrderByRelevanceInput = {
    fields: OferenteActividadOrderByRelevanceFieldEnum | OferenteActividadOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type OferenteActividadCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    docente?: SortOrder
    actividadId?: SortOrder
  }

  export type OferenteActividadAvgOrderByAggregateInput = {
    id?: SortOrder
    actividadId?: SortOrder
  }

  export type OferenteActividadMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    docente?: SortOrder
    actividadId?: SortOrder
  }

  export type OferenteActividadMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    docente?: SortOrder
    actividadId?: SortOrder
  }

  export type OferenteActividadSumOrderByAggregateInput = {
    id?: SortOrder
    actividadId?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type SocioComunitarioOrderByRelevanceInput = {
    fields: SocioComunitarioOrderByRelevanceFieldEnum | SocioComunitarioOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SocioComunitarioCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    activo?: SortOrder
  }

  export type SocioComunitarioAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SocioComunitarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    activo?: SortOrder
  }

  export type SocioComunitarioMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    activo?: SortOrder
  }

  export type SocioComunitarioSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type ProyectoOrderByRelevanceInput = {
    fields: ProyectoOrderByRelevanceFieldEnum | ProyectoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ProyectoCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type ProyectoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ProyectoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type ProyectoMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type ProyectoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ArchivoOrderByRelevanceInput = {
    fields: ArchivoOrderByRelevanceFieldEnum | ArchivoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ArchivoCountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    descripcion?: SortOrder
    actividadId?: SortOrder
  }

  export type ArchivoAvgOrderByAggregateInput = {
    id?: SortOrder
    actividadId?: SortOrder
  }

  export type ArchivoMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    descripcion?: SortOrder
    actividadId?: SortOrder
  }

  export type ArchivoMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    descripcion?: SortOrder
    actividadId?: SortOrder
  }

  export type ArchivoSumOrderByAggregateInput = {
    id?: SortOrder
    actividadId?: SortOrder
  }

  export type BeneficiarioOrderByRelevanceInput = {
    fields: BeneficiarioOrderByRelevanceFieldEnum | BeneficiarioOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type BeneficiarioCountOrderByAggregateInput = {
    id?: SortOrder
    caracterizacion?: SortOrder
    actividadId?: SortOrder
  }

  export type BeneficiarioAvgOrderByAggregateInput = {
    id?: SortOrder
    actividadId?: SortOrder
  }

  export type BeneficiarioMaxOrderByAggregateInput = {
    id?: SortOrder
    caracterizacion?: SortOrder
    actividadId?: SortOrder
  }

  export type BeneficiarioMinOrderByAggregateInput = {
    id?: SortOrder
    caracterizacion?: SortOrder
    actividadId?: SortOrder
  }

  export type BeneficiarioSumOrderByAggregateInput = {
    id?: SortOrder
    actividadId?: SortOrder
  }

  export type CitaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<CitaCreateWithoutUsuarioInput, CitaUncheckedCreateWithoutUsuarioInput> | CitaCreateWithoutUsuarioInput[] | CitaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CitaCreateOrConnectWithoutUsuarioInput | CitaCreateOrConnectWithoutUsuarioInput[]
    createMany?: CitaCreateManyUsuarioInputEnvelope
    connect?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
  }

  export type CitaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<CitaCreateWithoutUsuarioInput, CitaUncheckedCreateWithoutUsuarioInput> | CitaCreateWithoutUsuarioInput[] | CitaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CitaCreateOrConnectWithoutUsuarioInput | CitaCreateOrConnectWithoutUsuarioInput[]
    createMany?: CitaCreateManyUsuarioInputEnvelope
    connect?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type CitaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<CitaCreateWithoutUsuarioInput, CitaUncheckedCreateWithoutUsuarioInput> | CitaCreateWithoutUsuarioInput[] | CitaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CitaCreateOrConnectWithoutUsuarioInput | CitaCreateOrConnectWithoutUsuarioInput[]
    upsert?: CitaUpsertWithWhereUniqueWithoutUsuarioInput | CitaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: CitaCreateManyUsuarioInputEnvelope
    set?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    disconnect?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    delete?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    connect?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    update?: CitaUpdateWithWhereUniqueWithoutUsuarioInput | CitaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: CitaUpdateManyWithWhereWithoutUsuarioInput | CitaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: CitaScalarWhereInput | CitaScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CitaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<CitaCreateWithoutUsuarioInput, CitaUncheckedCreateWithoutUsuarioInput> | CitaCreateWithoutUsuarioInput[] | CitaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CitaCreateOrConnectWithoutUsuarioInput | CitaCreateOrConnectWithoutUsuarioInput[]
    upsert?: CitaUpsertWithWhereUniqueWithoutUsuarioInput | CitaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: CitaCreateManyUsuarioInputEnvelope
    set?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    disconnect?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    delete?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    connect?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    update?: CitaUpdateWithWhereUniqueWithoutUsuarioInput | CitaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: CitaUpdateManyWithWhereWithoutUsuarioInput | CitaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: CitaScalarWhereInput | CitaScalarWhereInput[]
  }

  export type LugarCreateNestedOneWithoutActividadesInput = {
    create?: XOR<LugarCreateWithoutActividadesInput, LugarUncheckedCreateWithoutActividadesInput>
    connectOrCreate?: LugarCreateOrConnectWithoutActividadesInput
    connect?: LugarWhereUniqueInput
  }

  export type PeriodicidadCreateNestedOneWithoutActividadesInput = {
    create?: XOR<PeriodicidadCreateWithoutActividadesInput, PeriodicidadUncheckedCreateWithoutActividadesInput>
    connectOrCreate?: PeriodicidadCreateOrConnectWithoutActividadesInput
    connect?: PeriodicidadWhereUniqueInput
  }

  export type ProyectoCreateNestedOneWithoutActividadesInput = {
    create?: XOR<ProyectoCreateWithoutActividadesInput, ProyectoUncheckedCreateWithoutActividadesInput>
    connectOrCreate?: ProyectoCreateOrConnectWithoutActividadesInput
    connect?: ProyectoWhereUniqueInput
  }

  export type TipoActividadCreateNestedOneWithoutActividadesInput = {
    create?: XOR<TipoActividadCreateWithoutActividadesInput, TipoActividadUncheckedCreateWithoutActividadesInput>
    connectOrCreate?: TipoActividadCreateOrConnectWithoutActividadesInput
    connect?: TipoActividadWhereUniqueInput
  }

  export type ArchivoCreateNestedManyWithoutActividadInput = {
    create?: XOR<ArchivoCreateWithoutActividadInput, ArchivoUncheckedCreateWithoutActividadInput> | ArchivoCreateWithoutActividadInput[] | ArchivoUncheckedCreateWithoutActividadInput[]
    connectOrCreate?: ArchivoCreateOrConnectWithoutActividadInput | ArchivoCreateOrConnectWithoutActividadInput[]
    createMany?: ArchivoCreateManyActividadInputEnvelope
    connect?: ArchivoWhereUniqueInput | ArchivoWhereUniqueInput[]
  }

  export type BeneficiarioCreateNestedManyWithoutActividadInput = {
    create?: XOR<BeneficiarioCreateWithoutActividadInput, BeneficiarioUncheckedCreateWithoutActividadInput> | BeneficiarioCreateWithoutActividadInput[] | BeneficiarioUncheckedCreateWithoutActividadInput[]
    connectOrCreate?: BeneficiarioCreateOrConnectWithoutActividadInput | BeneficiarioCreateOrConnectWithoutActividadInput[]
    createMany?: BeneficiarioCreateManyActividadInputEnvelope
    connect?: BeneficiarioWhereUniqueInput | BeneficiarioWhereUniqueInput[]
  }

  export type CitaCreateNestedManyWithoutActividadInput = {
    create?: XOR<CitaCreateWithoutActividadInput, CitaUncheckedCreateWithoutActividadInput> | CitaCreateWithoutActividadInput[] | CitaUncheckedCreateWithoutActividadInput[]
    connectOrCreate?: CitaCreateOrConnectWithoutActividadInput | CitaCreateOrConnectWithoutActividadInput[]
    createMany?: CitaCreateManyActividadInputEnvelope
    connect?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
  }

  export type OferenteActividadCreateNestedManyWithoutActividadInput = {
    create?: XOR<OferenteActividadCreateWithoutActividadInput, OferenteActividadUncheckedCreateWithoutActividadInput> | OferenteActividadCreateWithoutActividadInput[] | OferenteActividadUncheckedCreateWithoutActividadInput[]
    connectOrCreate?: OferenteActividadCreateOrConnectWithoutActividadInput | OferenteActividadCreateOrConnectWithoutActividadInput[]
    createMany?: OferenteActividadCreateManyActividadInputEnvelope
    connect?: OferenteActividadWhereUniqueInput | OferenteActividadWhereUniqueInput[]
  }

  export type ArchivoUncheckedCreateNestedManyWithoutActividadInput = {
    create?: XOR<ArchivoCreateWithoutActividadInput, ArchivoUncheckedCreateWithoutActividadInput> | ArchivoCreateWithoutActividadInput[] | ArchivoUncheckedCreateWithoutActividadInput[]
    connectOrCreate?: ArchivoCreateOrConnectWithoutActividadInput | ArchivoCreateOrConnectWithoutActividadInput[]
    createMany?: ArchivoCreateManyActividadInputEnvelope
    connect?: ArchivoWhereUniqueInput | ArchivoWhereUniqueInput[]
  }

  export type BeneficiarioUncheckedCreateNestedManyWithoutActividadInput = {
    create?: XOR<BeneficiarioCreateWithoutActividadInput, BeneficiarioUncheckedCreateWithoutActividadInput> | BeneficiarioCreateWithoutActividadInput[] | BeneficiarioUncheckedCreateWithoutActividadInput[]
    connectOrCreate?: BeneficiarioCreateOrConnectWithoutActividadInput | BeneficiarioCreateOrConnectWithoutActividadInput[]
    createMany?: BeneficiarioCreateManyActividadInputEnvelope
    connect?: BeneficiarioWhereUniqueInput | BeneficiarioWhereUniqueInput[]
  }

  export type CitaUncheckedCreateNestedManyWithoutActividadInput = {
    create?: XOR<CitaCreateWithoutActividadInput, CitaUncheckedCreateWithoutActividadInput> | CitaCreateWithoutActividadInput[] | CitaUncheckedCreateWithoutActividadInput[]
    connectOrCreate?: CitaCreateOrConnectWithoutActividadInput | CitaCreateOrConnectWithoutActividadInput[]
    createMany?: CitaCreateManyActividadInputEnvelope
    connect?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
  }

  export type OferenteActividadUncheckedCreateNestedManyWithoutActividadInput = {
    create?: XOR<OferenteActividadCreateWithoutActividadInput, OferenteActividadUncheckedCreateWithoutActividadInput> | OferenteActividadCreateWithoutActividadInput[] | OferenteActividadUncheckedCreateWithoutActividadInput[]
    connectOrCreate?: OferenteActividadCreateOrConnectWithoutActividadInput | OferenteActividadCreateOrConnectWithoutActividadInput[]
    createMany?: OferenteActividadCreateManyActividadInputEnvelope
    connect?: OferenteActividadWhereUniqueInput | OferenteActividadWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type LugarUpdateOneWithoutActividadesNestedInput = {
    create?: XOR<LugarCreateWithoutActividadesInput, LugarUncheckedCreateWithoutActividadesInput>
    connectOrCreate?: LugarCreateOrConnectWithoutActividadesInput
    upsert?: LugarUpsertWithoutActividadesInput
    disconnect?: LugarWhereInput | boolean
    delete?: LugarWhereInput | boolean
    connect?: LugarWhereUniqueInput
    update?: XOR<XOR<LugarUpdateToOneWithWhereWithoutActividadesInput, LugarUpdateWithoutActividadesInput>, LugarUncheckedUpdateWithoutActividadesInput>
  }

  export type PeriodicidadUpdateOneRequiredWithoutActividadesNestedInput = {
    create?: XOR<PeriodicidadCreateWithoutActividadesInput, PeriodicidadUncheckedCreateWithoutActividadesInput>
    connectOrCreate?: PeriodicidadCreateOrConnectWithoutActividadesInput
    upsert?: PeriodicidadUpsertWithoutActividadesInput
    connect?: PeriodicidadWhereUniqueInput
    update?: XOR<XOR<PeriodicidadUpdateToOneWithWhereWithoutActividadesInput, PeriodicidadUpdateWithoutActividadesInput>, PeriodicidadUncheckedUpdateWithoutActividadesInput>
  }

  export type ProyectoUpdateOneWithoutActividadesNestedInput = {
    create?: XOR<ProyectoCreateWithoutActividadesInput, ProyectoUncheckedCreateWithoutActividadesInput>
    connectOrCreate?: ProyectoCreateOrConnectWithoutActividadesInput
    upsert?: ProyectoUpsertWithoutActividadesInput
    disconnect?: ProyectoWhereInput | boolean
    delete?: ProyectoWhereInput | boolean
    connect?: ProyectoWhereUniqueInput
    update?: XOR<XOR<ProyectoUpdateToOneWithWhereWithoutActividadesInput, ProyectoUpdateWithoutActividadesInput>, ProyectoUncheckedUpdateWithoutActividadesInput>
  }

  export type TipoActividadUpdateOneRequiredWithoutActividadesNestedInput = {
    create?: XOR<TipoActividadCreateWithoutActividadesInput, TipoActividadUncheckedCreateWithoutActividadesInput>
    connectOrCreate?: TipoActividadCreateOrConnectWithoutActividadesInput
    upsert?: TipoActividadUpsertWithoutActividadesInput
    connect?: TipoActividadWhereUniqueInput
    update?: XOR<XOR<TipoActividadUpdateToOneWithWhereWithoutActividadesInput, TipoActividadUpdateWithoutActividadesInput>, TipoActividadUncheckedUpdateWithoutActividadesInput>
  }

  export type ArchivoUpdateManyWithoutActividadNestedInput = {
    create?: XOR<ArchivoCreateWithoutActividadInput, ArchivoUncheckedCreateWithoutActividadInput> | ArchivoCreateWithoutActividadInput[] | ArchivoUncheckedCreateWithoutActividadInput[]
    connectOrCreate?: ArchivoCreateOrConnectWithoutActividadInput | ArchivoCreateOrConnectWithoutActividadInput[]
    upsert?: ArchivoUpsertWithWhereUniqueWithoutActividadInput | ArchivoUpsertWithWhereUniqueWithoutActividadInput[]
    createMany?: ArchivoCreateManyActividadInputEnvelope
    set?: ArchivoWhereUniqueInput | ArchivoWhereUniqueInput[]
    disconnect?: ArchivoWhereUniqueInput | ArchivoWhereUniqueInput[]
    delete?: ArchivoWhereUniqueInput | ArchivoWhereUniqueInput[]
    connect?: ArchivoWhereUniqueInput | ArchivoWhereUniqueInput[]
    update?: ArchivoUpdateWithWhereUniqueWithoutActividadInput | ArchivoUpdateWithWhereUniqueWithoutActividadInput[]
    updateMany?: ArchivoUpdateManyWithWhereWithoutActividadInput | ArchivoUpdateManyWithWhereWithoutActividadInput[]
    deleteMany?: ArchivoScalarWhereInput | ArchivoScalarWhereInput[]
  }

  export type BeneficiarioUpdateManyWithoutActividadNestedInput = {
    create?: XOR<BeneficiarioCreateWithoutActividadInput, BeneficiarioUncheckedCreateWithoutActividadInput> | BeneficiarioCreateWithoutActividadInput[] | BeneficiarioUncheckedCreateWithoutActividadInput[]
    connectOrCreate?: BeneficiarioCreateOrConnectWithoutActividadInput | BeneficiarioCreateOrConnectWithoutActividadInput[]
    upsert?: BeneficiarioUpsertWithWhereUniqueWithoutActividadInput | BeneficiarioUpsertWithWhereUniqueWithoutActividadInput[]
    createMany?: BeneficiarioCreateManyActividadInputEnvelope
    set?: BeneficiarioWhereUniqueInput | BeneficiarioWhereUniqueInput[]
    disconnect?: BeneficiarioWhereUniqueInput | BeneficiarioWhereUniqueInput[]
    delete?: BeneficiarioWhereUniqueInput | BeneficiarioWhereUniqueInput[]
    connect?: BeneficiarioWhereUniqueInput | BeneficiarioWhereUniqueInput[]
    update?: BeneficiarioUpdateWithWhereUniqueWithoutActividadInput | BeneficiarioUpdateWithWhereUniqueWithoutActividadInput[]
    updateMany?: BeneficiarioUpdateManyWithWhereWithoutActividadInput | BeneficiarioUpdateManyWithWhereWithoutActividadInput[]
    deleteMany?: BeneficiarioScalarWhereInput | BeneficiarioScalarWhereInput[]
  }

  export type CitaUpdateManyWithoutActividadNestedInput = {
    create?: XOR<CitaCreateWithoutActividadInput, CitaUncheckedCreateWithoutActividadInput> | CitaCreateWithoutActividadInput[] | CitaUncheckedCreateWithoutActividadInput[]
    connectOrCreate?: CitaCreateOrConnectWithoutActividadInput | CitaCreateOrConnectWithoutActividadInput[]
    upsert?: CitaUpsertWithWhereUniqueWithoutActividadInput | CitaUpsertWithWhereUniqueWithoutActividadInput[]
    createMany?: CitaCreateManyActividadInputEnvelope
    set?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    disconnect?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    delete?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    connect?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    update?: CitaUpdateWithWhereUniqueWithoutActividadInput | CitaUpdateWithWhereUniqueWithoutActividadInput[]
    updateMany?: CitaUpdateManyWithWhereWithoutActividadInput | CitaUpdateManyWithWhereWithoutActividadInput[]
    deleteMany?: CitaScalarWhereInput | CitaScalarWhereInput[]
  }

  export type OferenteActividadUpdateManyWithoutActividadNestedInput = {
    create?: XOR<OferenteActividadCreateWithoutActividadInput, OferenteActividadUncheckedCreateWithoutActividadInput> | OferenteActividadCreateWithoutActividadInput[] | OferenteActividadUncheckedCreateWithoutActividadInput[]
    connectOrCreate?: OferenteActividadCreateOrConnectWithoutActividadInput | OferenteActividadCreateOrConnectWithoutActividadInput[]
    upsert?: OferenteActividadUpsertWithWhereUniqueWithoutActividadInput | OferenteActividadUpsertWithWhereUniqueWithoutActividadInput[]
    createMany?: OferenteActividadCreateManyActividadInputEnvelope
    set?: OferenteActividadWhereUniqueInput | OferenteActividadWhereUniqueInput[]
    disconnect?: OferenteActividadWhereUniqueInput | OferenteActividadWhereUniqueInput[]
    delete?: OferenteActividadWhereUniqueInput | OferenteActividadWhereUniqueInput[]
    connect?: OferenteActividadWhereUniqueInput | OferenteActividadWhereUniqueInput[]
    update?: OferenteActividadUpdateWithWhereUniqueWithoutActividadInput | OferenteActividadUpdateWithWhereUniqueWithoutActividadInput[]
    updateMany?: OferenteActividadUpdateManyWithWhereWithoutActividadInput | OferenteActividadUpdateManyWithWhereWithoutActividadInput[]
    deleteMany?: OferenteActividadScalarWhereInput | OferenteActividadScalarWhereInput[]
  }

  export type ArchivoUncheckedUpdateManyWithoutActividadNestedInput = {
    create?: XOR<ArchivoCreateWithoutActividadInput, ArchivoUncheckedCreateWithoutActividadInput> | ArchivoCreateWithoutActividadInput[] | ArchivoUncheckedCreateWithoutActividadInput[]
    connectOrCreate?: ArchivoCreateOrConnectWithoutActividadInput | ArchivoCreateOrConnectWithoutActividadInput[]
    upsert?: ArchivoUpsertWithWhereUniqueWithoutActividadInput | ArchivoUpsertWithWhereUniqueWithoutActividadInput[]
    createMany?: ArchivoCreateManyActividadInputEnvelope
    set?: ArchivoWhereUniqueInput | ArchivoWhereUniqueInput[]
    disconnect?: ArchivoWhereUniqueInput | ArchivoWhereUniqueInput[]
    delete?: ArchivoWhereUniqueInput | ArchivoWhereUniqueInput[]
    connect?: ArchivoWhereUniqueInput | ArchivoWhereUniqueInput[]
    update?: ArchivoUpdateWithWhereUniqueWithoutActividadInput | ArchivoUpdateWithWhereUniqueWithoutActividadInput[]
    updateMany?: ArchivoUpdateManyWithWhereWithoutActividadInput | ArchivoUpdateManyWithWhereWithoutActividadInput[]
    deleteMany?: ArchivoScalarWhereInput | ArchivoScalarWhereInput[]
  }

  export type BeneficiarioUncheckedUpdateManyWithoutActividadNestedInput = {
    create?: XOR<BeneficiarioCreateWithoutActividadInput, BeneficiarioUncheckedCreateWithoutActividadInput> | BeneficiarioCreateWithoutActividadInput[] | BeneficiarioUncheckedCreateWithoutActividadInput[]
    connectOrCreate?: BeneficiarioCreateOrConnectWithoutActividadInput | BeneficiarioCreateOrConnectWithoutActividadInput[]
    upsert?: BeneficiarioUpsertWithWhereUniqueWithoutActividadInput | BeneficiarioUpsertWithWhereUniqueWithoutActividadInput[]
    createMany?: BeneficiarioCreateManyActividadInputEnvelope
    set?: BeneficiarioWhereUniqueInput | BeneficiarioWhereUniqueInput[]
    disconnect?: BeneficiarioWhereUniqueInput | BeneficiarioWhereUniqueInput[]
    delete?: BeneficiarioWhereUniqueInput | BeneficiarioWhereUniqueInput[]
    connect?: BeneficiarioWhereUniqueInput | BeneficiarioWhereUniqueInput[]
    update?: BeneficiarioUpdateWithWhereUniqueWithoutActividadInput | BeneficiarioUpdateWithWhereUniqueWithoutActividadInput[]
    updateMany?: BeneficiarioUpdateManyWithWhereWithoutActividadInput | BeneficiarioUpdateManyWithWhereWithoutActividadInput[]
    deleteMany?: BeneficiarioScalarWhereInput | BeneficiarioScalarWhereInput[]
  }

  export type CitaUncheckedUpdateManyWithoutActividadNestedInput = {
    create?: XOR<CitaCreateWithoutActividadInput, CitaUncheckedCreateWithoutActividadInput> | CitaCreateWithoutActividadInput[] | CitaUncheckedCreateWithoutActividadInput[]
    connectOrCreate?: CitaCreateOrConnectWithoutActividadInput | CitaCreateOrConnectWithoutActividadInput[]
    upsert?: CitaUpsertWithWhereUniqueWithoutActividadInput | CitaUpsertWithWhereUniqueWithoutActividadInput[]
    createMany?: CitaCreateManyActividadInputEnvelope
    set?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    disconnect?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    delete?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    connect?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    update?: CitaUpdateWithWhereUniqueWithoutActividadInput | CitaUpdateWithWhereUniqueWithoutActividadInput[]
    updateMany?: CitaUpdateManyWithWhereWithoutActividadInput | CitaUpdateManyWithWhereWithoutActividadInput[]
    deleteMany?: CitaScalarWhereInput | CitaScalarWhereInput[]
  }

  export type OferenteActividadUncheckedUpdateManyWithoutActividadNestedInput = {
    create?: XOR<OferenteActividadCreateWithoutActividadInput, OferenteActividadUncheckedCreateWithoutActividadInput> | OferenteActividadCreateWithoutActividadInput[] | OferenteActividadUncheckedCreateWithoutActividadInput[]
    connectOrCreate?: OferenteActividadCreateOrConnectWithoutActividadInput | OferenteActividadCreateOrConnectWithoutActividadInput[]
    upsert?: OferenteActividadUpsertWithWhereUniqueWithoutActividadInput | OferenteActividadUpsertWithWhereUniqueWithoutActividadInput[]
    createMany?: OferenteActividadCreateManyActividadInputEnvelope
    set?: OferenteActividadWhereUniqueInput | OferenteActividadWhereUniqueInput[]
    disconnect?: OferenteActividadWhereUniqueInput | OferenteActividadWhereUniqueInput[]
    delete?: OferenteActividadWhereUniqueInput | OferenteActividadWhereUniqueInput[]
    connect?: OferenteActividadWhereUniqueInput | OferenteActividadWhereUniqueInput[]
    update?: OferenteActividadUpdateWithWhereUniqueWithoutActividadInput | OferenteActividadUpdateWithWhereUniqueWithoutActividadInput[]
    updateMany?: OferenteActividadUpdateManyWithWhereWithoutActividadInput | OferenteActividadUpdateManyWithWhereWithoutActividadInput[]
    deleteMany?: OferenteActividadScalarWhereInput | OferenteActividadScalarWhereInput[]
  }

  export type ActividadCreateNestedOneWithoutCitasInput = {
    create?: XOR<ActividadCreateWithoutCitasInput, ActividadUncheckedCreateWithoutCitasInput>
    connectOrCreate?: ActividadCreateOrConnectWithoutCitasInput
    connect?: ActividadWhereUniqueInput
  }

  export type LugarCreateNestedOneWithoutCitasInput = {
    create?: XOR<LugarCreateWithoutCitasInput, LugarUncheckedCreateWithoutCitasInput>
    connectOrCreate?: LugarCreateOrConnectWithoutCitasInput
    connect?: LugarWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutCitasInput = {
    create?: XOR<UsuarioCreateWithoutCitasInput, UsuarioUncheckedCreateWithoutCitasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCitasInput
    connect?: UsuarioWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type ActividadUpdateOneRequiredWithoutCitasNestedInput = {
    create?: XOR<ActividadCreateWithoutCitasInput, ActividadUncheckedCreateWithoutCitasInput>
    connectOrCreate?: ActividadCreateOrConnectWithoutCitasInput
    upsert?: ActividadUpsertWithoutCitasInput
    connect?: ActividadWhereUniqueInput
    update?: XOR<XOR<ActividadUpdateToOneWithWhereWithoutCitasInput, ActividadUpdateWithoutCitasInput>, ActividadUncheckedUpdateWithoutCitasInput>
  }

  export type LugarUpdateOneRequiredWithoutCitasNestedInput = {
    create?: XOR<LugarCreateWithoutCitasInput, LugarUncheckedCreateWithoutCitasInput>
    connectOrCreate?: LugarCreateOrConnectWithoutCitasInput
    upsert?: LugarUpsertWithoutCitasInput
    connect?: LugarWhereUniqueInput
    update?: XOR<XOR<LugarUpdateToOneWithWhereWithoutCitasInput, LugarUpdateWithoutCitasInput>, LugarUncheckedUpdateWithoutCitasInput>
  }

  export type UsuarioUpdateOneWithoutCitasNestedInput = {
    create?: XOR<UsuarioCreateWithoutCitasInput, UsuarioUncheckedCreateWithoutCitasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCitasInput
    upsert?: UsuarioUpsertWithoutCitasInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutCitasInput, UsuarioUpdateWithoutCitasInput>, UsuarioUncheckedUpdateWithoutCitasInput>
  }

  export type ActividadCreateNestedManyWithoutTipoInput = {
    create?: XOR<ActividadCreateWithoutTipoInput, ActividadUncheckedCreateWithoutTipoInput> | ActividadCreateWithoutTipoInput[] | ActividadUncheckedCreateWithoutTipoInput[]
    connectOrCreate?: ActividadCreateOrConnectWithoutTipoInput | ActividadCreateOrConnectWithoutTipoInput[]
    createMany?: ActividadCreateManyTipoInputEnvelope
    connect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
  }

  export type ActividadUncheckedCreateNestedManyWithoutTipoInput = {
    create?: XOR<ActividadCreateWithoutTipoInput, ActividadUncheckedCreateWithoutTipoInput> | ActividadCreateWithoutTipoInput[] | ActividadUncheckedCreateWithoutTipoInput[]
    connectOrCreate?: ActividadCreateOrConnectWithoutTipoInput | ActividadCreateOrConnectWithoutTipoInput[]
    createMany?: ActividadCreateManyTipoInputEnvelope
    connect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
  }

  export type ActividadUpdateManyWithoutTipoNestedInput = {
    create?: XOR<ActividadCreateWithoutTipoInput, ActividadUncheckedCreateWithoutTipoInput> | ActividadCreateWithoutTipoInput[] | ActividadUncheckedCreateWithoutTipoInput[]
    connectOrCreate?: ActividadCreateOrConnectWithoutTipoInput | ActividadCreateOrConnectWithoutTipoInput[]
    upsert?: ActividadUpsertWithWhereUniqueWithoutTipoInput | ActividadUpsertWithWhereUniqueWithoutTipoInput[]
    createMany?: ActividadCreateManyTipoInputEnvelope
    set?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    disconnect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    delete?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    connect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    update?: ActividadUpdateWithWhereUniqueWithoutTipoInput | ActividadUpdateWithWhereUniqueWithoutTipoInput[]
    updateMany?: ActividadUpdateManyWithWhereWithoutTipoInput | ActividadUpdateManyWithWhereWithoutTipoInput[]
    deleteMany?: ActividadScalarWhereInput | ActividadScalarWhereInput[]
  }

  export type ActividadUncheckedUpdateManyWithoutTipoNestedInput = {
    create?: XOR<ActividadCreateWithoutTipoInput, ActividadUncheckedCreateWithoutTipoInput> | ActividadCreateWithoutTipoInput[] | ActividadUncheckedCreateWithoutTipoInput[]
    connectOrCreate?: ActividadCreateOrConnectWithoutTipoInput | ActividadCreateOrConnectWithoutTipoInput[]
    upsert?: ActividadUpsertWithWhereUniqueWithoutTipoInput | ActividadUpsertWithWhereUniqueWithoutTipoInput[]
    createMany?: ActividadCreateManyTipoInputEnvelope
    set?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    disconnect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    delete?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    connect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    update?: ActividadUpdateWithWhereUniqueWithoutTipoInput | ActividadUpdateWithWhereUniqueWithoutTipoInput[]
    updateMany?: ActividadUpdateManyWithWhereWithoutTipoInput | ActividadUpdateManyWithWhereWithoutTipoInput[]
    deleteMany?: ActividadScalarWhereInput | ActividadScalarWhereInput[]
  }

  export type ActividadCreateNestedManyWithoutPeriodicidadInput = {
    create?: XOR<ActividadCreateWithoutPeriodicidadInput, ActividadUncheckedCreateWithoutPeriodicidadInput> | ActividadCreateWithoutPeriodicidadInput[] | ActividadUncheckedCreateWithoutPeriodicidadInput[]
    connectOrCreate?: ActividadCreateOrConnectWithoutPeriodicidadInput | ActividadCreateOrConnectWithoutPeriodicidadInput[]
    createMany?: ActividadCreateManyPeriodicidadInputEnvelope
    connect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
  }

  export type ActividadUncheckedCreateNestedManyWithoutPeriodicidadInput = {
    create?: XOR<ActividadCreateWithoutPeriodicidadInput, ActividadUncheckedCreateWithoutPeriodicidadInput> | ActividadCreateWithoutPeriodicidadInput[] | ActividadUncheckedCreateWithoutPeriodicidadInput[]
    connectOrCreate?: ActividadCreateOrConnectWithoutPeriodicidadInput | ActividadCreateOrConnectWithoutPeriodicidadInput[]
    createMany?: ActividadCreateManyPeriodicidadInputEnvelope
    connect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
  }

  export type ActividadUpdateManyWithoutPeriodicidadNestedInput = {
    create?: XOR<ActividadCreateWithoutPeriodicidadInput, ActividadUncheckedCreateWithoutPeriodicidadInput> | ActividadCreateWithoutPeriodicidadInput[] | ActividadUncheckedCreateWithoutPeriodicidadInput[]
    connectOrCreate?: ActividadCreateOrConnectWithoutPeriodicidadInput | ActividadCreateOrConnectWithoutPeriodicidadInput[]
    upsert?: ActividadUpsertWithWhereUniqueWithoutPeriodicidadInput | ActividadUpsertWithWhereUniqueWithoutPeriodicidadInput[]
    createMany?: ActividadCreateManyPeriodicidadInputEnvelope
    set?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    disconnect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    delete?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    connect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    update?: ActividadUpdateWithWhereUniqueWithoutPeriodicidadInput | ActividadUpdateWithWhereUniqueWithoutPeriodicidadInput[]
    updateMany?: ActividadUpdateManyWithWhereWithoutPeriodicidadInput | ActividadUpdateManyWithWhereWithoutPeriodicidadInput[]
    deleteMany?: ActividadScalarWhereInput | ActividadScalarWhereInput[]
  }

  export type ActividadUncheckedUpdateManyWithoutPeriodicidadNestedInput = {
    create?: XOR<ActividadCreateWithoutPeriodicidadInput, ActividadUncheckedCreateWithoutPeriodicidadInput> | ActividadCreateWithoutPeriodicidadInput[] | ActividadUncheckedCreateWithoutPeriodicidadInput[]
    connectOrCreate?: ActividadCreateOrConnectWithoutPeriodicidadInput | ActividadCreateOrConnectWithoutPeriodicidadInput[]
    upsert?: ActividadUpsertWithWhereUniqueWithoutPeriodicidadInput | ActividadUpsertWithWhereUniqueWithoutPeriodicidadInput[]
    createMany?: ActividadCreateManyPeriodicidadInputEnvelope
    set?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    disconnect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    delete?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    connect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    update?: ActividadUpdateWithWhereUniqueWithoutPeriodicidadInput | ActividadUpdateWithWhereUniqueWithoutPeriodicidadInput[]
    updateMany?: ActividadUpdateManyWithWhereWithoutPeriodicidadInput | ActividadUpdateManyWithWhereWithoutPeriodicidadInput[]
    deleteMany?: ActividadScalarWhereInput | ActividadScalarWhereInput[]
  }

  export type ActividadCreateNestedManyWithoutLugarInput = {
    create?: XOR<ActividadCreateWithoutLugarInput, ActividadUncheckedCreateWithoutLugarInput> | ActividadCreateWithoutLugarInput[] | ActividadUncheckedCreateWithoutLugarInput[]
    connectOrCreate?: ActividadCreateOrConnectWithoutLugarInput | ActividadCreateOrConnectWithoutLugarInput[]
    createMany?: ActividadCreateManyLugarInputEnvelope
    connect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
  }

  export type CitaCreateNestedManyWithoutLugarInput = {
    create?: XOR<CitaCreateWithoutLugarInput, CitaUncheckedCreateWithoutLugarInput> | CitaCreateWithoutLugarInput[] | CitaUncheckedCreateWithoutLugarInput[]
    connectOrCreate?: CitaCreateOrConnectWithoutLugarInput | CitaCreateOrConnectWithoutLugarInput[]
    createMany?: CitaCreateManyLugarInputEnvelope
    connect?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
  }

  export type ActividadUncheckedCreateNestedManyWithoutLugarInput = {
    create?: XOR<ActividadCreateWithoutLugarInput, ActividadUncheckedCreateWithoutLugarInput> | ActividadCreateWithoutLugarInput[] | ActividadUncheckedCreateWithoutLugarInput[]
    connectOrCreate?: ActividadCreateOrConnectWithoutLugarInput | ActividadCreateOrConnectWithoutLugarInput[]
    createMany?: ActividadCreateManyLugarInputEnvelope
    connect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
  }

  export type CitaUncheckedCreateNestedManyWithoutLugarInput = {
    create?: XOR<CitaCreateWithoutLugarInput, CitaUncheckedCreateWithoutLugarInput> | CitaCreateWithoutLugarInput[] | CitaUncheckedCreateWithoutLugarInput[]
    connectOrCreate?: CitaCreateOrConnectWithoutLugarInput | CitaCreateOrConnectWithoutLugarInput[]
    createMany?: CitaCreateManyLugarInputEnvelope
    connect?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
  }

  export type ActividadUpdateManyWithoutLugarNestedInput = {
    create?: XOR<ActividadCreateWithoutLugarInput, ActividadUncheckedCreateWithoutLugarInput> | ActividadCreateWithoutLugarInput[] | ActividadUncheckedCreateWithoutLugarInput[]
    connectOrCreate?: ActividadCreateOrConnectWithoutLugarInput | ActividadCreateOrConnectWithoutLugarInput[]
    upsert?: ActividadUpsertWithWhereUniqueWithoutLugarInput | ActividadUpsertWithWhereUniqueWithoutLugarInput[]
    createMany?: ActividadCreateManyLugarInputEnvelope
    set?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    disconnect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    delete?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    connect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    update?: ActividadUpdateWithWhereUniqueWithoutLugarInput | ActividadUpdateWithWhereUniqueWithoutLugarInput[]
    updateMany?: ActividadUpdateManyWithWhereWithoutLugarInput | ActividadUpdateManyWithWhereWithoutLugarInput[]
    deleteMany?: ActividadScalarWhereInput | ActividadScalarWhereInput[]
  }

  export type CitaUpdateManyWithoutLugarNestedInput = {
    create?: XOR<CitaCreateWithoutLugarInput, CitaUncheckedCreateWithoutLugarInput> | CitaCreateWithoutLugarInput[] | CitaUncheckedCreateWithoutLugarInput[]
    connectOrCreate?: CitaCreateOrConnectWithoutLugarInput | CitaCreateOrConnectWithoutLugarInput[]
    upsert?: CitaUpsertWithWhereUniqueWithoutLugarInput | CitaUpsertWithWhereUniqueWithoutLugarInput[]
    createMany?: CitaCreateManyLugarInputEnvelope
    set?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    disconnect?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    delete?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    connect?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    update?: CitaUpdateWithWhereUniqueWithoutLugarInput | CitaUpdateWithWhereUniqueWithoutLugarInput[]
    updateMany?: CitaUpdateManyWithWhereWithoutLugarInput | CitaUpdateManyWithWhereWithoutLugarInput[]
    deleteMany?: CitaScalarWhereInput | CitaScalarWhereInput[]
  }

  export type ActividadUncheckedUpdateManyWithoutLugarNestedInput = {
    create?: XOR<ActividadCreateWithoutLugarInput, ActividadUncheckedCreateWithoutLugarInput> | ActividadCreateWithoutLugarInput[] | ActividadUncheckedCreateWithoutLugarInput[]
    connectOrCreate?: ActividadCreateOrConnectWithoutLugarInput | ActividadCreateOrConnectWithoutLugarInput[]
    upsert?: ActividadUpsertWithWhereUniqueWithoutLugarInput | ActividadUpsertWithWhereUniqueWithoutLugarInput[]
    createMany?: ActividadCreateManyLugarInputEnvelope
    set?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    disconnect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    delete?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    connect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    update?: ActividadUpdateWithWhereUniqueWithoutLugarInput | ActividadUpdateWithWhereUniqueWithoutLugarInput[]
    updateMany?: ActividadUpdateManyWithWhereWithoutLugarInput | ActividadUpdateManyWithWhereWithoutLugarInput[]
    deleteMany?: ActividadScalarWhereInput | ActividadScalarWhereInput[]
  }

  export type CitaUncheckedUpdateManyWithoutLugarNestedInput = {
    create?: XOR<CitaCreateWithoutLugarInput, CitaUncheckedCreateWithoutLugarInput> | CitaCreateWithoutLugarInput[] | CitaUncheckedCreateWithoutLugarInput[]
    connectOrCreate?: CitaCreateOrConnectWithoutLugarInput | CitaCreateOrConnectWithoutLugarInput[]
    upsert?: CitaUpsertWithWhereUniqueWithoutLugarInput | CitaUpsertWithWhereUniqueWithoutLugarInput[]
    createMany?: CitaCreateManyLugarInputEnvelope
    set?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    disconnect?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    delete?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    connect?: CitaWhereUniqueInput | CitaWhereUniqueInput[]
    update?: CitaUpdateWithWhereUniqueWithoutLugarInput | CitaUpdateWithWhereUniqueWithoutLugarInput[]
    updateMany?: CitaUpdateManyWithWhereWithoutLugarInput | CitaUpdateManyWithWhereWithoutLugarInput[]
    deleteMany?: CitaScalarWhereInput | CitaScalarWhereInput[]
  }

  export type ActividadCreateNestedOneWithoutOferentesInput = {
    create?: XOR<ActividadCreateWithoutOferentesInput, ActividadUncheckedCreateWithoutOferentesInput>
    connectOrCreate?: ActividadCreateOrConnectWithoutOferentesInput
    connect?: ActividadWhereUniqueInput
  }

  export type ActividadUpdateOneRequiredWithoutOferentesNestedInput = {
    create?: XOR<ActividadCreateWithoutOferentesInput, ActividadUncheckedCreateWithoutOferentesInput>
    connectOrCreate?: ActividadCreateOrConnectWithoutOferentesInput
    upsert?: ActividadUpsertWithoutOferentesInput
    connect?: ActividadWhereUniqueInput
    update?: XOR<XOR<ActividadUpdateToOneWithWhereWithoutOferentesInput, ActividadUpdateWithoutOferentesInput>, ActividadUncheckedUpdateWithoutOferentesInput>
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type ActividadCreateNestedManyWithoutProyectoInput = {
    create?: XOR<ActividadCreateWithoutProyectoInput, ActividadUncheckedCreateWithoutProyectoInput> | ActividadCreateWithoutProyectoInput[] | ActividadUncheckedCreateWithoutProyectoInput[]
    connectOrCreate?: ActividadCreateOrConnectWithoutProyectoInput | ActividadCreateOrConnectWithoutProyectoInput[]
    createMany?: ActividadCreateManyProyectoInputEnvelope
    connect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
  }

  export type ActividadUncheckedCreateNestedManyWithoutProyectoInput = {
    create?: XOR<ActividadCreateWithoutProyectoInput, ActividadUncheckedCreateWithoutProyectoInput> | ActividadCreateWithoutProyectoInput[] | ActividadUncheckedCreateWithoutProyectoInput[]
    connectOrCreate?: ActividadCreateOrConnectWithoutProyectoInput | ActividadCreateOrConnectWithoutProyectoInput[]
    createMany?: ActividadCreateManyProyectoInputEnvelope
    connect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
  }

  export type ActividadUpdateManyWithoutProyectoNestedInput = {
    create?: XOR<ActividadCreateWithoutProyectoInput, ActividadUncheckedCreateWithoutProyectoInput> | ActividadCreateWithoutProyectoInput[] | ActividadUncheckedCreateWithoutProyectoInput[]
    connectOrCreate?: ActividadCreateOrConnectWithoutProyectoInput | ActividadCreateOrConnectWithoutProyectoInput[]
    upsert?: ActividadUpsertWithWhereUniqueWithoutProyectoInput | ActividadUpsertWithWhereUniqueWithoutProyectoInput[]
    createMany?: ActividadCreateManyProyectoInputEnvelope
    set?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    disconnect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    delete?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    connect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    update?: ActividadUpdateWithWhereUniqueWithoutProyectoInput | ActividadUpdateWithWhereUniqueWithoutProyectoInput[]
    updateMany?: ActividadUpdateManyWithWhereWithoutProyectoInput | ActividadUpdateManyWithWhereWithoutProyectoInput[]
    deleteMany?: ActividadScalarWhereInput | ActividadScalarWhereInput[]
  }

  export type ActividadUncheckedUpdateManyWithoutProyectoNestedInput = {
    create?: XOR<ActividadCreateWithoutProyectoInput, ActividadUncheckedCreateWithoutProyectoInput> | ActividadCreateWithoutProyectoInput[] | ActividadUncheckedCreateWithoutProyectoInput[]
    connectOrCreate?: ActividadCreateOrConnectWithoutProyectoInput | ActividadCreateOrConnectWithoutProyectoInput[]
    upsert?: ActividadUpsertWithWhereUniqueWithoutProyectoInput | ActividadUpsertWithWhereUniqueWithoutProyectoInput[]
    createMany?: ActividadCreateManyProyectoInputEnvelope
    set?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    disconnect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    delete?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    connect?: ActividadWhereUniqueInput | ActividadWhereUniqueInput[]
    update?: ActividadUpdateWithWhereUniqueWithoutProyectoInput | ActividadUpdateWithWhereUniqueWithoutProyectoInput[]
    updateMany?: ActividadUpdateManyWithWhereWithoutProyectoInput | ActividadUpdateManyWithWhereWithoutProyectoInput[]
    deleteMany?: ActividadScalarWhereInput | ActividadScalarWhereInput[]
  }

  export type ActividadCreateNestedOneWithoutArchivosInput = {
    create?: XOR<ActividadCreateWithoutArchivosInput, ActividadUncheckedCreateWithoutArchivosInput>
    connectOrCreate?: ActividadCreateOrConnectWithoutArchivosInput
    connect?: ActividadWhereUniqueInput
  }

  export type ActividadUpdateOneRequiredWithoutArchivosNestedInput = {
    create?: XOR<ActividadCreateWithoutArchivosInput, ActividadUncheckedCreateWithoutArchivosInput>
    connectOrCreate?: ActividadCreateOrConnectWithoutArchivosInput
    upsert?: ActividadUpsertWithoutArchivosInput
    connect?: ActividadWhereUniqueInput
    update?: XOR<XOR<ActividadUpdateToOneWithWhereWithoutArchivosInput, ActividadUpdateWithoutArchivosInput>, ActividadUncheckedUpdateWithoutArchivosInput>
  }

  export type ActividadCreateNestedOneWithoutBeneficiariosInput = {
    create?: XOR<ActividadCreateWithoutBeneficiariosInput, ActividadUncheckedCreateWithoutBeneficiariosInput>
    connectOrCreate?: ActividadCreateOrConnectWithoutBeneficiariosInput
    connect?: ActividadWhereUniqueInput
  }

  export type ActividadUpdateOneRequiredWithoutBeneficiariosNestedInput = {
    create?: XOR<ActividadCreateWithoutBeneficiariosInput, ActividadUncheckedCreateWithoutBeneficiariosInput>
    connectOrCreate?: ActividadCreateOrConnectWithoutBeneficiariosInput
    upsert?: ActividadUpsertWithoutBeneficiariosInput
    connect?: ActividadWhereUniqueInput
    update?: XOR<XOR<ActividadUpdateToOneWithWhereWithoutBeneficiariosInput, ActividadUpdateWithoutBeneficiariosInput>, ActividadUncheckedUpdateWithoutBeneficiariosInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type CitaCreateWithoutUsuarioInput = {
    fecha: Date | string
    hora: Date | string
    actividad: ActividadCreateNestedOneWithoutCitasInput
    lugar: LugarCreateNestedOneWithoutCitasInput
  }

  export type CitaUncheckedCreateWithoutUsuarioInput = {
    id?: number
    actividadId: number
    lugarId: number
    fecha: Date | string
    hora: Date | string
  }

  export type CitaCreateOrConnectWithoutUsuarioInput = {
    where: CitaWhereUniqueInput
    create: XOR<CitaCreateWithoutUsuarioInput, CitaUncheckedCreateWithoutUsuarioInput>
  }

  export type CitaCreateManyUsuarioInputEnvelope = {
    data: CitaCreateManyUsuarioInput | CitaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type CitaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: CitaWhereUniqueInput
    update: XOR<CitaUpdateWithoutUsuarioInput, CitaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<CitaCreateWithoutUsuarioInput, CitaUncheckedCreateWithoutUsuarioInput>
  }

  export type CitaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: CitaWhereUniqueInput
    data: XOR<CitaUpdateWithoutUsuarioInput, CitaUncheckedUpdateWithoutUsuarioInput>
  }

  export type CitaUpdateManyWithWhereWithoutUsuarioInput = {
    where: CitaScalarWhereInput
    data: XOR<CitaUpdateManyMutationInput, CitaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type CitaScalarWhereInput = {
    AND?: CitaScalarWhereInput | CitaScalarWhereInput[]
    OR?: CitaScalarWhereInput[]
    NOT?: CitaScalarWhereInput | CitaScalarWhereInput[]
    id?: IntFilter<"Cita"> | number
    actividadId?: IntFilter<"Cita"> | number
    lugarId?: IntFilter<"Cita"> | number
    fecha?: DateTimeFilter<"Cita"> | Date | string
    hora?: DateTimeFilter<"Cita"> | Date | string
    usuarioId?: IntNullableFilter<"Cita"> | number | null
  }

  export type LugarCreateWithoutActividadesInput = {
    nombre: string
    cupo?: number | null
    citas?: CitaCreateNestedManyWithoutLugarInput
  }

  export type LugarUncheckedCreateWithoutActividadesInput = {
    id?: number
    nombre: string
    cupo?: number | null
    citas?: CitaUncheckedCreateNestedManyWithoutLugarInput
  }

  export type LugarCreateOrConnectWithoutActividadesInput = {
    where: LugarWhereUniqueInput
    create: XOR<LugarCreateWithoutActividadesInput, LugarUncheckedCreateWithoutActividadesInput>
  }

  export type PeriodicidadCreateWithoutActividadesInput = {
    nombre: string
  }

  export type PeriodicidadUncheckedCreateWithoutActividadesInput = {
    id?: number
    nombre: string
  }

  export type PeriodicidadCreateOrConnectWithoutActividadesInput = {
    where: PeriodicidadWhereUniqueInput
    create: XOR<PeriodicidadCreateWithoutActividadesInput, PeriodicidadUncheckedCreateWithoutActividadesInput>
  }

  export type ProyectoCreateWithoutActividadesInput = {
    nombre: string
  }

  export type ProyectoUncheckedCreateWithoutActividadesInput = {
    id?: number
    nombre: string
  }

  export type ProyectoCreateOrConnectWithoutActividadesInput = {
    where: ProyectoWhereUniqueInput
    create: XOR<ProyectoCreateWithoutActividadesInput, ProyectoUncheckedCreateWithoutActividadesInput>
  }

  export type TipoActividadCreateWithoutActividadesInput = {
    nombre: string
    descripcion: string
  }

  export type TipoActividadUncheckedCreateWithoutActividadesInput = {
    id?: number
    nombre: string
    descripcion: string
  }

  export type TipoActividadCreateOrConnectWithoutActividadesInput = {
    where: TipoActividadWhereUniqueInput
    create: XOR<TipoActividadCreateWithoutActividadesInput, TipoActividadUncheckedCreateWithoutActividadesInput>
  }

  export type ArchivoCreateWithoutActividadInput = {
    url: string
    descripcion?: string | null
  }

  export type ArchivoUncheckedCreateWithoutActividadInput = {
    id?: number
    url: string
    descripcion?: string | null
  }

  export type ArchivoCreateOrConnectWithoutActividadInput = {
    where: ArchivoWhereUniqueInput
    create: XOR<ArchivoCreateWithoutActividadInput, ArchivoUncheckedCreateWithoutActividadInput>
  }

  export type ArchivoCreateManyActividadInputEnvelope = {
    data: ArchivoCreateManyActividadInput | ArchivoCreateManyActividadInput[]
    skipDuplicates?: boolean
  }

  export type BeneficiarioCreateWithoutActividadInput = {
    caracterizacion: string
  }

  export type BeneficiarioUncheckedCreateWithoutActividadInput = {
    id?: number
    caracterizacion: string
  }

  export type BeneficiarioCreateOrConnectWithoutActividadInput = {
    where: BeneficiarioWhereUniqueInput
    create: XOR<BeneficiarioCreateWithoutActividadInput, BeneficiarioUncheckedCreateWithoutActividadInput>
  }

  export type BeneficiarioCreateManyActividadInputEnvelope = {
    data: BeneficiarioCreateManyActividadInput | BeneficiarioCreateManyActividadInput[]
    skipDuplicates?: boolean
  }

  export type CitaCreateWithoutActividadInput = {
    fecha: Date | string
    hora: Date | string
    lugar: LugarCreateNestedOneWithoutCitasInput
    usuario?: UsuarioCreateNestedOneWithoutCitasInput
  }

  export type CitaUncheckedCreateWithoutActividadInput = {
    id?: number
    lugarId: number
    fecha: Date | string
    hora: Date | string
    usuarioId?: number | null
  }

  export type CitaCreateOrConnectWithoutActividadInput = {
    where: CitaWhereUniqueInput
    create: XOR<CitaCreateWithoutActividadInput, CitaUncheckedCreateWithoutActividadInput>
  }

  export type CitaCreateManyActividadInputEnvelope = {
    data: CitaCreateManyActividadInput | CitaCreateManyActividadInput[]
    skipDuplicates?: boolean
  }

  export type OferenteActividadCreateWithoutActividadInput = {
    nombre: string
    docente: string
  }

  export type OferenteActividadUncheckedCreateWithoutActividadInput = {
    id?: number
    nombre: string
    docente: string
  }

  export type OferenteActividadCreateOrConnectWithoutActividadInput = {
    where: OferenteActividadWhereUniqueInput
    create: XOR<OferenteActividadCreateWithoutActividadInput, OferenteActividadUncheckedCreateWithoutActividadInput>
  }

  export type OferenteActividadCreateManyActividadInputEnvelope = {
    data: OferenteActividadCreateManyActividadInput | OferenteActividadCreateManyActividadInput[]
    skipDuplicates?: boolean
  }

  export type LugarUpsertWithoutActividadesInput = {
    update: XOR<LugarUpdateWithoutActividadesInput, LugarUncheckedUpdateWithoutActividadesInput>
    create: XOR<LugarCreateWithoutActividadesInput, LugarUncheckedCreateWithoutActividadesInput>
    where?: LugarWhereInput
  }

  export type LugarUpdateToOneWithWhereWithoutActividadesInput = {
    where?: LugarWhereInput
    data: XOR<LugarUpdateWithoutActividadesInput, LugarUncheckedUpdateWithoutActividadesInput>
  }

  export type LugarUpdateWithoutActividadesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    citas?: CitaUpdateManyWithoutLugarNestedInput
  }

  export type LugarUncheckedUpdateWithoutActividadesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    citas?: CitaUncheckedUpdateManyWithoutLugarNestedInput
  }

  export type PeriodicidadUpsertWithoutActividadesInput = {
    update: XOR<PeriodicidadUpdateWithoutActividadesInput, PeriodicidadUncheckedUpdateWithoutActividadesInput>
    create: XOR<PeriodicidadCreateWithoutActividadesInput, PeriodicidadUncheckedCreateWithoutActividadesInput>
    where?: PeriodicidadWhereInput
  }

  export type PeriodicidadUpdateToOneWithWhereWithoutActividadesInput = {
    where?: PeriodicidadWhereInput
    data: XOR<PeriodicidadUpdateWithoutActividadesInput, PeriodicidadUncheckedUpdateWithoutActividadesInput>
  }

  export type PeriodicidadUpdateWithoutActividadesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type PeriodicidadUncheckedUpdateWithoutActividadesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ProyectoUpsertWithoutActividadesInput = {
    update: XOR<ProyectoUpdateWithoutActividadesInput, ProyectoUncheckedUpdateWithoutActividadesInput>
    create: XOR<ProyectoCreateWithoutActividadesInput, ProyectoUncheckedCreateWithoutActividadesInput>
    where?: ProyectoWhereInput
  }

  export type ProyectoUpdateToOneWithWhereWithoutActividadesInput = {
    where?: ProyectoWhereInput
    data: XOR<ProyectoUpdateWithoutActividadesInput, ProyectoUncheckedUpdateWithoutActividadesInput>
  }

  export type ProyectoUpdateWithoutActividadesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ProyectoUncheckedUpdateWithoutActividadesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type TipoActividadUpsertWithoutActividadesInput = {
    update: XOR<TipoActividadUpdateWithoutActividadesInput, TipoActividadUncheckedUpdateWithoutActividadesInput>
    create: XOR<TipoActividadCreateWithoutActividadesInput, TipoActividadUncheckedCreateWithoutActividadesInput>
    where?: TipoActividadWhereInput
  }

  export type TipoActividadUpdateToOneWithWhereWithoutActividadesInput = {
    where?: TipoActividadWhereInput
    data: XOR<TipoActividadUpdateWithoutActividadesInput, TipoActividadUncheckedUpdateWithoutActividadesInput>
  }

  export type TipoActividadUpdateWithoutActividadesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type TipoActividadUncheckedUpdateWithoutActividadesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type ArchivoUpsertWithWhereUniqueWithoutActividadInput = {
    where: ArchivoWhereUniqueInput
    update: XOR<ArchivoUpdateWithoutActividadInput, ArchivoUncheckedUpdateWithoutActividadInput>
    create: XOR<ArchivoCreateWithoutActividadInput, ArchivoUncheckedCreateWithoutActividadInput>
  }

  export type ArchivoUpdateWithWhereUniqueWithoutActividadInput = {
    where: ArchivoWhereUniqueInput
    data: XOR<ArchivoUpdateWithoutActividadInput, ArchivoUncheckedUpdateWithoutActividadInput>
  }

  export type ArchivoUpdateManyWithWhereWithoutActividadInput = {
    where: ArchivoScalarWhereInput
    data: XOR<ArchivoUpdateManyMutationInput, ArchivoUncheckedUpdateManyWithoutActividadInput>
  }

  export type ArchivoScalarWhereInput = {
    AND?: ArchivoScalarWhereInput | ArchivoScalarWhereInput[]
    OR?: ArchivoScalarWhereInput[]
    NOT?: ArchivoScalarWhereInput | ArchivoScalarWhereInput[]
    id?: IntFilter<"Archivo"> | number
    url?: StringFilter<"Archivo"> | string
    descripcion?: StringNullableFilter<"Archivo"> | string | null
    actividadId?: IntFilter<"Archivo"> | number
  }

  export type BeneficiarioUpsertWithWhereUniqueWithoutActividadInput = {
    where: BeneficiarioWhereUniqueInput
    update: XOR<BeneficiarioUpdateWithoutActividadInput, BeneficiarioUncheckedUpdateWithoutActividadInput>
    create: XOR<BeneficiarioCreateWithoutActividadInput, BeneficiarioUncheckedCreateWithoutActividadInput>
  }

  export type BeneficiarioUpdateWithWhereUniqueWithoutActividadInput = {
    where: BeneficiarioWhereUniqueInput
    data: XOR<BeneficiarioUpdateWithoutActividadInput, BeneficiarioUncheckedUpdateWithoutActividadInput>
  }

  export type BeneficiarioUpdateManyWithWhereWithoutActividadInput = {
    where: BeneficiarioScalarWhereInput
    data: XOR<BeneficiarioUpdateManyMutationInput, BeneficiarioUncheckedUpdateManyWithoutActividadInput>
  }

  export type BeneficiarioScalarWhereInput = {
    AND?: BeneficiarioScalarWhereInput | BeneficiarioScalarWhereInput[]
    OR?: BeneficiarioScalarWhereInput[]
    NOT?: BeneficiarioScalarWhereInput | BeneficiarioScalarWhereInput[]
    id?: IntFilter<"Beneficiario"> | number
    caracterizacion?: StringFilter<"Beneficiario"> | string
    actividadId?: IntFilter<"Beneficiario"> | number
  }

  export type CitaUpsertWithWhereUniqueWithoutActividadInput = {
    where: CitaWhereUniqueInput
    update: XOR<CitaUpdateWithoutActividadInput, CitaUncheckedUpdateWithoutActividadInput>
    create: XOR<CitaCreateWithoutActividadInput, CitaUncheckedCreateWithoutActividadInput>
  }

  export type CitaUpdateWithWhereUniqueWithoutActividadInput = {
    where: CitaWhereUniqueInput
    data: XOR<CitaUpdateWithoutActividadInput, CitaUncheckedUpdateWithoutActividadInput>
  }

  export type CitaUpdateManyWithWhereWithoutActividadInput = {
    where: CitaScalarWhereInput
    data: XOR<CitaUpdateManyMutationInput, CitaUncheckedUpdateManyWithoutActividadInput>
  }

  export type OferenteActividadUpsertWithWhereUniqueWithoutActividadInput = {
    where: OferenteActividadWhereUniqueInput
    update: XOR<OferenteActividadUpdateWithoutActividadInput, OferenteActividadUncheckedUpdateWithoutActividadInput>
    create: XOR<OferenteActividadCreateWithoutActividadInput, OferenteActividadUncheckedCreateWithoutActividadInput>
  }

  export type OferenteActividadUpdateWithWhereUniqueWithoutActividadInput = {
    where: OferenteActividadWhereUniqueInput
    data: XOR<OferenteActividadUpdateWithoutActividadInput, OferenteActividadUncheckedUpdateWithoutActividadInput>
  }

  export type OferenteActividadUpdateManyWithWhereWithoutActividadInput = {
    where: OferenteActividadScalarWhereInput
    data: XOR<OferenteActividadUpdateManyMutationInput, OferenteActividadUncheckedUpdateManyWithoutActividadInput>
  }

  export type OferenteActividadScalarWhereInput = {
    AND?: OferenteActividadScalarWhereInput | OferenteActividadScalarWhereInput[]
    OR?: OferenteActividadScalarWhereInput[]
    NOT?: OferenteActividadScalarWhereInput | OferenteActividadScalarWhereInput[]
    id?: IntFilter<"OferenteActividad"> | number
    nombre?: StringFilter<"OferenteActividad"> | string
    docente?: StringFilter<"OferenteActividad"> | string
    actividadId?: IntFilter<"OferenteActividad"> | number
  }

  export type ActividadCreateWithoutCitasInput = {
    nombre: string
    descripcion?: string | null
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    socioId?: number | null
    creadoPor?: number | null
    lugar?: LugarCreateNestedOneWithoutActividadesInput
    periodicidad: PeriodicidadCreateNestedOneWithoutActividadesInput
    proyecto?: ProyectoCreateNestedOneWithoutActividadesInput
    tipo: TipoActividadCreateNestedOneWithoutActividadesInput
    archivos?: ArchivoCreateNestedManyWithoutActividadInput
    beneficiarios?: BeneficiarioCreateNestedManyWithoutActividadInput
    oferentes?: OferenteActividadCreateNestedManyWithoutActividadInput
  }

  export type ActividadUncheckedCreateWithoutCitasInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    tipoId: number
    periodicidadId: number
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    lugarId?: number | null
    socioId?: number | null
    proyectoId?: number | null
    creadoPor?: number | null
    archivos?: ArchivoUncheckedCreateNestedManyWithoutActividadInput
    beneficiarios?: BeneficiarioUncheckedCreateNestedManyWithoutActividadInput
    oferentes?: OferenteActividadUncheckedCreateNestedManyWithoutActividadInput
  }

  export type ActividadCreateOrConnectWithoutCitasInput = {
    where: ActividadWhereUniqueInput
    create: XOR<ActividadCreateWithoutCitasInput, ActividadUncheckedCreateWithoutCitasInput>
  }

  export type LugarCreateWithoutCitasInput = {
    nombre: string
    cupo?: number | null
    actividades?: ActividadCreateNestedManyWithoutLugarInput
  }

  export type LugarUncheckedCreateWithoutCitasInput = {
    id?: number
    nombre: string
    cupo?: number | null
    actividades?: ActividadUncheckedCreateNestedManyWithoutLugarInput
  }

  export type LugarCreateOrConnectWithoutCitasInput = {
    where: LugarWhereUniqueInput
    create: XOR<LugarCreateWithoutCitasInput, LugarUncheckedCreateWithoutCitasInput>
  }

  export type UsuarioCreateWithoutCitasInput = {
    nombre: string
    email: string
    password: string
    rol?: string | null
    permisos?: NullableJsonNullValueInput | InputJsonValue
    resetToken?: string | null
    resetTokenExp?: Date | string | null
  }

  export type UsuarioUncheckedCreateWithoutCitasInput = {
    id?: number
    nombre: string
    email: string
    password: string
    rol?: string | null
    permisos?: NullableJsonNullValueInput | InputJsonValue
    resetToken?: string | null
    resetTokenExp?: Date | string | null
  }

  export type UsuarioCreateOrConnectWithoutCitasInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutCitasInput, UsuarioUncheckedCreateWithoutCitasInput>
  }

  export type ActividadUpsertWithoutCitasInput = {
    update: XOR<ActividadUpdateWithoutCitasInput, ActividadUncheckedUpdateWithoutCitasInput>
    create: XOR<ActividadCreateWithoutCitasInput, ActividadUncheckedCreateWithoutCitasInput>
    where?: ActividadWhereInput
  }

  export type ActividadUpdateToOneWithWhereWithoutCitasInput = {
    where?: ActividadWhereInput
    data: XOR<ActividadUpdateWithoutCitasInput, ActividadUncheckedUpdateWithoutCitasInput>
  }

  export type ActividadUpdateWithoutCitasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    lugar?: LugarUpdateOneWithoutActividadesNestedInput
    periodicidad?: PeriodicidadUpdateOneRequiredWithoutActividadesNestedInput
    proyecto?: ProyectoUpdateOneWithoutActividadesNestedInput
    tipo?: TipoActividadUpdateOneRequiredWithoutActividadesNestedInput
    archivos?: ArchivoUpdateManyWithoutActividadNestedInput
    beneficiarios?: BeneficiarioUpdateManyWithoutActividadNestedInput
    oferentes?: OferenteActividadUpdateManyWithoutActividadNestedInput
  }

  export type ActividadUncheckedUpdateWithoutCitasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    periodicidadId?: IntFieldUpdateOperationsInput | number
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    lugarId?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    proyectoId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    archivos?: ArchivoUncheckedUpdateManyWithoutActividadNestedInput
    beneficiarios?: BeneficiarioUncheckedUpdateManyWithoutActividadNestedInput
    oferentes?: OferenteActividadUncheckedUpdateManyWithoutActividadNestedInput
  }

  export type LugarUpsertWithoutCitasInput = {
    update: XOR<LugarUpdateWithoutCitasInput, LugarUncheckedUpdateWithoutCitasInput>
    create: XOR<LugarCreateWithoutCitasInput, LugarUncheckedCreateWithoutCitasInput>
    where?: LugarWhereInput
  }

  export type LugarUpdateToOneWithWhereWithoutCitasInput = {
    where?: LugarWhereInput
    data: XOR<LugarUpdateWithoutCitasInput, LugarUncheckedUpdateWithoutCitasInput>
  }

  export type LugarUpdateWithoutCitasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    actividades?: ActividadUpdateManyWithoutLugarNestedInput
  }

  export type LugarUncheckedUpdateWithoutCitasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    actividades?: ActividadUncheckedUpdateManyWithoutLugarNestedInput
  }

  export type UsuarioUpsertWithoutCitasInput = {
    update: XOR<UsuarioUpdateWithoutCitasInput, UsuarioUncheckedUpdateWithoutCitasInput>
    create: XOR<UsuarioCreateWithoutCitasInput, UsuarioUncheckedCreateWithoutCitasInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutCitasInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutCitasInput, UsuarioUncheckedUpdateWithoutCitasInput>
  }

  export type UsuarioUpdateWithoutCitasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    permisos?: NullableJsonNullValueInput | InputJsonValue
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UsuarioUncheckedUpdateWithoutCitasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    permisos?: NullableJsonNullValueInput | InputJsonValue
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ActividadCreateWithoutTipoInput = {
    nombre: string
    descripcion?: string | null
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    socioId?: number | null
    creadoPor?: number | null
    lugar?: LugarCreateNestedOneWithoutActividadesInput
    periodicidad: PeriodicidadCreateNestedOneWithoutActividadesInput
    proyecto?: ProyectoCreateNestedOneWithoutActividadesInput
    archivos?: ArchivoCreateNestedManyWithoutActividadInput
    beneficiarios?: BeneficiarioCreateNestedManyWithoutActividadInput
    citas?: CitaCreateNestedManyWithoutActividadInput
    oferentes?: OferenteActividadCreateNestedManyWithoutActividadInput
  }

  export type ActividadUncheckedCreateWithoutTipoInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    periodicidadId: number
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    lugarId?: number | null
    socioId?: number | null
    proyectoId?: number | null
    creadoPor?: number | null
    archivos?: ArchivoUncheckedCreateNestedManyWithoutActividadInput
    beneficiarios?: BeneficiarioUncheckedCreateNestedManyWithoutActividadInput
    citas?: CitaUncheckedCreateNestedManyWithoutActividadInput
    oferentes?: OferenteActividadUncheckedCreateNestedManyWithoutActividadInput
  }

  export type ActividadCreateOrConnectWithoutTipoInput = {
    where: ActividadWhereUniqueInput
    create: XOR<ActividadCreateWithoutTipoInput, ActividadUncheckedCreateWithoutTipoInput>
  }

  export type ActividadCreateManyTipoInputEnvelope = {
    data: ActividadCreateManyTipoInput | ActividadCreateManyTipoInput[]
    skipDuplicates?: boolean
  }

  export type ActividadUpsertWithWhereUniqueWithoutTipoInput = {
    where: ActividadWhereUniqueInput
    update: XOR<ActividadUpdateWithoutTipoInput, ActividadUncheckedUpdateWithoutTipoInput>
    create: XOR<ActividadCreateWithoutTipoInput, ActividadUncheckedCreateWithoutTipoInput>
  }

  export type ActividadUpdateWithWhereUniqueWithoutTipoInput = {
    where: ActividadWhereUniqueInput
    data: XOR<ActividadUpdateWithoutTipoInput, ActividadUncheckedUpdateWithoutTipoInput>
  }

  export type ActividadUpdateManyWithWhereWithoutTipoInput = {
    where: ActividadScalarWhereInput
    data: XOR<ActividadUpdateManyMutationInput, ActividadUncheckedUpdateManyWithoutTipoInput>
  }

  export type ActividadScalarWhereInput = {
    AND?: ActividadScalarWhereInput | ActividadScalarWhereInput[]
    OR?: ActividadScalarWhereInput[]
    NOT?: ActividadScalarWhereInput | ActividadScalarWhereInput[]
    id?: IntFilter<"Actividad"> | number
    nombre?: StringFilter<"Actividad"> | string
    descripcion?: StringNullableFilter<"Actividad"> | string | null
    tipoId?: IntFilter<"Actividad"> | number
    periodicidadId?: IntFilter<"Actividad"> | number
    fechaInicio?: DateTimeNullableFilter<"Actividad"> | Date | string | null
    fechaFin?: DateTimeNullableFilter<"Actividad"> | Date | string | null
    cupo?: IntNullableFilter<"Actividad"> | number | null
    lugarId?: IntNullableFilter<"Actividad"> | number | null
    socioId?: IntNullableFilter<"Actividad"> | number | null
    proyectoId?: IntNullableFilter<"Actividad"> | number | null
    creadoPor?: IntNullableFilter<"Actividad"> | number | null
  }

  export type ActividadCreateWithoutPeriodicidadInput = {
    nombre: string
    descripcion?: string | null
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    socioId?: number | null
    creadoPor?: number | null
    lugar?: LugarCreateNestedOneWithoutActividadesInput
    proyecto?: ProyectoCreateNestedOneWithoutActividadesInput
    tipo: TipoActividadCreateNestedOneWithoutActividadesInput
    archivos?: ArchivoCreateNestedManyWithoutActividadInput
    beneficiarios?: BeneficiarioCreateNestedManyWithoutActividadInput
    citas?: CitaCreateNestedManyWithoutActividadInput
    oferentes?: OferenteActividadCreateNestedManyWithoutActividadInput
  }

  export type ActividadUncheckedCreateWithoutPeriodicidadInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    tipoId: number
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    lugarId?: number | null
    socioId?: number | null
    proyectoId?: number | null
    creadoPor?: number | null
    archivos?: ArchivoUncheckedCreateNestedManyWithoutActividadInput
    beneficiarios?: BeneficiarioUncheckedCreateNestedManyWithoutActividadInput
    citas?: CitaUncheckedCreateNestedManyWithoutActividadInput
    oferentes?: OferenteActividadUncheckedCreateNestedManyWithoutActividadInput
  }

  export type ActividadCreateOrConnectWithoutPeriodicidadInput = {
    where: ActividadWhereUniqueInput
    create: XOR<ActividadCreateWithoutPeriodicidadInput, ActividadUncheckedCreateWithoutPeriodicidadInput>
  }

  export type ActividadCreateManyPeriodicidadInputEnvelope = {
    data: ActividadCreateManyPeriodicidadInput | ActividadCreateManyPeriodicidadInput[]
    skipDuplicates?: boolean
  }

  export type ActividadUpsertWithWhereUniqueWithoutPeriodicidadInput = {
    where: ActividadWhereUniqueInput
    update: XOR<ActividadUpdateWithoutPeriodicidadInput, ActividadUncheckedUpdateWithoutPeriodicidadInput>
    create: XOR<ActividadCreateWithoutPeriodicidadInput, ActividadUncheckedCreateWithoutPeriodicidadInput>
  }

  export type ActividadUpdateWithWhereUniqueWithoutPeriodicidadInput = {
    where: ActividadWhereUniqueInput
    data: XOR<ActividadUpdateWithoutPeriodicidadInput, ActividadUncheckedUpdateWithoutPeriodicidadInput>
  }

  export type ActividadUpdateManyWithWhereWithoutPeriodicidadInput = {
    where: ActividadScalarWhereInput
    data: XOR<ActividadUpdateManyMutationInput, ActividadUncheckedUpdateManyWithoutPeriodicidadInput>
  }

  export type ActividadCreateWithoutLugarInput = {
    nombre: string
    descripcion?: string | null
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    socioId?: number | null
    creadoPor?: number | null
    periodicidad: PeriodicidadCreateNestedOneWithoutActividadesInput
    proyecto?: ProyectoCreateNestedOneWithoutActividadesInput
    tipo: TipoActividadCreateNestedOneWithoutActividadesInput
    archivos?: ArchivoCreateNestedManyWithoutActividadInput
    beneficiarios?: BeneficiarioCreateNestedManyWithoutActividadInput
    citas?: CitaCreateNestedManyWithoutActividadInput
    oferentes?: OferenteActividadCreateNestedManyWithoutActividadInput
  }

  export type ActividadUncheckedCreateWithoutLugarInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    tipoId: number
    periodicidadId: number
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    socioId?: number | null
    proyectoId?: number | null
    creadoPor?: number | null
    archivos?: ArchivoUncheckedCreateNestedManyWithoutActividadInput
    beneficiarios?: BeneficiarioUncheckedCreateNestedManyWithoutActividadInput
    citas?: CitaUncheckedCreateNestedManyWithoutActividadInput
    oferentes?: OferenteActividadUncheckedCreateNestedManyWithoutActividadInput
  }

  export type ActividadCreateOrConnectWithoutLugarInput = {
    where: ActividadWhereUniqueInput
    create: XOR<ActividadCreateWithoutLugarInput, ActividadUncheckedCreateWithoutLugarInput>
  }

  export type ActividadCreateManyLugarInputEnvelope = {
    data: ActividadCreateManyLugarInput | ActividadCreateManyLugarInput[]
    skipDuplicates?: boolean
  }

  export type CitaCreateWithoutLugarInput = {
    fecha: Date | string
    hora: Date | string
    actividad: ActividadCreateNestedOneWithoutCitasInput
    usuario?: UsuarioCreateNestedOneWithoutCitasInput
  }

  export type CitaUncheckedCreateWithoutLugarInput = {
    id?: number
    actividadId: number
    fecha: Date | string
    hora: Date | string
    usuarioId?: number | null
  }

  export type CitaCreateOrConnectWithoutLugarInput = {
    where: CitaWhereUniqueInput
    create: XOR<CitaCreateWithoutLugarInput, CitaUncheckedCreateWithoutLugarInput>
  }

  export type CitaCreateManyLugarInputEnvelope = {
    data: CitaCreateManyLugarInput | CitaCreateManyLugarInput[]
    skipDuplicates?: boolean
  }

  export type ActividadUpsertWithWhereUniqueWithoutLugarInput = {
    where: ActividadWhereUniqueInput
    update: XOR<ActividadUpdateWithoutLugarInput, ActividadUncheckedUpdateWithoutLugarInput>
    create: XOR<ActividadCreateWithoutLugarInput, ActividadUncheckedCreateWithoutLugarInput>
  }

  export type ActividadUpdateWithWhereUniqueWithoutLugarInput = {
    where: ActividadWhereUniqueInput
    data: XOR<ActividadUpdateWithoutLugarInput, ActividadUncheckedUpdateWithoutLugarInput>
  }

  export type ActividadUpdateManyWithWhereWithoutLugarInput = {
    where: ActividadScalarWhereInput
    data: XOR<ActividadUpdateManyMutationInput, ActividadUncheckedUpdateManyWithoutLugarInput>
  }

  export type CitaUpsertWithWhereUniqueWithoutLugarInput = {
    where: CitaWhereUniqueInput
    update: XOR<CitaUpdateWithoutLugarInput, CitaUncheckedUpdateWithoutLugarInput>
    create: XOR<CitaCreateWithoutLugarInput, CitaUncheckedCreateWithoutLugarInput>
  }

  export type CitaUpdateWithWhereUniqueWithoutLugarInput = {
    where: CitaWhereUniqueInput
    data: XOR<CitaUpdateWithoutLugarInput, CitaUncheckedUpdateWithoutLugarInput>
  }

  export type CitaUpdateManyWithWhereWithoutLugarInput = {
    where: CitaScalarWhereInput
    data: XOR<CitaUpdateManyMutationInput, CitaUncheckedUpdateManyWithoutLugarInput>
  }

  export type ActividadCreateWithoutOferentesInput = {
    nombre: string
    descripcion?: string | null
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    socioId?: number | null
    creadoPor?: number | null
    lugar?: LugarCreateNestedOneWithoutActividadesInput
    periodicidad: PeriodicidadCreateNestedOneWithoutActividadesInput
    proyecto?: ProyectoCreateNestedOneWithoutActividadesInput
    tipo: TipoActividadCreateNestedOneWithoutActividadesInput
    archivos?: ArchivoCreateNestedManyWithoutActividadInput
    beneficiarios?: BeneficiarioCreateNestedManyWithoutActividadInput
    citas?: CitaCreateNestedManyWithoutActividadInput
  }

  export type ActividadUncheckedCreateWithoutOferentesInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    tipoId: number
    periodicidadId: number
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    lugarId?: number | null
    socioId?: number | null
    proyectoId?: number | null
    creadoPor?: number | null
    archivos?: ArchivoUncheckedCreateNestedManyWithoutActividadInput
    beneficiarios?: BeneficiarioUncheckedCreateNestedManyWithoutActividadInput
    citas?: CitaUncheckedCreateNestedManyWithoutActividadInput
  }

  export type ActividadCreateOrConnectWithoutOferentesInput = {
    where: ActividadWhereUniqueInput
    create: XOR<ActividadCreateWithoutOferentesInput, ActividadUncheckedCreateWithoutOferentesInput>
  }

  export type ActividadUpsertWithoutOferentesInput = {
    update: XOR<ActividadUpdateWithoutOferentesInput, ActividadUncheckedUpdateWithoutOferentesInput>
    create: XOR<ActividadCreateWithoutOferentesInput, ActividadUncheckedCreateWithoutOferentesInput>
    where?: ActividadWhereInput
  }

  export type ActividadUpdateToOneWithWhereWithoutOferentesInput = {
    where?: ActividadWhereInput
    data: XOR<ActividadUpdateWithoutOferentesInput, ActividadUncheckedUpdateWithoutOferentesInput>
  }

  export type ActividadUpdateWithoutOferentesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    lugar?: LugarUpdateOneWithoutActividadesNestedInput
    periodicidad?: PeriodicidadUpdateOneRequiredWithoutActividadesNestedInput
    proyecto?: ProyectoUpdateOneWithoutActividadesNestedInput
    tipo?: TipoActividadUpdateOneRequiredWithoutActividadesNestedInput
    archivos?: ArchivoUpdateManyWithoutActividadNestedInput
    beneficiarios?: BeneficiarioUpdateManyWithoutActividadNestedInput
    citas?: CitaUpdateManyWithoutActividadNestedInput
  }

  export type ActividadUncheckedUpdateWithoutOferentesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    periodicidadId?: IntFieldUpdateOperationsInput | number
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    lugarId?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    proyectoId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    archivos?: ArchivoUncheckedUpdateManyWithoutActividadNestedInput
    beneficiarios?: BeneficiarioUncheckedUpdateManyWithoutActividadNestedInput
    citas?: CitaUncheckedUpdateManyWithoutActividadNestedInput
  }

  export type ActividadCreateWithoutProyectoInput = {
    nombre: string
    descripcion?: string | null
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    socioId?: number | null
    creadoPor?: number | null
    lugar?: LugarCreateNestedOneWithoutActividadesInput
    periodicidad: PeriodicidadCreateNestedOneWithoutActividadesInput
    tipo: TipoActividadCreateNestedOneWithoutActividadesInput
    archivos?: ArchivoCreateNestedManyWithoutActividadInput
    beneficiarios?: BeneficiarioCreateNestedManyWithoutActividadInput
    citas?: CitaCreateNestedManyWithoutActividadInput
    oferentes?: OferenteActividadCreateNestedManyWithoutActividadInput
  }

  export type ActividadUncheckedCreateWithoutProyectoInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    tipoId: number
    periodicidadId: number
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    lugarId?: number | null
    socioId?: number | null
    creadoPor?: number | null
    archivos?: ArchivoUncheckedCreateNestedManyWithoutActividadInput
    beneficiarios?: BeneficiarioUncheckedCreateNestedManyWithoutActividadInput
    citas?: CitaUncheckedCreateNestedManyWithoutActividadInput
    oferentes?: OferenteActividadUncheckedCreateNestedManyWithoutActividadInput
  }

  export type ActividadCreateOrConnectWithoutProyectoInput = {
    where: ActividadWhereUniqueInput
    create: XOR<ActividadCreateWithoutProyectoInput, ActividadUncheckedCreateWithoutProyectoInput>
  }

  export type ActividadCreateManyProyectoInputEnvelope = {
    data: ActividadCreateManyProyectoInput | ActividadCreateManyProyectoInput[]
    skipDuplicates?: boolean
  }

  export type ActividadUpsertWithWhereUniqueWithoutProyectoInput = {
    where: ActividadWhereUniqueInput
    update: XOR<ActividadUpdateWithoutProyectoInput, ActividadUncheckedUpdateWithoutProyectoInput>
    create: XOR<ActividadCreateWithoutProyectoInput, ActividadUncheckedCreateWithoutProyectoInput>
  }

  export type ActividadUpdateWithWhereUniqueWithoutProyectoInput = {
    where: ActividadWhereUniqueInput
    data: XOR<ActividadUpdateWithoutProyectoInput, ActividadUncheckedUpdateWithoutProyectoInput>
  }

  export type ActividadUpdateManyWithWhereWithoutProyectoInput = {
    where: ActividadScalarWhereInput
    data: XOR<ActividadUpdateManyMutationInput, ActividadUncheckedUpdateManyWithoutProyectoInput>
  }

  export type ActividadCreateWithoutArchivosInput = {
    nombre: string
    descripcion?: string | null
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    socioId?: number | null
    creadoPor?: number | null
    lugar?: LugarCreateNestedOneWithoutActividadesInput
    periodicidad: PeriodicidadCreateNestedOneWithoutActividadesInput
    proyecto?: ProyectoCreateNestedOneWithoutActividadesInput
    tipo: TipoActividadCreateNestedOneWithoutActividadesInput
    beneficiarios?: BeneficiarioCreateNestedManyWithoutActividadInput
    citas?: CitaCreateNestedManyWithoutActividadInput
    oferentes?: OferenteActividadCreateNestedManyWithoutActividadInput
  }

  export type ActividadUncheckedCreateWithoutArchivosInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    tipoId: number
    periodicidadId: number
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    lugarId?: number | null
    socioId?: number | null
    proyectoId?: number | null
    creadoPor?: number | null
    beneficiarios?: BeneficiarioUncheckedCreateNestedManyWithoutActividadInput
    citas?: CitaUncheckedCreateNestedManyWithoutActividadInput
    oferentes?: OferenteActividadUncheckedCreateNestedManyWithoutActividadInput
  }

  export type ActividadCreateOrConnectWithoutArchivosInput = {
    where: ActividadWhereUniqueInput
    create: XOR<ActividadCreateWithoutArchivosInput, ActividadUncheckedCreateWithoutArchivosInput>
  }

  export type ActividadUpsertWithoutArchivosInput = {
    update: XOR<ActividadUpdateWithoutArchivosInput, ActividadUncheckedUpdateWithoutArchivosInput>
    create: XOR<ActividadCreateWithoutArchivosInput, ActividadUncheckedCreateWithoutArchivosInput>
    where?: ActividadWhereInput
  }

  export type ActividadUpdateToOneWithWhereWithoutArchivosInput = {
    where?: ActividadWhereInput
    data: XOR<ActividadUpdateWithoutArchivosInput, ActividadUncheckedUpdateWithoutArchivosInput>
  }

  export type ActividadUpdateWithoutArchivosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    lugar?: LugarUpdateOneWithoutActividadesNestedInput
    periodicidad?: PeriodicidadUpdateOneRequiredWithoutActividadesNestedInput
    proyecto?: ProyectoUpdateOneWithoutActividadesNestedInput
    tipo?: TipoActividadUpdateOneRequiredWithoutActividadesNestedInput
    beneficiarios?: BeneficiarioUpdateManyWithoutActividadNestedInput
    citas?: CitaUpdateManyWithoutActividadNestedInput
    oferentes?: OferenteActividadUpdateManyWithoutActividadNestedInput
  }

  export type ActividadUncheckedUpdateWithoutArchivosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    periodicidadId?: IntFieldUpdateOperationsInput | number
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    lugarId?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    proyectoId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    beneficiarios?: BeneficiarioUncheckedUpdateManyWithoutActividadNestedInput
    citas?: CitaUncheckedUpdateManyWithoutActividadNestedInput
    oferentes?: OferenteActividadUncheckedUpdateManyWithoutActividadNestedInput
  }

  export type ActividadCreateWithoutBeneficiariosInput = {
    nombre: string
    descripcion?: string | null
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    socioId?: number | null
    creadoPor?: number | null
    lugar?: LugarCreateNestedOneWithoutActividadesInput
    periodicidad: PeriodicidadCreateNestedOneWithoutActividadesInput
    proyecto?: ProyectoCreateNestedOneWithoutActividadesInput
    tipo: TipoActividadCreateNestedOneWithoutActividadesInput
    archivos?: ArchivoCreateNestedManyWithoutActividadInput
    citas?: CitaCreateNestedManyWithoutActividadInput
    oferentes?: OferenteActividadCreateNestedManyWithoutActividadInput
  }

  export type ActividadUncheckedCreateWithoutBeneficiariosInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    tipoId: number
    periodicidadId: number
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    lugarId?: number | null
    socioId?: number | null
    proyectoId?: number | null
    creadoPor?: number | null
    archivos?: ArchivoUncheckedCreateNestedManyWithoutActividadInput
    citas?: CitaUncheckedCreateNestedManyWithoutActividadInput
    oferentes?: OferenteActividadUncheckedCreateNestedManyWithoutActividadInput
  }

  export type ActividadCreateOrConnectWithoutBeneficiariosInput = {
    where: ActividadWhereUniqueInput
    create: XOR<ActividadCreateWithoutBeneficiariosInput, ActividadUncheckedCreateWithoutBeneficiariosInput>
  }

  export type ActividadUpsertWithoutBeneficiariosInput = {
    update: XOR<ActividadUpdateWithoutBeneficiariosInput, ActividadUncheckedUpdateWithoutBeneficiariosInput>
    create: XOR<ActividadCreateWithoutBeneficiariosInput, ActividadUncheckedCreateWithoutBeneficiariosInput>
    where?: ActividadWhereInput
  }

  export type ActividadUpdateToOneWithWhereWithoutBeneficiariosInput = {
    where?: ActividadWhereInput
    data: XOR<ActividadUpdateWithoutBeneficiariosInput, ActividadUncheckedUpdateWithoutBeneficiariosInput>
  }

  export type ActividadUpdateWithoutBeneficiariosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    lugar?: LugarUpdateOneWithoutActividadesNestedInput
    periodicidad?: PeriodicidadUpdateOneRequiredWithoutActividadesNestedInput
    proyecto?: ProyectoUpdateOneWithoutActividadesNestedInput
    tipo?: TipoActividadUpdateOneRequiredWithoutActividadesNestedInput
    archivos?: ArchivoUpdateManyWithoutActividadNestedInput
    citas?: CitaUpdateManyWithoutActividadNestedInput
    oferentes?: OferenteActividadUpdateManyWithoutActividadNestedInput
  }

  export type ActividadUncheckedUpdateWithoutBeneficiariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    periodicidadId?: IntFieldUpdateOperationsInput | number
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    lugarId?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    proyectoId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    archivos?: ArchivoUncheckedUpdateManyWithoutActividadNestedInput
    citas?: CitaUncheckedUpdateManyWithoutActividadNestedInput
    oferentes?: OferenteActividadUncheckedUpdateManyWithoutActividadNestedInput
  }

  export type CitaCreateManyUsuarioInput = {
    id?: number
    actividadId: number
    lugarId: number
    fecha: Date | string
    hora: Date | string
  }

  export type CitaUpdateWithoutUsuarioInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    actividad?: ActividadUpdateOneRequiredWithoutCitasNestedInput
    lugar?: LugarUpdateOneRequiredWithoutCitasNestedInput
  }

  export type CitaUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    actividadId?: IntFieldUpdateOperationsInput | number
    lugarId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CitaUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    actividadId?: IntFieldUpdateOperationsInput | number
    lugarId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArchivoCreateManyActividadInput = {
    id?: number
    url: string
    descripcion?: string | null
  }

  export type BeneficiarioCreateManyActividadInput = {
    id?: number
    caracterizacion: string
  }

  export type CitaCreateManyActividadInput = {
    id?: number
    lugarId: number
    fecha: Date | string
    hora: Date | string
    usuarioId?: number | null
  }

  export type OferenteActividadCreateManyActividadInput = {
    id?: number
    nombre: string
    docente: string
  }

  export type ArchivoUpdateWithoutActividadInput = {
    url?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArchivoUncheckedUpdateWithoutActividadInput = {
    id?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArchivoUncheckedUpdateManyWithoutActividadInput = {
    id?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BeneficiarioUpdateWithoutActividadInput = {
    caracterizacion?: StringFieldUpdateOperationsInput | string
  }

  export type BeneficiarioUncheckedUpdateWithoutActividadInput = {
    id?: IntFieldUpdateOperationsInput | number
    caracterizacion?: StringFieldUpdateOperationsInput | string
  }

  export type BeneficiarioUncheckedUpdateManyWithoutActividadInput = {
    id?: IntFieldUpdateOperationsInput | number
    caracterizacion?: StringFieldUpdateOperationsInput | string
  }

  export type CitaUpdateWithoutActividadInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    lugar?: LugarUpdateOneRequiredWithoutCitasNestedInput
    usuario?: UsuarioUpdateOneWithoutCitasNestedInput
  }

  export type CitaUncheckedUpdateWithoutActividadInput = {
    id?: IntFieldUpdateOperationsInput | number
    lugarId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CitaUncheckedUpdateManyWithoutActividadInput = {
    id?: IntFieldUpdateOperationsInput | number
    lugarId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OferenteActividadUpdateWithoutActividadInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    docente?: StringFieldUpdateOperationsInput | string
  }

  export type OferenteActividadUncheckedUpdateWithoutActividadInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    docente?: StringFieldUpdateOperationsInput | string
  }

  export type OferenteActividadUncheckedUpdateManyWithoutActividadInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    docente?: StringFieldUpdateOperationsInput | string
  }

  export type ActividadCreateManyTipoInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    periodicidadId: number
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    lugarId?: number | null
    socioId?: number | null
    proyectoId?: number | null
    creadoPor?: number | null
  }

  export type ActividadUpdateWithoutTipoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    lugar?: LugarUpdateOneWithoutActividadesNestedInput
    periodicidad?: PeriodicidadUpdateOneRequiredWithoutActividadesNestedInput
    proyecto?: ProyectoUpdateOneWithoutActividadesNestedInput
    archivos?: ArchivoUpdateManyWithoutActividadNestedInput
    beneficiarios?: BeneficiarioUpdateManyWithoutActividadNestedInput
    citas?: CitaUpdateManyWithoutActividadNestedInput
    oferentes?: OferenteActividadUpdateManyWithoutActividadNestedInput
  }

  export type ActividadUncheckedUpdateWithoutTipoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    periodicidadId?: IntFieldUpdateOperationsInput | number
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    lugarId?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    proyectoId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    archivos?: ArchivoUncheckedUpdateManyWithoutActividadNestedInput
    beneficiarios?: BeneficiarioUncheckedUpdateManyWithoutActividadNestedInput
    citas?: CitaUncheckedUpdateManyWithoutActividadNestedInput
    oferentes?: OferenteActividadUncheckedUpdateManyWithoutActividadNestedInput
  }

  export type ActividadUncheckedUpdateManyWithoutTipoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    periodicidadId?: IntFieldUpdateOperationsInput | number
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    lugarId?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    proyectoId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ActividadCreateManyPeriodicidadInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    tipoId: number
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    lugarId?: number | null
    socioId?: number | null
    proyectoId?: number | null
    creadoPor?: number | null
  }

  export type ActividadUpdateWithoutPeriodicidadInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    lugar?: LugarUpdateOneWithoutActividadesNestedInput
    proyecto?: ProyectoUpdateOneWithoutActividadesNestedInput
    tipo?: TipoActividadUpdateOneRequiredWithoutActividadesNestedInput
    archivos?: ArchivoUpdateManyWithoutActividadNestedInput
    beneficiarios?: BeneficiarioUpdateManyWithoutActividadNestedInput
    citas?: CitaUpdateManyWithoutActividadNestedInput
    oferentes?: OferenteActividadUpdateManyWithoutActividadNestedInput
  }

  export type ActividadUncheckedUpdateWithoutPeriodicidadInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    lugarId?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    proyectoId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    archivos?: ArchivoUncheckedUpdateManyWithoutActividadNestedInput
    beneficiarios?: BeneficiarioUncheckedUpdateManyWithoutActividadNestedInput
    citas?: CitaUncheckedUpdateManyWithoutActividadNestedInput
    oferentes?: OferenteActividadUncheckedUpdateManyWithoutActividadNestedInput
  }

  export type ActividadUncheckedUpdateManyWithoutPeriodicidadInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    lugarId?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    proyectoId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ActividadCreateManyLugarInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    tipoId: number
    periodicidadId: number
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    socioId?: number | null
    proyectoId?: number | null
    creadoPor?: number | null
  }

  export type CitaCreateManyLugarInput = {
    id?: number
    actividadId: number
    fecha: Date | string
    hora: Date | string
    usuarioId?: number | null
  }

  export type ActividadUpdateWithoutLugarInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    periodicidad?: PeriodicidadUpdateOneRequiredWithoutActividadesNestedInput
    proyecto?: ProyectoUpdateOneWithoutActividadesNestedInput
    tipo?: TipoActividadUpdateOneRequiredWithoutActividadesNestedInput
    archivos?: ArchivoUpdateManyWithoutActividadNestedInput
    beneficiarios?: BeneficiarioUpdateManyWithoutActividadNestedInput
    citas?: CitaUpdateManyWithoutActividadNestedInput
    oferentes?: OferenteActividadUpdateManyWithoutActividadNestedInput
  }

  export type ActividadUncheckedUpdateWithoutLugarInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    periodicidadId?: IntFieldUpdateOperationsInput | number
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    proyectoId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    archivos?: ArchivoUncheckedUpdateManyWithoutActividadNestedInput
    beneficiarios?: BeneficiarioUncheckedUpdateManyWithoutActividadNestedInput
    citas?: CitaUncheckedUpdateManyWithoutActividadNestedInput
    oferentes?: OferenteActividadUncheckedUpdateManyWithoutActividadNestedInput
  }

  export type ActividadUncheckedUpdateManyWithoutLugarInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    periodicidadId?: IntFieldUpdateOperationsInput | number
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    proyectoId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CitaUpdateWithoutLugarInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    actividad?: ActividadUpdateOneRequiredWithoutCitasNestedInput
    usuario?: UsuarioUpdateOneWithoutCitasNestedInput
  }

  export type CitaUncheckedUpdateWithoutLugarInput = {
    id?: IntFieldUpdateOperationsInput | number
    actividadId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CitaUncheckedUpdateManyWithoutLugarInput = {
    id?: IntFieldUpdateOperationsInput | number
    actividadId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ActividadCreateManyProyectoInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    tipoId: number
    periodicidadId: number
    fechaInicio?: Date | string | null
    fechaFin?: Date | string | null
    cupo?: number | null
    lugarId?: number | null
    socioId?: number | null
    creadoPor?: number | null
  }

  export type ActividadUpdateWithoutProyectoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    lugar?: LugarUpdateOneWithoutActividadesNestedInput
    periodicidad?: PeriodicidadUpdateOneRequiredWithoutActividadesNestedInput
    tipo?: TipoActividadUpdateOneRequiredWithoutActividadesNestedInput
    archivos?: ArchivoUpdateManyWithoutActividadNestedInput
    beneficiarios?: BeneficiarioUpdateManyWithoutActividadNestedInput
    citas?: CitaUpdateManyWithoutActividadNestedInput
    oferentes?: OferenteActividadUpdateManyWithoutActividadNestedInput
  }

  export type ActividadUncheckedUpdateWithoutProyectoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    periodicidadId?: IntFieldUpdateOperationsInput | number
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    lugarId?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
    archivos?: ArchivoUncheckedUpdateManyWithoutActividadNestedInput
    beneficiarios?: BeneficiarioUncheckedUpdateManyWithoutActividadNestedInput
    citas?: CitaUncheckedUpdateManyWithoutActividadNestedInput
    oferentes?: OferenteActividadUncheckedUpdateManyWithoutActividadNestedInput
  }

  export type ActividadUncheckedUpdateManyWithoutProyectoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    periodicidadId?: IntFieldUpdateOperationsInput | number
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cupo?: NullableIntFieldUpdateOperationsInput | number | null
    lugarId?: NullableIntFieldUpdateOperationsInput | number | null
    socioId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoPor?: NullableIntFieldUpdateOperationsInput | number | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}